%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1504.m00.i125.n034.S.c10.168292310 Flat medical icons.eps
%%Creator: Adobe Illustrator(R) 18.1
%%For: ??????? ??????
%%CreationDate: 4/19/2015
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.1.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.1.1 x446 R agm 4.7721 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c014 79.156821, 2014/08/29-03:07:50        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">shablon 450x450</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-04-19T10:39:26+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-04-19T10:39:26+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-04-19T10:39:26+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FWndI0Z3YIiAszMaAAbkknFXlB/5yT8g/wCKRowE31D1PROtfD9W&#xA;59OVK8vTrtz+npvmT+VlVtHjxunq6OkiK6MHRwGVlNQQdwQRmM3t4q7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FWL/mdrN9o3kbU9SsXCXUIhEbEVFJJ442/4VjlGpmY4yQ7XsTTwzauEJ/Sb+yJ&#xA;LwRvzT82fFSSIUrT4D/Kp8ffNR+Zm+h/yJp+4sq/LH8wvMmp+edN025kT6rdG5WZVUgkRxSuvc9C&#xA;gzI0ueUpgF0/bvZWHFpZTiPUKr/TAPec2z5+7FXYq7FXYq7FXYq7FXYqtlljijeWVxHHGCzuxAVV&#xA;AqSSegGKvnv82/zIuPNCyeXdEna20eR1inuVqrXFXAYnuIqfs9+/hmww4OEWebh5cvEaHJnumfk9&#xA;+XdnpUOlyaPBcq8dHuZRWZ3oKt6g+IfRmMc8ibtvGKNVTD/J/n6XyB5v1TyRq8z3PlOwlRbHU5DU&#xA;2Sz0McUjH7Ufx08VoT9mtLZ4+OIkObXGfCeE8nvCOkiK6MHRwGVlNQQdwQRmG5LeKuxV2KuxV2Kq&#xA;M97Z25UXE8cJfZBI6rX5VIrgMgObOGKUvpBKthYOxV2KuxV2KuxV2KuxV2Ksb/MTQbrzB5PvtGtJ&#xA;I4rm7MIieUkIPTmSU14hj9lD2yrPjM4GIdh2XrI6bURyyBIjfLzBDx1vyC82Gv8Ap1hv0+Kb+VR/&#xA;vr2zXfyfPvD2P+jDB/Mn9n60w/L/APL7VNB896bfXt1bNDbtPyEZcljNFJGlKqB1cZfg0UoSEiQ6&#xA;7tX2jw6nTyxRjIE1zrvB73r582+XAxH15DSu6hmG3gQCDm6GhzfzXh/zWPvRmn6tp2oq7WU6zCMg&#xA;PSoIr0qCAd8py4J4/qFNmPLGf0lF5U2OxV2KuxV2KuxVbLLHFG8sriOOMFndiAqqBUkk9AMVeCec&#xA;/wAzx5380J5L0GVodK9VI7m8NV+sMWFaKaH007V+0fozOxYuAcR5uJkycR4RyZlN+Tnkt9PFgkUq&#xA;XRQ1vhI3qA0pzp9nr2plX5iVtngRp5vb/nN5z0qW90DUbe2kl0KRre41piwVRExTkU/bd6fCoIqf&#xA;YHLTgidx1a/FI27k/wBL/KzRvNWmQ6r5jmuXl1L/AExIYpFjAaUV5yEA85GFK9h0GwzDya4wlwxH&#xA;JyYaXiFnqq6B5vk/K/zTb+Sdcu3vPK98qvomoS7y2vNivoy06xhtq/s/LpeAM0eMc2q/Dlwnk9vz&#xA;Gb3Yq7FXYqkPmTzMLCtlYhZtUcAhTukKt0klp/wq9W+VSKcuXh2HN2Wh0Hi+ue2MfM+Q/SenyB4R&#xA;+YOtabNP6Yf6zeRtyvNRcgu7AEcAR2Feg2HQZp9RME1zPe+j9j6eeOHEfTD+GP6fxuU0/Krz5rPC&#xA;4szfFUtigtIbhjJGyNWsdCRSnHbiR175r9Tr8unMZRNjuPJ4H29hHT5cebGRGWTiBHSVVvXfvuR5&#xA;PYdN842M5WG/X6jcNsCx5Qsf8mWgA+TUPhXNpou3MObY+iXn+t5LT9pwntL0y+z5/rpkGbp2TsVd&#xA;irsVdirsVdiqElbnKW7L8K/R1/HCxKnI3GNm8AT92KsL1RaPG460Ir8t/wCOTCHjXmTQJdP1yWK3&#xA;hdraRTLBxUkBWr8O38pqPlnddm60ZcQMj6hsXltZpjDIQBtzD0f/AJx7ilQa9zRlB+p05AjoJq9c&#xA;0/tFMHgr+l+h2XY8SOK/L9L2HOZd07FXYq7FXYq07pGjO7BEQFmZjQADckk4q8C81/mbN+YPnO18&#xA;jeWJuGiO7C91EV/0gxqWPHp+6Wm38x9szceLw48UubiznxnhCcj8idHsZ/0zol9cxa7bgMvrFGid&#xA;0AopUKOIYqO5yP5knYjZPgAcubVj+cNzLBOp0/0bqMAXV3I1Y0YbUCgAsa/ZXCdN5oGfySq8/I6P&#xA;zDG1xqOqzWUlw73QtYo1ZfUlPJpJmY1kc9+lOg2GUHtARNAW3fkzIWSg4PzPTyKH8oearaSe60tV&#xA;jt7u2AKTwcaxPQkcfhpmPm7O8Y8cDtLvbces8McMhuFLyv5V1P8ANzzZb+a9Vgew8p6bwis4mNZL&#xA;lom5FVag+Hn9tv8AYjepGZADT4+AG5OPInNPiOwfRmYze7FXYqoztIytFC3CUqf3lKhKjY0PX5Yl&#xA;MSAd93g35jaxf6GZNMpIjT1kuNRY8muCdmKMOte/SnSgGabUmUDw9/XvfSOxMeHPHxbBEdhH+b8P&#xA;u+dkvLNO07XPNOsR6Vo1u1xcyb8V+yiDq7sdlA7scx8eIk0Obt9droYoGczUR+KHmm5sNQ8sXLab&#xA;eWklrMhrIs60Z+3Oo2oe3EkfPrmn10JTlRFV0fn32o7Xy9oai5gwhCxCPcO/3nr8GQ6f57ntIVjd&#xA;vXib4fq8h3p3Cv8ALMPS6XiyCxsNy3+xvY2XX6sQP91D1SPP+qPiendbN/K3nOMALol4LZz10m7q&#xA;0JP/ABWK1Tr/ALrPzU51+HN/MNeXT8e59U7R7HPPJG/6cefx7/jv/SeiaP5xsb6dLO6iawv32SKT&#xA;4opD1pFMAFb5EK3+Tmdj1AJo7F5bU9nTxjiHqh3jp7x0+7zT/Mh17sVdirsVdirzW+/MGCzuY7d4&#xA;rsySqHiRFjYkMSB0f2zGlrIg1Rd7i9nc+SJkJQoeZ/4lD3H5mWkJEdxBfRs+wR4lBNTTYcqnAddA&#xA;cwWyHsxqJCxLGf8AOP6kLqfnCJYkLaLqzfF2s38Pnkxqx3S+TRLsGY/ymH/T/sRXlfzDbamt9HHa&#xA;3NpLaqjSRXcRhakgfiQCSafAcydPmE72O3e67tDs+WnESZRkJX9JvlX60Vo+qNpWuhyaW05CzjtR&#xA;v2v9id8yZxsOujKi9IzEch2KuxV2KtO6RozuwREBZmY0AA3JJOKvn7zt581b8z/MZ8h+TLgQaKOR&#xA;1TVd6TIho3Gm/pA7f5Z/yeubjxjGOKXNxZzMzwhTT8l9S/L24h826HqX6Sm0sNLeWMsYjMkFP3vp&#xA;kMdwtWofDHxxP0kc18Iw3DKLz85tLmthJp1rMLpwI5JJABEjP8K13q7cvsKNz8txD8uRzZeMDySu&#xA;f8qNYvLRDHfRWrp++ismViC7b8pZB1cnrtQdMiNfAGknSSq0TP8Am7oGlW/1TX5JbLV7QFJYAjtW&#xA;SPZgpG1DmvydnZTL0G4nzcyGtgB6ubFfLnkW5/N3ztceb9Uhks/KUbLFbo1VlulgHEIpHRdv3jD5&#xA;DepG0EvBxiA3k4JHizMuj6OtLS1s7WK0tIkgtoEEcMMYCoiKKBVA2AAzEJtyQFXArsVU5ZKMsasF&#xA;ZgTyPYDqcVSrUdSjjjMURpGPtN3Y5IBiS8p/MdtK1zTJYLxhHDbmsV4oq6SEbLENuXKm47+1KicN&#xA;BLVSGOI37+7z9345t+Dts9m3lJ9PWP8AO8vf3Hp7refaDfvoMJj0u4ubR5APXmglaJpCP5ijLsOw&#xA;7Z2fZ/YODT4+EgTl1JH4oPAdv+1Ot7Qz8fEceMfTCJNAefKz3n5UNnueoX/l3Uo1i1Gxe9jQ8kS4&#xA;PqqD0qA7NnzrPtvFP6vEPvnL/in1XJ2Xx/UIH3xH6kufS/y9ZTXy9bk02rDH+vIfyxhA2GT/AEx/&#xA;4pv0uly6exiIxg8+EcN/IB5L+YOm22gXdtc2Y4Wl4XBtyahHSh+E9QDy6ds23YmulqISEvqhW/fd&#xA;/qey7L18jcJm65KFp5w1q+t4bGK6eRhIjwqQGl5qwKcXpy+1SlDm8OSdVbnT0emHFMgAcJvuqt/s&#xA;fVsXqemnq09Sg58a8eVN6V7Z0Q83x0rsKuxV2KuxV51pPkiXUdU0vzAt2saWZjrblCS3pMW+1UUr&#xA;XwzBhp+IiV8nq9T2sMWOeDhvive+9Heffy6n803sNzFfLaejCIqGMuSQ5atQy+OT1OmOQ3dON2N2&#xA;5HRwMTDis3zrp7nl+mQify5ZySW9vO7M9ZJp3VzR2G4FrN/xM/wzC04uP4/U9J2rLhzEAyHLYRFc&#xA;v64+5rSNb/Qmragq28SLcR2oYRzN6a0aUcmb0Iz+1v8AB9+dH2HoPHlk3rhEfP8Ane7ueK9qNX4e&#xA;LD/FZnz2/meck+1LUdTDLKtlFJGYw6uGuyCu5BB+qUzZS0cAa4j8o/8AFvMjUSIuvv8A+JeuaFeG&#xA;90TT70rwN1bQzFK8qepGGpWgrSuafNj4Jyj3Eh2WKXFEHvCOypm7FXYq+f8Az5518wfmbrs/kbyT&#xA;IIdHgqNW1NyUWYK3ErUb+ly2oN3/ANXrm44DGOKXNxZzMzwxSzRfInmD8oNTHmW+lj1LQpE+ralL&#xA;aB1lgWRgVfiw3XkAPpyUsgyihzQIHGb6M01z81/KWq6HeWHl+Z7y7vYmtzIEekRnHpipalXNTxQb&#xA;k+1SKY4SDZbDkBFBh+p/lp51g0uwv7C3hZdJkivI9LWTnO7REFy5A4PIR4H2GSGqxyuN82P5ecd6&#xA;5M9sfzN8sXenQakL5YwUrLA20gJH2ePWoOaeWiziVV8XZDVYjG7YXpH5cj8zfN0/mLUo3t/Lsdwz&#xA;kD4WuKUURK2xA+Ec2HyG+43csnhQERzdWIeJIy6PoG0tLWztYrS0iSC2gQRwwxgKiIooFUDYADMI&#xA;m3LAVcCuxV2KoDVbaSRBJGvNkBqg6ke2EILE9Q0jX9SdYIIzFG1fVd6oAB23HfJbIeWa9+WX5t6r&#xA;etI+mxLboSLeBbmDii/S4qx/aam/yoB1ej12jwQ4Yy95o7/Y8trNFqs8+KUfcLjQ+1Lf+VMfmn/1&#xA;bI/+kiD/AKqZl/y1pv532S/U4n8jZ/5v2x/WzP8AwL+Zf/LHD/yOj/5rzwL/AEOZ/wCYf9NH9b7d&#xA;/LGj7z8lyeRPzI5rys4eNRy/fR9P+DwH2cz/AMw/6aP60HtjR95+TMbX8q9EvtEez8yQLeSzEOtC&#xA;QYDQj93ItG5b/F2PvnS9j9iDT4zx7zlzrpXL7/xTos/bOTxRPEeED7feqeVvyd8k+XL9b+0glubu&#xA;I1t5LpxJ6RHdFUItfcgkds22PRwib5+9jrO3dTqIcEjUe4bWzbMp07sVdirsVdirxSfWryw8zaVK&#xA;s9x+joBE11FCzlNnbmCimhNO2aozImOdPoEdNjyafIKj4hurru23W/mP5tu9WvYZdBmvYokg4OqC&#xA;WIl+ZNeKnfY4NVlMj6bT2F2fjwQIz+GTxf0TtTCH8w+Z9M0q3s4NPdoombiW+uKfiLMdo5Y16nsu&#xA;U4pziKr73Z67TabLIz4xZ/qd39Un7Uy8peZ7YRa1c+Y9F+sTXMUMVmXEhEZT1KsDcNI3WReh7Z1P&#xA;s3hzZZyMZcFcN89/qfP/AGyODDjxRrj+v+bt9HcAj7zVfJ62lukt5OJxbIGUSEDlxIIpXxzos+HP&#xA;4h2FX3ebxWLJi4BuXtvlD/lEtE/5gLX/AJMrnM6z++n/AFpfe7vT/wB3H+qPuTbMZudirsVeO6d5&#xA;Wsvyt806lqMhLeUddK1u3HI2U4YlYpj/AL7bmeD/AEHehOUZ+IAP4g0CPAfIq35hecdA1Xy1f6Dp&#xA;F+moT6lGIKQr6wiEjDfbqxAIRepPtUgY4EGys5Aig8tsvKvnLyjrGk67faI9v5X0qYSSxq8crorq&#xA;Ua4uFjJPIVqTTbplmTJHJExifUQwhCUJAkekPcB518vLZjU47+B7MjkzI4J2HLYV6+2aKGLKZVwl&#xA;2ssmPhu3lP5XeQ7nzxf3Ot3cD2Xl17yeVNipmDSF/TiPgK0Zu3Tr06HJl4BXV08MfGb6Po+0tLWz&#xA;tYrW1iWG2hUJFEgoqqOgAzXk25gFKuBLsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirDbov&#xA;DcSRyIQysf8AbyYDFS9cfy40i0t1/VY7KCElebSMaKDQ0A3P44pCVvBp+rwpJfWpotRGrM3Q032K&#xA;+GZ2k1OXEDwGrcXU4YTI4hdJFq+geUV1CO3bTzLO6qFWMuSSxNB9ob5lHtPOecvsH6mmOgxVy+97&#xA;np9qlpYW1rGoSO3iSJEHQBFCgD5UzTTkZSJPMuwjEAABXyLJ2KuxVSu7S1vLWW0u4kntp0Mc0MgD&#xA;I6MKFWB2IIwg0pDwu5/L4/l95803U4SG8lM8qQlhX6ncz7L67ftA/YSRv9U70Jtz5DPEQPr+9qxQ&#xA;EMgJ+ln2t6/pdjo15farLCtmIZA0bkEMhU/BQncv0pmn0xnKYAdlnEYxJLxH8j/yuv8AzNJPqd9G&#xA;1r5a9WqOaq85UnkkX+SNgz/QN+nSZs/DsObpMWLi36PqSzs7WytYbS0iWC1t0WOGGMBVRFFFVQOw&#xA;Ga4m3OAVcCuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVY8MMn94ivTpyAP68VW/VLT/&#xA;AHzH/wACP6YqtfT7B6c7aJqdOSKf1jG1d+j7D/lmi/4Bf6YeIooOSwsY5fVjt4klHSRUUN94FcbK&#xA;0r4EuxV2KuxV2KqV3aWt5ay2l3Ek9tOhjmhkAZHRhQqwOxBGEGlIeMyf84yaRL5k+tS6zcSeXBIJ&#xA;V0ZgxcCtfS9cv9j348qbVr8WZX5o1y3cf8uL57PZrS0tbO1itLSJILaBBHDDGAqIiigVQNgAMxSb&#xA;cgBVwK7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXEgCp6Yq0rBhUbg4q3ir&#xA;sVdirRZQQCaE9MVbxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kqc06RLVtyei&#xA;jqfvxpBNNwzJKnJPpB6jFQbX4pdirsVdiqA1RtR+rs9nGHaMgmJti6g/EF9/DCGJtfpuq2l/Arwt&#xA;Rtw0R2ZSOoI9sSEg2jAQa0NadcCXYq6orSu/hiqUaxrAj42dmn1nUJzSKIdBTqzHsBkgGJkmNsbg&#xA;IqT0MoUFnWvEnvSuApCtgS7FXYqlHmPzHb6LBF+7NzfXJKWdmhAZ2AqSxP2UX9pu3zyrLlEB5udo&#xA;dDLUSO/DCP1S7v1k9A851nzNcXEjDUb2W5k72do7W9sn+TVCHf8A2Zb5DMGeUnmflyer0ugjEfu4&#xA;iI/nSHFI/PYfCvixi48yaJBJ/vLDEy9WjMnqCn+XGQwpmOcsR0dxDQ5pD6pH5V8iybyh+aMcN1Fb&#xA;T3T3GnuQriZzJLCD+2rtSRlH7StyNNwdqHIw6ujROzp+0vZ/iiZRiIzHdsJeVcge4ivMdRvNX5kz&#xA;X1zJbaaZJLddhFC7QqR4zSrR9/5FI964M2qs0E9ndgjHESyUJeYv/Sjl8T8KYTfak8betcRWMUh3&#xA;ULB6khP+sxDfTmJKffT0OHADtEzI/rUF+lfmj5l0af1Leb1LNN3s5S7xso3PEO7tGf8AUYD2ww1c&#xA;4nbkw1Xs/p80fUKl/OFA/YBfxD3Tyb5x0rzXo6ajYHiR8NxbsatFJT7J6VHge/4ZuMOYZBYfN+0u&#xA;zcmkycEtx0PePxzCe5c692KuxV2KuxV2KuxVRurqG2haWVgqqCSSaAAbkknoBhjEk0GMpCIsvMtd&#xA;/Mu1W8+NT+ji/ATUPJyO6r/KPD+ObXBoI5JHEJjxwL4e7l+sfN0ObtmMZWR+77+vyZZodzcG7jjh&#xA;q8bDk9Oioe5rmtkKd1A3yZPlbc7FXYq7FXYqxu80pbPVpNRtpH4S1ee3HQyfzBvxOTB2azsUx07U&#xA;o3QAnr9od1PviQolXNMmdVUsxoo75BmTSTX+qD1AqAs5qvBTQgH3GTqmvivdb5e0ZLSWe8lmae7n&#xA;qOTCnGOuygD5b4JFlAdU8yLN2KuxV2KvGfNGuS3OvavchiJUnbTbfxjgttpOP/GSVm+7NVlyXIn4&#xA;fJ7/ALP0ghgxx6cPGfOUuXyjTC9WnmpFaQGkty3Go7Dp/HMcQM5CEecjTtsmoxabDk1GX+7xRMj8&#xA;Bf8AZ5scZSrFWFCpoR7jMWUSDRd5iyxyQE4m4yFj3Fuyt2l1G3jSo9SRQSNiBXf8MyNJi8TLGHeQ&#xA;6j2i7Q/JaDNqOuPHIj+tXp+2mVXUkGnWzFVAVNkQd2y3UQ8KUo9xpwOyNUddgxZv9UhGXzFsXkkm&#xA;uZ+TEvLIaD5noBmGAZGhzL0c5ww4zKR4YQBJPcBuSpa1C9j68Eh+NfhB8eQ2P3HL9Tp5YchgeYdZ&#xA;2H21i7S0WPVY9o5By7iDRHwILJfyI1+fTvO0VjyP1XU0aGVO3IAtG1PHkKfInLdHPhyAd7g+0elG&#xA;XSSl/FD1D7j9n3PprN0+ZOxV2KuxV2KuxVRurqG2haWVgqqCSSaAAbkknoBhjEk0GMpCIsvDPzF/&#xA;Ne3numsYJ1js1JBdv93SL0WlVoB13Pz3O22wAYTtRyfYPL39/wAnn9fqJZIEi+Du6nz93d80v8je&#xA;U9V83XFvd36FLQASel8QSp69aEICSPE9PEjN1c9Ppp+LCNaqcQJGzty6cr2HT9ur0HZstTMyn/dA&#xA;7ef7Hv8Ap2nW9hbCGEV/nc/aY+JznCbe1jEAUEVgS7FXYq7FXYqtkiR0KsNjv9PjhBQRaQX1lNZz&#xA;evB9I7EeI/z2yYLVy2KhPr8CCC3+sxrdz8vQtmYcyFoGIWtdqj/MjDSN/gj9L0un76Xcncn+AyJN&#xA;JAv3JyAB0FKbD5ZBudirsVdiqy4M4hc24Rp6H0xISEr25EAmn0YY1e/JrzGfAeCuPpfL41b5z166&#xA;ttI836xp98ZUunuGuZIwA0aic8wY2J5laHuK5rso00ZkE5OfdH9b2Ghn25n08JQho6EQP7zLe23+&#xA;p10Q96YoyuqxOJEijKxDY/vWNB+BJzIx48eKP5mBsRBAvnxcvuNum1us1evyjsXVQGPJlnCczjMj&#xA;E4IgylUiIkHjiIcuqXXVlbNd3lxKzLbDhIvAAkmbcAVIHjlOo0uM5ck5EjHtLb+nuP0uy7H7e1kN&#xA;Do9JgjCerl4mKXiGUYxGnuMieESO9Rrb+LduC2tYreXUbZ3ZIY5FpIFDLIQFTYE9eeT0+DHCJz4y&#xA;SIxkN6sS2A+/7HG7Z7V1moz4+ytZDHHLmy4ZfuzKUZYoylPJvKMaMfDAP9buRmtRi4uwsrMlvFAZ&#xA;3K0JJrxpv746nCMuTjkaj4Yma+X3r2H2pk7P0Q0uGMZ546yWngJEgcJJyCRrfhjjPTuS+xbSopTc&#xA;K8nqQKZI0kC0ZgPhGx8aHKdIdNCXGDLigLAlW56cvN2ftDj7b1GEaWcMXhamQxznilPihAkcZIlE&#xA;bGAlH3kIG9gOtfo5lfYSm1u38OA5h/8AkXX7ssGI6kY5Hn9Ej7t7/wBL9zhntGPYWTW4Yj92I/mM&#xA;MehM6hKA8vF4dh/PTn8q7LT7rzzYro/rteW/OZWuOPohUU7vw+Kh6DBgjpjkHD4n+xbe1s3bsdJI&#xA;5PygBABA8W9/sfTsHr+inr8fWoPU9OvHl3413pmfKr25PJ4uPhHHXF1rlfkvwNjsVdirsVUbq6ht&#xA;oWllYKqgkkmgAG5JJ6AYYxJNBjKQiLLwL82/zWLCSxtHZLYEBmHwvM3UBR2Hf269emzGPwdh/ef7&#xA;nyHn5/J0ubUeNv8A5P8A3Xv8vL5sa/LH8stT8z6pHqurR0hWjQwNUIiA7E/51Pz3F8pDSj/bf9z5&#xA;n+l3Dp1cbDhlq5b/AN1/uvIf0e89X05pWlWel2aWtqgVVA5NQAsQKVNPwHbNNKRkbPN6OEBEUOSM&#xA;yLJ2KuxV2KuxV2KrZJEjQu5CooqScUE1uXn3mHzff3upx2ek8DZxnlcXB+JCKkFNj9rbpmi1XaUz&#xA;kEcPIcz+h0Gr7QnOYjj+kcyknmPyhPLcW+uurfWYTzspZK/umAoFfiRySvj+vOv7JMJbzG/d+Orb&#xA;rsmU4hw+n8fcyXyL53kvY/0frPG31KNigUkfvKUqyj+Xcb5d2j2eMZ48e8D9i9mdpHIODJtMfazn&#xA;NO7t2KuxV2KuxV5F+e35c3ur28XmbQ4y+raehW5hQVaaAb1A7svh3HyzB1mDi9Qeq9nO1vCPhTNA&#xA;n0nz7vcfv97w7TtfjuYjbyN6UnIF4m2BYClR9+aomQjw36bt7uGPDPMMxiPGjExvrwkgke6wGR3t&#xA;4kmkWcY/vDUS/KKqp+DZsdVqRLS44j6uv+bsPsLxXYHYc8PbuszS/utjj9+ap5K/zofagBcSrbTW&#xA;4P7uahYe69M18M8owlAcpV9j2Wo7Kw5dVi1Mh+9wiYif64AP3femt5frLpUg/wB2tO0fv6YPqD8c&#xA;2ctSPyfD/FxcP+b9X3vD4ew5j2m8b/IjB4vl4pHg/PgBYtf3wUGGI/EdmYdvbNQA+jTn0Cjp2vvY&#xA;W97ZQqZZ72MRwxruRITxr7fAzZsdJqzihOP84fb/AGEvGe0Xs9DX6nS5jz0+TiP9KP1V5+uMOfS3&#xA;0N+SH5cXHljSJNU1VKa3qagyRkfFDD1EZ9z1IzJ0mDhFnmXS+0Hagzy8OBuETue+X6hyHxenZmPO&#xA;OxV2KuxVp3VELsaAdcVYlrtx+kUmtyxWGRShK/59svwzMJCQ6OLmgMkTE8i8ssfylm1bzb6176Vx&#xA;6JB9RC3FUU/DzU7Kadhv+vN3qO08PCJY4/ve89P1nu2dDp+ycxmY5Jfuu4df1D4vdNI0iz0qzS1t&#xA;UCooHJqCrGlKmmc/KRkbL00ICIockbkWTsVdirsVdirsVdirB/P/AJxez1Cx8tabYvqeragyPJbr&#xA;VQlvyILc+gY0O52Xq3at8NKMkJGRqLi6iV+irtMdE8nRWc7PMqemrFo0QUBJ/aPvmp03Z8cRvn3O&#xA;PpuzxA2WRz28M8LQyoGjYUKnpTNhGRBsOwlEEUWA6/5OvLAXOq6dZjULi0jZ7O3G0rGv2fEgdaA1&#xA;PQb5t4do3DgJq+fc6iXZgE+Mb1y72Q+RfN1p5o0NL2GMwTwt6F5bNWscqgVAJ6jeo/HfNbnwnHKn&#xA;aYcglFkOUtrsVdirsVdirx780vyEstekm1ny2UstYarzWv2YZ261Uj+7c/cfbc5hZ9Je8Xp+y+3z&#xA;jAhm3j0l1Hv7x9vv5PArw+YfLt++m6xbSW1xCaNFKpH0jxB7Edc1k8e9dXuNPrBKIkCJRPUJha6x&#xA;bTqC3w1/aG4/sykxp2EMwko6hq6IhVG4p3fufkMIixyZQN0Houla/wCZNQXTtCs5Lm4frxHQfzMx&#xA;+FF9ycuhjJNDcut1GsjjiZSPDHvP4+7d9G/lb+R2l+VjHqmrlNQ177SGlYYD/kV+03+Ufo8c2eDS&#xA;iO8ubw3anbsswMMXph1PWX6h5fPuep5mPOuxV2KuxV2KpDrmphiYI2+Bfttk4hqnJLrDSbvUSGUm&#xA;3s+89Pjcf8Vg/wDEj9GElEY2yixsLSxgEFtGI0G5p1J8WPUnKyW0ClfFLsVdirsVdirsVdiqT61r&#xA;U8M6aVpSLca1cLzRHr6UEVafWLim4QH7K9XOw/aZSqtoug2mlxs4Jub+cl7zUJQDNM7UqWIGy/CA&#xA;qD4VAAA2xtaTLArsVdiqRaroc8V1+mNDVIdVUUuID8EN5HUt6U1Bs9SSklKqT3UsCbRSP0fWLTVb&#xA;QzwBo3jYxXNtKOM0Ey/ailXejCvyIoQSCDgSjsVdirsVdirsVSbzR5O8ueaLE2etWSXKAERS9JYy&#xA;e8cg+Jf1HvleTFGY3cvSa7Lp5XjNd46H3h84/mN+RWveVBLquhu+p6MlWkAH7+FBv+8UbMoH7S/S&#xA;BmtzaUx35h7XsztzHnIifRk7uh936j8CUV+XX5Aaz5hWLVvMsj6dpkgDxW4FLmVe2xFI1PYkV9qG&#xA;uSw6Uy3Owa+0u3oYSYw9eT/Yj9fuHzfRPl7yxoPl2wWw0azjs7cfaCD4nI/adzVmPzObGGOMRQeM&#xA;1Wsy55cWQ2fu9w6Jpk3GdirsVdirsVSvV9Xit/8ARYiWupDwVFFTUivEeLUINOw3PUYQGMioaf5f&#xA;BIn1Cjt1W36qD/l/zH8PnhMkRh3p3kWbsVdirsVdirsVdirsVdiqFstMsbKS5ltouEt5KZrmUszu&#xA;7nbdmLGijZV6KNhQYqisVdirsVdirsVQq6ZYpqT6kkXC9liEMsqswDop5LzUHixX9liKipA2JxVF&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUqsPLVhaarPqpaS4vZV9OOSYqfRiJ5NHCFVQod/jc/&#xA;aZvtE0FDaprgV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KpdqXmPQ9Nr9dvI4ipo4qWKkivxBQ&#xA;Sv05XLLGPMuXg0ObL9ESUs/5WJ5UO63gdT9l1FQR4jfK/wAzDvcv+Q9T1irWfnryndy+jFqUXq/t&#xA;I9V4/wCsxHEffko6iB6teXsfVQFmBpPVZXUMpDKwqrDcEHuMudcRWxbxQ7FXYq7FXYq7FXYq7FWM&#xA;XX5i+W7e4khEkk/pni0kKqych1FeQyg6mAdtj7FzyANCN95pYn5leW2Ir66KTQu6KFHzPLB+ZiyP&#xA;Yefpwn4sngnhuIUnhYPFIAyMO4OXg26mcDEkHmF+Fi7FXYq7FXYq7FUJJrGkxu0cl7bo6EqyNKgI&#xA;I6ggnJcJ7kcQW/pvRf8Aq4W3/I6P+uPAe5eIIuKWKWNZInWSNhVXUgqR7EZFK7FXYq7FXYq7FXYq&#xA;7FWNa/qV9d6kug6XL6EvD1b+86ejFsT3G9CKeNetA2Y+SRJ4Yu20eCGPGc+UWOUR3n8fjkl6aJ6d&#xA;lOPLtlE98iMseqXvxOXH8rEfBv2UcR4DCcIEfT9SI9pSyZR4pPhXvGOwr9Px381Xy3Z+fk0LU11O&#xA;SOHUZVI01GkM3pvxI5O5MmxNKCppTpkMUcvCb59HJ1+XQnNA4wTjH17VYvoNks0zSfOrWc58x6Za&#xA;anByHC0lf1pgAPieOR+dK+Fe2wHdw45EHxAPvT2jrMMJxOklKP8AOI9PuFCvN1tdN5bMWqadLLL5&#xA;Ymk9PUNPuCzSWbtuWVmNaCtTXr4mq0iQcRsfR9zZjnHtCJhIAagD0yG3F5Ed/wCO++hgggEGoO4I&#xA;zMecdirsVdirsVYP+cHnzUvJXleHVNNt4bi6nu47VRcBzGoaOSQsVRkJ/uqfaHXL9PiE5UWrNkMR&#xA;YeA3H5x+etf15b2S6WyltREbWO0aeKKMq3Jv3XqlJPU6P6ofbpTM+Gige9xTqpAdGXX/AOffnZoH&#xA;ge104JOjIXSKdXAYUJUmc0O+2GXZ0K5n8fBceukJA0Nixez/ADK1iwhCpa21xGi8UWY3AIqxZmrD&#xA;NDUsWqa/RTfMfH2NiHMyLuNR7TZ8hsRjH4X998kx0784fMEEF7IlpaBLsJbPakTyQlZPhckSTO5P&#xA;E7Vag8NzmJl0cMeYQF8MoE/Jz8Wpnn0ZzSrjx5YgECufu/He9i/JfWbnUfKDxThf9x109pG4rVlM&#xA;Uc9WqTvWcjMbTCsUT3j9JR29trcoHSQ/3IZ7lrqHYq7FXYqluteZdB0SB5tUvorYIhl9MnlKyDYl&#xA;Il5SP/sVOEBlGEjdAmmLS/nN+Xs9tcLbX088qxMywLbXlu77U4pJJHEqsSdviHjlgxm+Y+YRwyPK&#xA;MvkXmen/AJK+VJ7SOfUPOyW13KOcttHNZyLGW34cz9sr0Ld8yZdoEHbk1R7MyVvGXyKI/wCVHeRf&#xA;+p9/5KWX9cj/AChLyT/Jc/5svkWTeQvNPlDyJ5el0LVdUeWW0u3/ANLjEt5HOs1XSSEWySBE4rRl&#xA;p8LVru28Mx8Q8QI39yYYJ4xRjIfAs20P8xfJWuchp+qRlg6xiO4SS1dmboES5WJn/wBiDlBiRs2D&#xA;HKro0PIsjyLF2KuxV2KuxV2KsHsJW+reZ9RqTNLetbwue8UarIin2rKwzHwbmR83b9qHhhhgOmO/&#xA;iTR/3IZpbW8dvbxwRiiRKFH0DrmQ6hUxV2Ksa1SwWS61ayVare2TThafCJENENPHnVshkjcSHJ0e&#xA;XgzRl3EftRnk24afyxp7MSTHGYCx6n0GMVT8+GRwG4Bv7Uhw6ifmb/03q/SnOWuvdirsVdiryH/n&#xA;J7/lAbD/ALasP/UPcZl6L6z7nG1X0/F84eX/APjoy/Jf45t8fN18+TN9F8pav5kvEttPQUWpklb7&#xA;Kjb8chqNTHEN+Z6Nul0sst1sBzJ5BMtZ/KfWbOCURyiSaLZ42CKAaAj4kklpWvVqD3zCj2mL9UTE&#xA;d/N2Z7Isfu5xnLu3BPusbsJjjeO2eORSrpcRqykUIIahBGV6o3qY/wDC5Oy0Ars7IP8Absb6O/IP&#xA;/lF9U/7abf8AUHbZrdP/AHMP6v8Avi29v/49l/rD/cxemZY6l2KuxV2KvI/OGrPYX2t3KkG6ku1h&#xA;iY70CwR0+hRX6cwNXPhJ+D2HYmmGWEAfp3J/0xH6mBPrWsMxY3s9T1pIwH3A0zXeJLveuGkxD+GP&#xA;ya/TGr/8t1x/yNf+uPHLvT+VxfzY/IO/TGr/APLdcf8AI1/648cu9fyuL+bH5B6Hd+Tmh8lLr66v&#xA;fm5NnFdekZfg5SIrEdK0+LxzOOCsfFZ5PK4+1OLWeB4ePh4zG632JecT6nqU0Txy3c0kbCjI0jEE&#xA;e4JzB45d71Y02IH6Y/IPozyxNLN5b0maVi8stnbvI7blmaJSST7nOhlzfIJCimWBDsVdirsVdirA&#xA;7RXSPzfp3ECaO7+twoNuKToEQ08P3JOY+DaUh5u57UHFiwzH8zh+MTv/ALpnFvMs9vFOn2ZUV1+T&#xA;CozIdMqYq7FUnEqjW726b7Fpb8HNdqELJ1+hsBNMoR4iAOqG/L+FofKdpG3VXufprcyGv05TphUB&#xA;8fvdn21Li1Uj5R/3MWQ5e6p2KuxV2KvIf+cnv+UBsP8Atqw/9Q9xmXovrPucbVfT8Xzh5f8A+OjL&#xA;8l/jm3x83Xz5Pob8nZbOGGIsyrzJExqBuXcGtfGkQP0ZptZZzm/5or9LvNPto41y8SXF76HD9lvR&#xA;dYhSDTr6a8WM87gPaiv2kKoOJNNqgNy9sxoDnfJnlmDw8H1AD52+WNc9P63MU7yWxPhuqn9XX3wa&#xA;Ym8d/wCpy+V7PRa8RGLUcP8AykY/nXq+23vv5B/8ovqn/bTb/qDtshp/7mH9X/fF1vb/APj2X+sP&#xA;9zF6ZljqXYq7FXYq+ePzK1Tj5v1O0YHhFPzFO5eKOv8AxHNRr5fvK933PpXsxgvSRl7x8pH9bFv0&#xA;hF/K34Zg8T0Xgl36Qi/lb8MeJfBL0D8tdc8iW9jeDzEtt6zSqYPrUAmPHjvxPB6CuZ2lyYwDx08x&#xA;29pNbKcfy/FVb8Mq/SHrs955fXy6Lub0f0F9XSQVjrD9XKgp+74/Z40oOObMyjwX/C8NDFnOfhF+&#xA;NxHrvxdd+941+Z2teSrkab/hxbf4fX+tfVYfR6+nw5fClf2qZqtXkxmuCnvfZ/SayHH+Y4v4a4pX&#xA;331Pk9j8pf8AKK6N/wAwNt/yZXN1Lm+cS5lNcDF2KuxV2KuxViGsoml+c7S+ccbHWojp94/hKaei&#xA;xPbeiD5nMafpyA9JbO8048fRzx/xYjxj3fxfr+CbeW52jjl0mba4sGKqP5oSaxsK9h9nMl0ac4qp&#xA;3NxHbwPNJ9lBWncnsB7k7YqxjVLg2Pla9u5hyuNRqiov2mElahPkpd1yrPKol2HZmE5M8fLf5ftp&#xA;P9GsWsdJs7NyDJBCiSsOhcD42+lqnJY41EBx9Vm8TLKY5En5dEZk3HdirsVdiryH/nJ7/lAbD/tq&#xA;w/8AUNcZl6L6z7nG1X0/F862lpaJaLLubqQgt2CrTb6csnkJNsoYwBSe+WvOWq6U00dvIX9JqlTQ&#xA;kgjahIbf9k1BB7g5KePx4G/rjyPVt0uf8vlqgcU64geXv6cuhtMb/wDNfWtVjeBlc8UILuV4rX4e&#xA;BCxoW2PTkB4gjNToMc9RMxnfAOfT4HZ6ntYYNBjGTAI+LL6TvKv6UblXxo1sx9JZJbeSWRi8j3Eb&#xA;Ox3JJapJzZ6oAaiIH+pydVoZE9nZCefjY30d+Qf/ACi+qf8AbTb/AKg7bNbp/wC5h/V/3xbO3/8A&#xA;Hsv9Yf7mL0zLHUuxV2KuxV80/mf/AMp7rP8AxlT/AJNJml7Q/vfgH1L2V/xKPvl95YvmC9G7FXYq&#xA;9Bu/zZ+seS18tforjSzis/rf1iv92irz9P0+/HpyzOOsvHwV0p5fH7N8Or/MeJ/GZcPD3nlfF+h5&#xA;4zBVLHooqfozBenJfVflL/lFdG/5gbb/AJMrnUy5vhsuZTXAxdirsVdirsVSzzJocGt6PPYSHizj&#xA;lDJ0KSL9lgR0yvLj4405mg1Z0+UTHx8wxDR9Y1LVLFby4tZtP1/TJXtGnlULHciI8HcrWoViD269&#xA;KimDDKRj6hu2dpYcWPL+6lxQO/uvp+PiyODzWvCJLq0ljuJiViVAXV2WgPEj3PTqMtdeiVtbzUJV&#xA;lvk9G1TdLevX3b+35U8VUrVh5j8wxvH8Wj6SwYNvxln6rTsQCAwPgO4fMb+8l/RH4/H7XdEflcBB&#xA;/vcn2R/G37YsqzJdK7FXYq7FXYq8h/5yfFfINgP+1rF/1DXGZejFyPucfUn0j3vmWPVXjhEZjq6j&#xA;iGrtt4jBdNo3ROiLK3rTv0cgcvEjc/rzN0QO5cPVHkE5v/7iL/jGP15X2d9eX/hhdz29/d6b/hEf&#xA;vKjb/wC8Z/4zxf8AEhler/xmP9STd2f/AMZuT/h2N9IfkH/yi+qf9tNv+oO2zWaf+5h/V/30m7t/&#xA;/Hsv9Yf7mL0zLHUuxV2KuxV8zfmlLEnn/WA7qp9VDQkA09JPHNL2h/e/APqPssR+Sj75feWK/Wbb&#xA;/fqf8EMwqei4g76zbf79T/ghjS8Qd9Ztv9+p/wAEMaXiDvrNt/v1P+CGNLxBDaleQLaOFkUs9FAB&#xA;BO5ofwwxG7DLMCL638p/8oro3/MDbf8AJlc6eXMviMuZTXAxdirsVdirsVdirzjzTc6nbXCWkEj2&#xA;0iSB55igb1Y96qpNacuvIbjFVVfK+vXGhWN/YMsWsafeNeWcVxUJJG6hXjfuOdK/7dcoz45Sox+o&#xA;O17L1eLGZQyi8eSNGuY7iE4ay8363GINS9PS7FhS4jiIeV/5l2aReJ9z81YZHhnPY7BtGXS6c8WO&#xA;8k+l8h9345EMjsbG1sbVLW1QRwp0HUkncsxO5JO5Jy+MQBQdVmzSySMpGyVfJNTsVdirsVdiqVeZ&#xA;fK2geZtO/RuuWi3lmJFlWMs6ESKCAytGyMDRiNj0OThMxNhjKAkKLwj81PyEsLPUtMuPLDRWdnql&#xA;zDpxtLh5XEU8tQsiufUYoQvxAmoPTrQY2rzZLBB5mnfdh4MEo5BOHFwQM+vKPMfqemaZ+Rf5dWun&#xA;Wttcaabi4hiSOa4+sXSepIqgO/BZeK8mqaDM2GqyRiBfLyDocuLHOZlVWUm8q/lZ5F1O712G/wBM&#xA;9WOx1CS2s1+sXC8IFA4r8Mi8t67tU5i6TU5IynR5yd121igcen25YYofWPyx8jWnm6z0u203hZS2&#xA;Fxdyw+vcNWWH+7fkZCwp4Vpkc2omcwJO/CW3RYojs+Yr/KwZd+UNja23kWylgj4SXjST3LVJ5yBz&#xA;Fy3O3wRKNvDIaUk4o/jq1+0I/wAOye8f7kMzzIdM7FXYq7FWFed/yj8peb7lby+E9pfigku7NkWS&#xA;RVHEK4lSVDTx41260yEscJfUL/Hk5um7R1GCJjjmYg+4/eCxlP8AnGjyOrBjqWqsAQSpktKH2NLY&#xA;HI/l8X80fOX63J/l3W/6of8ASw/4lOv+VDfll/1bZP8ApIm/5qyP5bH/ADfv/Wn+XtZ/qn+xj/xL&#xA;v+VDfll/1bZP+kib/mrH8tj/AJv3/rX+XtZ/qn+xj/xKW3//ADjj5Burj1YJ9QsUoB6FvLCyVHes&#xA;8Mz1P+tkhp8X80fb+tB7d1v+qf7GH/Er9I/5x28g6ffJdSyXuohOlvdyQ+lWoIY+jFCxpT+amHwM&#xA;Y5RH2/pLGXbeskCDkO/lEfaIgvT1VVUKoCqooqjYADsMsdW3irsVdirsVdirsVcQDSorTcYq7FXY&#xA;q7FXYq7FXYq7FXYq7FWNefNLvr2w0+4sovXm0rUINQMA+06wBhRQOp+KtOpHTfKNRAkAjobdt2Rq&#xA;IY5zjM0MmOUL7uKl6+c4+I5aPqoam4FlKRX2JA/Vj4/lL5I/ko/6pi/04SG+eymv5r+xtvMGmXNz&#xA;Q3P1W0YJIyinJlZW3oOxH35TKibAmPg7PCJxgITlp8kY8uKfL7WrWa2tBdXKafrV/q1zC1ul1e2s&#xA;nwq37IKIAoJArt2G9MYkCzUjLzCM0JTEYmeCGKJuoyH692S+SNHuNH8rafp1yOM8KMXSvLiZHaTi&#xA;SNiV5UNMvwQMYAF1Haupjn1M8keRP3bJ5lzr3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX/&#xA;2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:c928bb7e-4ba9-c54e-b04e-360e5e18476f</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:c928bb7e-4ba9-c54e-b04e-360e5e18476f</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:06a8e77e-57db-334f-bc6c-06809a6c05d5</stRef:instanceID>
            <stRef:documentID>xmp.did:06a8e77e-57db-334f-bc6c-06809a6c05d5</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4239c0b2-9560-5644-9c1b-2d4eaefa5ca4</stEvt:instanceID>
                  <stEvt:when>2015-03-29T08:26:58+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c928bb7e-4ba9-c54e-b04e-360e5e18476f</stEvt:instanceID>
                  <stEvt:when>2015-04-19T10:39:26+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Áåëûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>×åðíûé</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
207.672 398.297 mo
207.672 398.635 207.397 398.91 207.06 398.91 cv
204.305 398.91 li
203.967 398.91 203.692 398.635 203.692 398.297 cv
203.692 327.886 li
203.692 327.548 203.967 327.273 204.305 327.273 cv
207.06 327.273 li
207.397 327.273 207.672 327.548 207.672 327.886 cv
207.672 398.297 li
cp
207.06 324.824 mo
204.305 324.824 li
202.614 324.824 201.243 326.195 201.243 327.886 cv
201.243 398.297 li
201.243 399.988 202.614 401.359 204.305 401.359 cv
207.06 401.359 li
208.751 401.359 210.121 399.988 210.121 398.297 cv
210.121 327.886 li
210.121 326.195 208.751 324.824 207.06 324.824 cv
cp
.211765 .219608 .270588 rgb
f
258.396 393.54 mo
258.396 395.569 256.751 397.214 254.722 397.214 cv
195.278 397.214 li
193.249 397.214 191.604 395.569 191.604 393.54 cv
191.604 332.489 li
191.604 330.46 193.249 328.816 195.278 328.816 cv
254.722 328.816 li
256.751 328.816 258.396 330.46 258.396 332.489 cv
258.396 393.54 li
.14902 .282353 .447059 rgb
f
258.396 393.54 mo
258.396 395.569 256.751 397.214 254.722 397.214 cv
204.917 397.214 li
202.888 397.214 201.243 395.569 201.243 393.54 cv
201.243 332.489 li
201.243 330.46 202.888 328.816 204.917 328.816 cv
254.722 328.816 li
256.751 328.816 258.396 330.46 258.396 332.489 cv
258.396 393.54 li
.105882 .223529 .368627 rgb
f
258.396 393.54 mo
258.396 395.569 256.751 397.214 254.722 397.214 cv
208.13 397.214 li
206.101 397.214 204.456 395.569 204.456 393.54 cv
204.456 332.489 li
204.456 330.46 206.101 328.816 208.13 328.816 cv
254.722 328.816 li
256.751 328.816 258.396 330.46 258.396 332.489 cv
258.396 393.54 li
.203922 .329412 .552941 rgb
f
235.937 391.764 mo
235.937 393.954 234.162 395.729 231.972 395.729 cv
209.377 395.729 li
207.187 395.729 205.412 393.954 205.412 391.764 cv
205.412 333.944 li
205.412 331.754 207.187 329.979 209.377 329.979 cv
231.972 329.979 li
234.162 329.979 235.937 331.754 235.937 333.944 cv
235.937 391.764 li
.231373 .376471 .588235 rgb
f
253.144 330.336 mo
250.392 330.336 li
250.392 396.086 li
253.144 396.086 li
255.334 396.086 257.109 394.311 257.109 392.121 cv
257.109 334.301 li
257.109 332.112 255.334 330.336 253.144 330.336 cv
cp
.145098 .286275 .458824 rgb
f
217.725 392.499 mo
217.725 393.851 216.628 394.948 215.276 394.948 cv
210.99 394.948 li
209.637 394.948 208.541 393.851 208.541 392.499 cv
208.541 333.108 li
208.541 331.755 209.637 330.659 210.99 330.659 cv
215.276 330.659 li
216.628 330.659 217.725 331.755 217.725 333.108 cv
217.725 392.499 li
.270588 .447059 .658824 rgb
f
240.821 323.26 mo
235.617 323.26 li
231.375 323.26 228.047 325.692 227.971 328.816 cv
227.988 328.816 li
230.845 328.816 li
231.034 328.825 li
231.131 327.621 232.982 326.322 235.617 326.322 cv
240.821 326.322 li
243.353 326.322 245.413 328.382 245.413 330.914 cv
245.413 405.458 li
245.413 407.991 243.353 410.051 240.821 410.051 cv
235.005 410.051 li
232.472 410.051 230.412 407.991 230.412 405.458 cv
230.412 375.304 li
227.351 375.304 li
227.351 405.458 li
227.351 409.679 230.784 413.112 235.005 413.112 cv
240.821 413.112 li
245.041 413.112 248.475 409.679 248.475 405.458 cv
248.475 330.914 li
248.475 326.694 245.041 323.26 240.821 323.26 cv
cp
1 .2 .196078 rgb
f
248.475 319.128 mo
232.096 319.128 li
227.876 319.128 224.443 322.561 224.443 326.781 cv
224.443 328.816 li
227.504 328.816 li
227.504 326.781 li
227.504 324.249 229.564 322.189 232.096 322.189 cv
248.475 322.189 li
251.007 322.189 253.067 324.249 253.067 326.781 cv
253.067 412.347 li
253.067 414.879 251.007 416.939 248.475 416.939 cv
213.575 416.939 li
211.043 416.939 208.983 414.879 208.983 412.347 cv
208.983 399.183 li
205.921 399.183 li
205.921 412.347 li
205.921 416.567 209.355 420 213.575 420 cv
248.475 420 li
252.695 420 256.128 416.567 256.128 412.347 cv
256.128 326.781 li
256.128 322.561 252.695 319.128 248.475 319.128 cv
cp
.729412 .729412 .729412 rgb
f
248.475 319.128 mo
232.096 319.128 li
227.876 319.128 224.443 322.561 224.443 326.781 cv
224.443 328.816 li
227.504 328.816 li
227.504 326.781 li
227.504 324.249 229.564 322.189 232.096 322.189 cv
248.475 322.189 li
251.007 322.189 253.067 324.249 253.067 326.781 cv
253.067 412.347 li
253.067 414.879 251.007 416.939 248.475 416.939 cv
213.575 416.939 li
211.043 416.939 208.983 414.879 208.983 412.347 cv
208.983 399.183 li
205.921 399.183 li
205.921 412.347 li
205.921 416.567 209.355 420 213.575 420 cv
248.475 420 li
252.695 420 256.128 416.567 256.128 412.347 cv
256.128 326.781 li
256.128 322.561 252.695 319.128 248.475 319.128 cv
cp
1 .2 .196078 rgb
f
208.439 413.798 mo
208.439 416.449 210.549 418.606 213.144 418.606 cv
248.905 418.606 li
251.5 418.606 253.611 416.449 253.611 413.798 cv
253.611 412.516 li
253.611 415.167 251.5 417.324 248.905 417.324 cv
213.144 417.324 li
210.549 417.324 208.439 415.167 208.439 412.516 cv
208.439 413.798 li
cp
1 .690196 .690196 rgb
f
224.697 326.953 mo
225.297 323.343 228.372 320.582 232.073 320.582 cv
248.102 320.582 li
251.804 320.582 254.879 323.343 255.479 326.953 cv
255.589 326.953 li
255.559 322.76 252.213 319.357 248.102 319.357 cv
232.073 319.357 li
227.962 319.357 224.617 322.76 224.586 326.953 cv
224.697 326.953 li
cp
f
240.733 323.624 mo
235.686 323.624 li
231.67 323.624 228.508 325.874 228.291 328.799 cv
228.717 328.799 li
229.737 326.68 232.43 325.199 235.686 325.199 cv
240.733 325.199 li
244.825 325.199 248.154 328.528 248.154 332.62 cv
248.154 331.045 li
248.154 326.953 244.825 323.624 240.733 323.624 cv
cp
f
234.778 411.508 mo
241.048 411.508 li
243.777 411.508 245.997 409.288 245.997 406.558 cv
245.997 405.477 li
245.997 408.206 243.777 410.426 241.048 410.426 cv
234.778 410.426 li
232.049 410.426 229.828 408.206 229.828 405.477 cv
229.828 406.558 li
229.828 409.288 232.049 411.508 234.778 411.508 cv
cp
f
233.386 377.138 mo
233.253 378.092 232.03 378.824 230.648 378.824 cv
227.269 378.824 li
225.887 378.824 224.664 378.092 224.531 377.138 cv
221.665 356.598 li
221.273 353.785 223.07 351.272 225.72 351.272 cv
232.197 351.272 li
234.846 351.272 236.644 353.785 236.251 356.598 cv
233.386 377.138 li
.737255 .0823529 .0823529 rgb
f
233.74 351.59 mo
234.429 352.561 234.758 353.854 234.568 355.22 cv
231.702 375.76 li
231.569 376.714 230.346 377.447 228.964 377.447 cv
225.585 377.447 li
225.235 377.447 224.896 377.399 224.581 377.313 cv
224.831 378.179 225.974 378.824 227.269 378.824 cv
230.648 378.824 li
232.03 378.824 233.253 378.092 233.386 377.138 cv
236.251 356.598 li
236.561 354.376 235.502 352.348 233.74 351.59 cv
.568627 .0509804 .0509804 rgb
f
242.658 358.925 mo
242.658 366.534 236.49 372.702 228.882 372.702 cv
221.273 372.702 215.105 366.534 215.105 358.925 cv
215.105 351.317 221.273 345.149 228.882 345.149 cv
236.49 345.149 242.658 351.317 242.658 358.925 cv
.8 .8 .8 rgb
f
241.893 358.925 mo
241.893 366.111 236.067 371.936 228.882 371.936 cv
221.696 371.936 215.871 366.111 215.871 358.925 cv
215.871 351.74 221.696 345.915 228.882 345.915 cv
236.067 345.915 241.893 351.74 241.893 358.925 cv
1 .2 .196078 rgb
f
239.495 358.925 mo
239.495 364.787 234.743 369.538 228.882 369.538 cv
223.02 369.538 218.269 364.787 218.269 358.925 cv
218.269 353.064 223.02 348.313 228.882 348.313 cv
234.743 348.313 239.495 353.064 239.495 358.925 cv
.8 .8 .8 rgb
f
239.035 358.925 mo
239.035 364.533 234.489 369.079 228.882 369.079 cv
223.274 369.079 218.728 364.533 218.728 358.925 cv
218.728 353.318 223.274 348.772 228.882 348.772 cv
234.489 348.772 239.035 353.318 239.035 358.925 cv
1 1 1 rgb
f
229.009 351.273 mo
228.915 351.367 li
228.821 351.273 li
228.821 349.211 li
228.915 349.117 li
229.009 349.211 li
229.009 351.273 li
.145098 .286275 .458824 rgb
f
227.664 351.366 mo
227.588 351.475 li
227.479 351.399 li
227.121 349.368 li
227.197 349.259 li
227.306 349.335 li
227.664 351.366 li
f
226.355 351.692 mo
226.299 351.812 li
226.179 351.756 li
225.473 349.818 li
225.53 349.697 li
225.65 349.754 li
226.355 351.692 li
f
225.123 352.239 mo
225.089 352.367 li
224.961 352.333 li
223.929 350.547 li
223.963 350.419 li
224.092 350.453 li
225.123 352.239 li
f
224.004 352.993 mo
223.993 353.125 li
223.861 353.113 li
222.535 351.533 li
222.547 351.401 li
222.679 351.413 li
224.004 352.993 li
f
223.034 353.929 mo
223.045 354.061 li
222.913 354.072 li
221.333 352.746 li
221.322 352.614 li
221.454 352.603 li
223.034 353.929 li
f
222.24 355.019 mo
222.275 355.147 li
222.147 355.181 li
220.36 354.15 li
220.326 354.022 li
220.454 353.988 li
222.24 355.019 li
f
221.648 356.23 mo
221.704 356.351 li
221.584 356.407 li
219.646 355.701 li
219.59 355.581 li
219.71 355.525 li
221.648 356.23 li
f
221.276 357.526 mo
221.352 357.635 li
221.243 357.711 li
219.212 357.353 li
219.136 357.244 li
219.245 357.168 li
221.276 357.526 li
f
221.134 358.867 mo
221.228 358.961 li
221.134 359.055 li
219.071 359.055 li
218.977 358.961 li
219.071 358.867 li
221.134 358.867 li
f
221.227 360.212 mo
221.336 360.289 li
221.259 360.397 li
219.228 360.755 li
219.12 360.679 li
219.196 360.571 li
221.227 360.212 li
f
221.552 361.521 mo
221.672 361.577 li
221.616 361.697 li
219.678 362.403 li
219.558 362.347 li
219.614 362.227 li
221.552 361.521 li
f
222.1 362.753 mo
222.228 362.788 li
222.193 362.916 li
220.407 363.947 li
220.279 363.913 li
220.314 363.785 li
222.1 362.753 li
f
222.853 363.872 mo
222.985 363.883 li
222.973 364.015 li
221.394 365.341 li
221.261 365.33 li
221.273 365.198 li
222.853 363.872 li
f
223.789 364.843 mo
223.921 364.831 li
223.933 364.963 li
222.607 366.543 li
222.475 366.555 li
222.463 366.423 li
223.789 364.843 li
f
224.879 365.636 mo
225.007 365.602 li
225.042 365.73 li
224.01 367.516 li
223.882 367.55 li
223.848 367.422 li
224.879 365.636 li
f
226.091 366.228 mo
226.211 366.172 li
226.267 366.292 li
225.562 368.23 li
225.441 368.286 li
225.385 368.166 li
226.091 366.228 li
f
227.387 366.6 mo
227.495 366.524 li
227.571 366.633 li
227.213 368.664 li
227.105 368.74 li
227.029 368.632 li
227.387 366.6 li
f
228.728 366.743 mo
228.821 366.649 li
228.915 366.743 li
228.915 368.805 li
228.821 368.899 li
228.728 368.805 li
228.728 366.743 li
f
230.073 366.649 mo
230.149 366.541 li
230.258 366.617 li
230.616 368.648 li
230.54 368.757 li
230.431 368.681 li
230.073 366.649 li
f
231.382 366.324 mo
231.438 366.204 li
231.558 366.26 li
232.263 368.198 li
232.207 368.318 li
232.087 368.262 li
231.382 366.324 li
f
232.614 365.777 mo
232.648 365.648 li
232.776 365.683 li
233.808 367.469 li
233.773 367.597 li
233.645 367.563 li
232.614 365.777 li
f
233.732 365.023 mo
233.744 364.891 li
233.876 364.903 li
235.202 366.483 li
235.19 366.615 li
235.058 366.603 li
233.732 365.023 li
f
234.703 364.087 mo
234.691 363.955 li
234.824 363.944 li
236.403 365.269 li
236.415 365.402 li
236.283 365.413 li
234.703 364.087 li
f
235.496 362.997 mo
235.462 362.869 li
235.59 362.835 li
237.376 363.866 li
237.411 363.994 li
237.283 364.028 li
235.496 362.997 li
f
236.088 361.785 mo
236.032 361.665 li
236.152 361.609 li
238.091 362.315 li
238.147 362.435 li
238.027 362.491 li
236.088 361.785 li
f
236.461 360.49 mo
236.385 360.381 li
236.493 360.305 li
238.525 360.663 li
238.601 360.772 li
238.492 360.848 li
236.461 360.49 li
f
236.603 359.149 mo
236.509 359.055 li
236.603 358.961 li
238.666 358.961 li
238.759 359.055 li
238.666 359.149 li
236.603 359.149 li
f
236.51 357.803 mo
236.401 357.727 li
236.477 357.619 li
238.508 357.26 li
238.617 357.337 li
238.541 357.445 li
236.51 357.803 li
f
236.185 356.495 mo
236.064 356.439 li
236.12 356.319 li
238.059 355.613 li
238.179 355.669 li
238.123 355.789 li
236.185 356.495 li
f
235.637 355.263 mo
235.509 355.228 li
235.543 355.1 li
237.329 354.069 li
237.458 354.103 li
237.423 354.231 li
235.637 355.263 li
f
234.884 354.144 mo
234.752 354.133 li
234.763 354 li
236.343 352.675 li
236.475 352.686 li
236.464 352.818 li
234.884 354.144 li
f
233.948 353.173 mo
233.816 353.185 li
233.804 353.053 li
235.13 351.473 li
235.262 351.461 li
235.274 351.593 li
233.948 353.173 li
f
232.857 352.38 mo
232.729 352.414 li
232.695 352.286 li
233.726 350.5 li
233.854 350.466 li
233.889 350.594 li
232.857 352.38 li
f
231.646 351.788 mo
231.526 351.844 li
231.47 351.724 li
232.175 349.786 li
232.295 349.73 li
232.351 349.85 li
231.646 351.788 li
f
230.35 351.415 mo
230.241 351.491 li
230.165 351.383 li
230.523 349.352 li
230.632 349.275 li
230.708 349.384 li
230.35 351.415 li
f
230.259 358.925 mo
230.259 358.412 229.975 357.969 229.558 357.732 cv
229.444 354.615 229.184 349.267 228.882 349.267 cv
228.58 349.267 228.32 354.615 228.205 357.732 cv
227.789 357.969 227.504 358.412 227.504 358.925 cv
227.504 359.418 227.765 359.847 228.154 360.091 cv
228.208 360.816 228.512 361.374 228.882 361.374 cv
229.252 361.374 229.555 360.816 229.609 360.091 cv
229.998 359.847 230.259 359.418 230.259 358.925 cv
.92549 .309804 .368627 rgb
f
229.158 345.152 mo
229.157 345.152 229.157 345.152 229.156 345.152 cv
229.157 345.152 229.157 345.152 229.158 345.152 cv
229.136 345.152 mo
229.136 345.152 229.136 345.152 229.135 345.152 cv
229.136 345.152 229.136 345.152 229.136 345.152 cv
229.116 345.151 mo
229.115 345.151 229.114 345.151 229.113 345.151 cv
229.114 345.151 229.115 345.151 229.116 345.151 cv
229.095 345.151 mo
229.094 345.151 229.093 345.151 229.091 345.151 cv
229.093 345.151 229.094 345.151 229.095 345.151 cv
229.075 345.151 mo
229.073 345.151 229.071 345.151 229.068 345.15 cv
229.071 345.151 229.073 345.151 229.075 345.151 cv
229.054 345.15 mo
229.051 345.15 229.049 345.15 229.047 345.15 cv
229.049 345.15 229.051 345.15 229.054 345.15 cv
229.033 345.15 mo
229.03 345.15 229.027 345.15 229.023 345.15 cv
229.027 345.15 229.03 345.15 229.033 345.15 cv
229.012 345.15 mo
229.008 345.15 229.005 345.15 229.002 345.15 cv
229.005 345.15 229.008 345.15 229.012 345.15 cv
228.99 345.15 mo
228.986 345.15 228.983 345.15 228.979 345.15 cv
228.983 345.15 228.987 345.15 228.99 345.15 cv
228.968 345.15 mo
228.965 345.149 228.961 345.149 228.957 345.149 cv
228.961 345.149 228.965 345.149 228.968 345.15 cv
228.947 345.149 mo
228.943 345.149 228.938 345.149 228.934 345.149 cv
228.938 345.149 228.943 345.149 228.947 345.149 cv
228.925 345.149 mo
228.921 345.149 228.917 345.149 228.912 345.149 cv
228.917 345.149 228.921 345.149 228.925 345.149 cv
228.903 345.149 mo
228.896 345.149 228.889 345.149 228.882 345.149 cv
228.889 345.149 228.896 345.149 228.903 345.149 cv
.462745 .564706 .713725 rgb
f
215.108 359.202 mo
215.108 359.201 215.108 359.201 215.108 359.2 cv
215.108 359.201 215.108 359.201 215.108 359.202 cv
215.108 359.18 mo
215.108 359.18 215.108 359.179 215.108 359.179 cv
215.108 359.179 215.108 359.18 215.108 359.18 cv
215.107 359.16 mo
215.107 359.159 215.107 359.158 215.107 359.157 cv
215.107 359.158 215.107 359.159 215.107 359.16 cv
215.107 359.139 mo
215.107 359.138 215.107 359.136 215.107 359.135 cv
215.107 359.136 215.107 359.138 215.107 359.139 cv
215.107 359.119 mo
215.107 359.117 215.107 359.114 215.107 359.112 cv
215.107 359.114 215.107 359.116 215.107 359.119 cv
215.107 359.097 mo
215.106 359.095 215.106 359.093 215.106 359.091 cv
215.106 359.093 215.106 359.095 215.107 359.097 cv
215.106 359.077 mo
215.106 359.074 215.106 359.07 215.106 359.067 cv
215.106 359.07 215.106 359.073 215.106 359.077 cv
215.106 359.055 mo
215.106 359.052 215.106 359.049 215.106 359.046 cv
215.106 359.049 215.106 359.052 215.106 359.055 cv
215.106 359.034 mo
215.106 359.03 215.106 359.027 215.106 359.023 cv
215.106 359.027 215.106 359.03 215.106 359.034 cv
215.106 359.012 mo
215.106 359.008 215.106 359.004 215.106 359.001 cv
215.106 359.004 215.106 359.009 215.106 359.012 cv
215.106 358.991 mo
215.106 358.986 215.106 358.982 215.106 358.978 cv
215.106 358.982 215.106 358.986 215.106 358.991 cv
215.106 358.969 mo
215.105 358.965 215.105 358.96 215.105 358.956 cv
215.105 358.96 215.105 358.965 215.106 358.969 cv
215.105 358.947 mo
215.105 358.94 215.105 358.933 215.105 358.925 cv
215.105 358.925 li
215.105 358.932 215.105 358.94 215.105 358.947 cv
.490196 .615686 .760784 rgb
f
220.397 368.79 mo
219.848 368.654 219.311 368.489 218.787 368.296 cv
216.562 365.9 215.177 362.713 215.108 359.202 cv
215.108 359.201 215.108 359.201 215.108 359.2 cv
215.108 359.193 215.108 359.187 215.108 359.18 cv
215.108 359.18 215.108 359.179 215.108 359.179 cv
215.108 359.173 215.108 359.166 215.107 359.16 cv
215.107 359.159 215.107 359.158 215.107 359.157 cv
215.107 359.151 215.107 359.145 215.107 359.139 cv
215.107 359.138 215.107 359.136 215.107 359.135 cv
215.107 359.129 215.107 359.124 215.107 359.119 cv
215.107 359.116 215.107 359.114 215.107 359.112 cv
215.107 359.107 215.107 359.102 215.107 359.097 cv
215.106 359.095 215.106 359.093 215.106 359.091 cv
215.106 359.086 215.106 359.081 215.106 359.077 cv
215.106 359.073 215.106 359.07 215.106 359.067 cv
215.106 359.063 215.106 359.059 215.106 359.055 cv
215.106 359.052 215.106 359.049 215.106 359.046 cv
215.106 359.042 215.106 359.038 215.106 359.034 cv
215.106 359.03 215.106 359.027 215.106 359.023 cv
215.106 359.02 215.106 359.016 215.106 359.012 cv
215.106 359.009 215.106 359.004 215.106 359.001 cv
215.106 358.997 215.106 358.994 215.106 358.991 cv
215.106 358.986 215.106 358.982 215.106 358.978 cv
215.106 358.975 215.106 358.972 215.106 358.969 cv
215.105 358.965 215.105 358.96 215.105 358.956 cv
215.105 358.953 215.105 358.95 215.105 358.947 cv
215.105 358.94 215.105 358.932 215.105 358.925 cv
215.105 351.317 221.273 345.149 228.882 345.149 cv
228.882 345.149 li
228.889 345.149 228.896 345.149 228.903 345.149 cv
228.906 345.149 228.909 345.149 228.912 345.149 cv
228.917 345.149 228.921 345.149 228.925 345.149 cv
228.928 345.149 228.931 345.149 228.934 345.149 cv
228.938 345.149 228.943 345.149 228.947 345.149 cv
228.95 345.149 228.953 345.149 228.957 345.149 cv
228.961 345.149 228.965 345.149 228.968 345.15 cv
228.972 345.15 228.976 345.15 228.979 345.15 cv
228.983 345.15 228.986 345.15 228.99 345.15 cv
228.994 345.15 228.998 345.15 229.002 345.15 cv
229.005 345.15 229.008 345.15 229.012 345.15 cv
229.016 345.15 229.019 345.15 229.023 345.15 cv
229.027 345.15 229.03 345.15 229.033 345.15 cv
229.038 345.15 229.042 345.15 229.047 345.15 cv
229.049 345.15 229.051 345.15 229.054 345.15 cv
229.058 345.15 229.064 345.15 229.068 345.15 cv
229.071 345.151 229.073 345.151 229.075 345.151 cv
229.08 345.151 229.086 345.151 229.091 345.151 cv
229.093 345.151 229.094 345.151 229.095 345.151 cv
229.101 345.151 229.107 345.151 229.113 345.151 cv
229.114 345.151 229.115 345.151 229.116 345.151 cv
229.122 345.151 229.129 345.151 229.135 345.152 cv
229.136 345.152 229.136 345.152 229.136 345.152 cv
229.143 345.152 229.15 345.152 229.156 345.152 cv
229.157 345.152 229.157 345.152 229.158 345.152 cv
232.669 345.221 235.856 346.606 238.252 348.831 cv
238.446 349.355 238.611 349.892 238.746 350.441 cv
236.36 347.669 232.826 345.915 228.882 345.915 cv
221.696 345.915 215.871 351.74 215.871 358.925 cv
215.871 362.87 217.626 366.404 220.397 368.79 cv
.858823 .858823 .858823 rgb
f
224.031 369.229 mo
222.779 369.229 221.562 369.077 220.397 368.79 cv
217.626 366.404 215.871 362.87 215.871 358.925 cv
215.871 351.74 221.696 345.915 228.882 345.915 cv
232.826 345.915 236.36 347.669 238.746 350.441 cv
239.033 351.605 239.185 352.822 239.185 354.075 cv
239.185 354.709 239.146 355.333 239.071 355.947 cv
237.783 351.535 233.709 348.313 228.882 348.313 cv
228.284 348.313 227.699 348.362 227.128 348.457 cv
226.602 347.95 225.824 347.69 224.95 347.69 cv
224.084 347.69 223.123 347.946 222.218 348.471 cv
220.191 349.647 219.196 351.739 219.945 353.198 cv
218.885 354.85 218.269 356.816 218.269 358.925 cv
218.269 363.753 221.492 367.827 225.903 369.114 cv
225.29 369.19 224.665 369.229 224.031 369.229 cv
1 .443137 .439216 rgb
f
225.903 369.114 mo
221.492 367.827 218.269 363.753 218.269 358.925 cv
218.269 356.816 218.885 354.85 219.945 353.198 cv
219.963 353.232 219.981 353.265 220 353.297 cv
220.066 353.411 220.141 353.518 220.225 353.617 cv
219.276 355.161 218.728 356.979 218.728 358.925 cv
218.728 363.92 222.335 368.073 227.086 368.921 cv
226.697 369.001 226.303 369.065 225.903 369.114 cv
238.877 357.13 mo
238.029 352.379 233.877 348.772 228.882 348.772 cv
228.401 348.772 227.928 348.805 227.465 348.87 cv
227.369 348.718 227.256 348.58 227.128 348.457 cv
227.699 348.362 228.284 348.313 228.882 348.313 cv
233.709 348.313 237.783 351.535 239.071 355.947 cv
239.022 356.346 238.957 356.741 238.877 357.13 cv
.858823 .858823 .858823 rgb
f
227.086 368.921 mo
222.335 368.073 218.728 363.92 218.728 358.925 cv
218.728 356.979 219.276 355.161 220.225 353.617 cv
220.747 354.231 221.594 354.548 222.558 354.548 cv
223.424 354.548 224.386 354.292 225.29 353.767 cv
226.34 353.159 227.112 352.305 227.51 351.42 cv
227.588 351.475 li
227.664 351.366 li
227.623 351.138 li
227.899 350.364 227.882 349.585 227.509 348.941 cv
227.495 348.917 227.48 348.893 227.465 348.87 cv
227.928 348.805 228.401 348.772 228.882 348.772 cv
233.877 348.772 238.029 352.379 238.877 357.13 cv
238.749 357.756 238.583 358.366 238.38 358.961 cv
236.603 358.961 li
236.509 359.055 li
236.603 359.149 li
238.315 359.149 li
238.148 359.618 237.958 360.079 237.748 360.526 cv
236.493 360.305 li
236.385 360.381 li
236.461 360.49 li
237.663 360.702 li
237.461 361.118 237.239 361.524 237 361.918 cv
236.152 361.609 li
236.032 361.665 li
236.088 361.785 li
236.9 362.081 li
236.668 362.453 236.421 362.814 236.159 363.163 cv
235.59 362.835 li
235.462 362.869 li
235.496 362.997 li
236.044 363.313 li
235.786 363.648 235.514 363.973 235.23 364.285 cv
234.824 363.944 li
234.691 363.955 li
234.703 364.087 li
235.103 364.423 li
234.817 364.728 234.52 365.021 234.21 365.301 cv
233.876 364.903 li
233.744 364.891 li
233.732 365.023 li
234.071 365.427 li
233.755 365.706 233.428 365.972 233.089 366.225 cv
232.776 365.683 li
232.648 365.648 li
232.614 365.777 li
232.937 366.337 li
232.586 366.593 232.223 366.834 231.849 367.06 cv
231.558 366.26 li
231.438 366.204 li
231.382 366.324 li
231.685 367.157 li
231.29 367.389 230.883 367.603 230.466 367.799 cv
230.258 366.617 li
230.149 366.541 li
230.073 366.649 li
230.29 367.88 li
229.843 368.083 229.384 368.265 228.915 368.425 cv
228.915 366.743 li
228.821 366.649 li
228.728 366.743 li
228.728 368.487 li
228.193 368.661 227.645 368.806 227.086 368.921 cv
227.495 366.524 mo
227.387 366.6 li
227.029 368.632 li
227.105 368.74 li
227.213 368.664 li
227.571 366.633 li
227.495 366.524 li
226.211 366.172 mo
226.091 366.228 li
225.385 368.166 li
225.441 368.286 li
225.562 368.23 li
226.267 366.292 li
226.211 366.172 li
225.007 365.602 mo
224.879 365.636 li
223.848 367.422 li
223.882 367.55 li
224.01 367.516 li
225.042 365.73 li
225.007 365.602 li
223.921 364.831 mo
223.789 364.843 li
222.463 366.423 li
222.475 366.555 li
222.607 366.543 li
223.933 364.963 li
223.921 364.831 li
222.853 363.872 mo
221.273 365.198 li
221.261 365.33 li
221.394 365.341 li
222.973 364.015 li
222.985 363.883 li
222.853 363.872 li
222.1 362.753 mo
220.314 363.785 li
220.279 363.913 li
220.407 363.947 li
222.193 362.916 li
222.228 362.788 li
222.1 362.753 li
221.552 361.521 mo
219.614 362.227 li
219.558 362.347 li
219.678 362.403 li
221.616 361.697 li
221.672 361.577 li
221.552 361.521 li
228.821 349.337 mo
228.545 349.974 228.312 354.824 228.205 357.732 cv
227.789 357.969 227.504 358.412 227.504 358.925 cv
227.504 359.418 227.765 359.847 228.154 360.091 cv
228.208 360.816 228.512 361.374 228.882 361.374 cv
229.252 361.374 229.555 360.816 229.609 360.091 cv
229.998 359.847 230.259 359.418 230.259 358.925 cv
230.259 358.412 229.975 357.969 229.558 357.732 cv
229.46 355.063 229.255 350.757 229.009 349.575 cv
229.009 349.211 li
228.915 349.117 li
228.821 349.211 li
228.821 349.337 li
221.227 360.212 mo
219.196 360.571 li
219.12 360.679 li
219.228 360.755 li
221.259 360.397 li
221.336 360.289 li
221.227 360.212 li
219.071 358.867 mo
218.977 358.961 li
219.071 359.055 li
221.134 359.055 li
221.228 358.961 li
221.134 358.867 li
219.071 358.867 li
238.508 357.26 mo
236.477 357.619 li
236.401 357.727 li
236.51 357.803 li
238.541 357.445 li
238.617 357.337 li
238.508 357.26 li
219.245 357.168 mo
219.136 357.244 li
219.212 357.353 li
221.243 357.711 li
221.352 357.635 li
221.276 357.526 li
219.245 357.168 li
238.059 355.613 mo
236.12 356.319 li
236.064 356.439 li
236.185 356.495 li
238.123 355.789 li
238.179 355.669 li
238.059 355.613 li
219.71 355.525 mo
219.59 355.581 li
219.646 355.701 li
221.584 356.407 li
221.704 356.351 li
221.648 356.23 li
219.71 355.525 li
237.329 354.069 mo
235.543 355.1 li
235.509 355.228 li
235.637 355.263 li
237.423 354.231 li
237.458 354.103 li
237.329 354.069 li
220.454 353.988 mo
220.326 354.022 li
220.36 354.15 li
222.147 355.181 li
222.275 355.147 li
222.24 355.019 li
220.454 353.988 li
236.343 352.675 mo
234.763 354 li
234.752 354.133 li
234.884 354.144 li
236.464 352.818 li
236.475 352.686 li
236.343 352.675 li
235.262 351.461 mo
235.13 351.473 li
233.804 353.053 li
233.816 353.185 li
233.948 353.173 li
235.274 351.593 li
235.262 351.461 li
233.854 350.466 mo
233.726 350.5 li
232.695 352.286 li
232.729 352.414 li
232.857 352.38 li
233.889 350.594 li
233.854 350.466 li
232.295 349.73 mo
232.175 349.786 li
231.47 351.724 li
231.526 351.844 li
231.646 351.788 li
232.351 349.85 li
232.295 349.73 li
230.632 349.275 mo
230.523 349.352 li
230.165 351.383 li
230.241 351.491 li
230.35 351.415 li
230.708 349.384 li
230.632 349.275 li
1 1 1 rgb
f
229.009 349.575 mo
228.968 349.377 228.925 349.267 228.882 349.267 cv
228.861 349.267 228.841 349.291 228.821 349.337 cv
228.821 349.211 li
228.915 349.117 li
229.009 349.211 li
229.009 349.575 li
.403922 .501961 .623529 rgb
f
227.588 351.475 mo
227.51 351.42 li
227.552 351.326 227.59 351.232 227.623 351.138 cv
227.664 351.366 li
227.588 351.475 li
f
222.147 355.181 mo
220.36 354.15 li
220.326 354.022 li
220.454 353.988 li
222.24 355.019 li
222.275 355.147 li
222.147 355.181 li
f
221.584 356.407 mo
219.646 355.701 li
219.59 355.581 li
219.71 355.525 li
221.648 356.23 li
221.704 356.351 li
221.584 356.407 li
f
221.243 357.711 mo
219.212 357.353 li
219.136 357.244 li
219.245 357.168 li
221.276 357.526 li
221.352 357.635 li
221.243 357.711 li
f
221.134 359.055 mo
219.071 359.055 li
218.977 358.961 li
219.071 358.867 li
221.134 358.867 li
221.228 358.961 li
221.134 359.055 li
f
219.228 360.755 mo
219.12 360.679 li
219.196 360.571 li
221.227 360.212 li
221.336 360.289 li
221.259 360.397 li
219.228 360.755 li
f
219.678 362.403 mo
219.558 362.347 li
219.614 362.227 li
221.552 361.521 li
221.672 361.577 li
221.616 361.697 li
219.678 362.403 li
f
220.407 363.947 mo
220.279 363.913 li
220.314 363.785 li
222.1 362.753 li
222.228 362.788 li
222.193 362.916 li
220.407 363.947 li
f
221.394 365.341 mo
221.261 365.33 li
221.273 365.198 li
222.853 363.872 li
222.985 363.883 li
222.973 364.015 li
221.394 365.341 li
f
222.475 366.555 mo
222.463 366.423 li
223.789 364.843 li
223.921 364.831 li
223.933 364.963 li
222.607 366.543 li
222.475 366.555 li
f
223.882 367.55 mo
223.848 367.422 li
224.879 365.636 li
225.007 365.602 li
225.042 365.73 li
224.01 367.516 li
223.882 367.55 li
f
225.441 368.286 mo
225.385 368.166 li
226.091 366.228 li
226.211 366.172 li
226.267 366.292 li
225.562 368.23 li
225.441 368.286 li
f
227.105 368.74 mo
227.029 368.632 li
227.387 366.6 li
227.495 366.524 li
227.571 366.633 li
227.213 368.664 li
227.105 368.74 li
f
228.728 368.487 mo
228.728 366.743 li
228.821 366.649 li
228.915 366.743 li
228.915 368.425 li
228.853 368.446 228.79 368.467 228.728 368.487 cv
f
230.29 367.88 mo
230.073 366.649 li
230.149 366.541 li
230.258 366.617 li
230.466 367.799 li
230.408 367.826 230.349 367.853 230.29 367.88 cv
f
231.685 367.157 mo
231.382 366.324 li
231.438 366.204 li
231.558 366.26 li
231.849 367.06 li
231.794 367.092 231.74 367.125 231.685 367.157 cv
f
232.937 366.337 mo
232.614 365.777 li
232.648 365.648 li
232.776 365.683 li
233.089 366.225 li
233.039 366.263 232.988 366.3 232.937 366.337 cv
f
234.071 365.427 mo
233.732 365.023 li
233.744 364.891 li
233.876 364.903 li
234.21 365.301 li
234.164 365.343 234.117 365.385 234.071 365.427 cv
f
235.103 364.423 mo
234.703 364.087 li
234.691 363.955 li
234.824 363.944 li
235.23 364.285 li
235.187 364.331 235.146 364.377 235.103 364.423 cv
f
236.044 363.313 mo
235.496 362.997 li
235.462 362.869 li
235.59 362.835 li
236.159 363.163 li
236.121 363.213 236.083 363.264 236.044 363.313 cv
f
236.9 362.081 mo
236.088 361.785 li
236.032 361.665 li
236.152 361.609 li
237 361.918 li
236.967 361.972 236.934 362.027 236.9 362.081 cv
f
237.663 360.702 mo
236.461 360.49 li
236.385 360.381 li
236.493 360.305 li
237.748 360.526 li
237.72 360.585 237.692 360.643 237.663 360.702 cv
f
238.315 359.149 mo
236.603 359.149 li
236.509 359.055 li
236.603 358.961 li
238.38 358.961 li
238.359 359.024 238.337 359.086 238.315 359.149 cv
f
236.51 357.803 mo
236.401 357.727 li
236.477 357.619 li
238.508 357.26 li
238.617 357.337 li
238.541 357.445 li
236.51 357.803 li
f
236.185 356.495 mo
236.064 356.439 li
236.12 356.319 li
238.059 355.613 li
238.179 355.669 li
238.123 355.789 li
236.185 356.495 li
f
235.637 355.263 mo
235.509 355.228 li
235.543 355.1 li
237.329 354.069 li
237.458 354.103 li
237.423 354.231 li
235.637 355.263 li
f
234.884 354.144 mo
234.752 354.133 li
234.763 354 li
236.343 352.675 li
236.475 352.686 li
236.464 352.818 li
234.884 354.144 li
f
233.816 353.185 mo
233.804 353.053 li
235.13 351.473 li
235.262 351.461 li
235.274 351.593 li
233.948 353.173 li
233.816 353.185 li
f
232.729 352.414 mo
232.695 352.286 li
233.726 350.5 li
233.854 350.466 li
233.889 350.594 li
232.857 352.38 li
232.729 352.414 li
f
231.526 351.844 mo
231.47 351.724 li
232.175 349.786 li
232.295 349.73 li
232.351 349.85 li
231.646 351.788 li
231.526 351.844 li
f
230.241 351.491 mo
230.165 351.383 li
230.523 349.352 li
230.632 349.275 li
230.708 349.384 li
230.35 351.415 li
230.241 351.491 li
f
228.882 361.374 mo
228.512 361.374 228.208 360.816 228.154 360.091 cv
227.765 359.847 227.504 359.418 227.504 358.925 cv
227.504 358.412 227.789 357.969 228.205 357.732 cv
228.312 354.824 228.545 349.974 228.821 349.337 cv
228.841 349.291 228.861 349.267 228.882 349.267 cv
228.925 349.267 228.968 349.377 229.009 349.575 cv
229.255 350.757 229.46 355.063 229.558 357.732 cv
229.975 357.969 230.259 358.412 230.259 358.925 cv
230.259 359.418 229.998 359.847 229.609 360.091 cv
229.555 360.816 229.252 361.374 228.882 361.374 cv
.94902 .517647 .560784 rgb
f
219.945 353.198 mo
219.196 351.739 220.191 349.647 222.218 348.471 cv
223.123 347.946 224.084 347.69 224.95 347.69 cv
225.824 347.69 226.602 347.95 227.128 348.457 cv
224.116 348.958 221.532 350.727 219.945 353.198 cv
1 .752941 .745098 rgb
f
220.225 353.617 mo
220.141 353.518 220.066 353.411 220 353.297 cv
219.981 353.265 219.963 353.232 219.945 353.198 cv
221.532 350.727 224.116 348.958 227.128 348.457 cv
227.256 348.58 227.369 348.718 227.465 348.87 cv
224.402 349.297 221.777 351.092 220.225 353.617 cv
.956863 .956863 .956863 rgb
f
222.558 354.548 mo
221.594 354.548 220.747 354.231 220.225 353.617 cv
221.777 351.092 224.402 349.297 227.465 348.87 cv
227.48 348.893 227.495 348.917 227.509 348.941 cv
227.882 349.585 227.899 350.364 227.623 351.138 cv
227.306 349.335 li
227.197 349.259 li
227.121 349.368 li
227.479 351.399 li
227.51 351.42 li
227.112 352.305 226.34 353.159 225.29 353.767 cv
224.386 354.292 223.424 354.548 222.558 354.548 cv
221.454 352.603 mo
221.322 352.614 li
221.333 352.746 li
222.913 354.072 li
223.045 354.061 li
223.034 353.929 li
221.454 352.603 li
222.547 351.401 mo
222.535 351.533 li
223.861 353.113 li
223.993 353.125 li
224.004 352.993 li
222.679 351.413 li
222.547 351.401 li
223.963 350.419 mo
223.929 350.547 li
224.961 352.333 li
225.089 352.367 li
225.123 352.239 li
224.092 350.453 li
223.963 350.419 li
225.53 349.697 mo
225.473 349.818 li
226.179 351.756 li
226.299 351.812 li
226.355 351.692 li
225.65 349.754 li
225.53 349.697 li
1 1 1 rgb
f
227.51 351.42 mo
227.479 351.399 li
227.121 349.368 li
227.197 349.259 li
227.306 349.335 li
227.623 351.138 li
227.59 351.232 227.552 351.326 227.51 351.42 cv
.686274 .85098 .886274 rgb
f
226.299 351.812 mo
226.179 351.756 li
225.473 349.818 li
225.53 349.697 li
225.65 349.754 li
226.355 351.692 li
226.299 351.812 li
f
225.089 352.367 mo
224.961 352.333 li
223.929 350.547 li
223.963 350.419 li
224.092 350.453 li
225.123 352.239 li
225.089 352.367 li
f
223.993 353.125 mo
223.861 353.113 li
222.535 351.533 li
222.547 351.401 li
222.679 351.413 li
224.004 352.993 li
223.993 353.125 li
f
222.913 354.072 mo
221.333 352.746 li
221.322 352.614 li
221.454 352.603 li
223.034 353.929 li
223.045 354.061 li
222.913 354.072 li
f
211.514 400.565 mo
211.396 401.405 210.321 402.049 209.105 402.049 cv
206.133 402.049 li
204.917 402.049 203.841 401.405 203.724 400.565 cv
201.204 382.498 li
200.859 380.024 202.44 377.814 204.77 377.814 cv
210.467 377.814 li
212.798 377.814 214.379 380.024 214.034 382.498 cv
211.514 400.565 li
cp
.737255 .0823529 .0823529 rgb
f
211.825 378.094 mo
212.431 378.948 212.721 380.085 212.553 381.286 cv
210.033 399.354 li
209.915 400.193 208.84 400.837 207.624 400.837 cv
204.652 400.837 li
204.344 400.837 204.045 400.795 203.768 400.72 cv
203.989 401.481 204.994 402.049 206.133 402.049 cv
209.105 402.049 li
210.321 402.049 211.396 401.405 211.514 400.565 cv
214.034 382.498 li
214.307 380.544 213.375 378.76 211.825 378.094 cv
cp
.568627 .0509804 .0509804 rgb
f
218.323 383.199 mo
218.323 392.42 213.38 396.798 207.282 396.798 cv
201.185 396.798 196.242 392.42 196.242 383.199 cv
196.242 373.978 201.185 366.504 207.282 366.504 cv
213.38 366.504 218.323 373.978 218.323 383.199 cv
cp
.211765 .219608 .270588 rgb
f
212.991 380.1 mo
211.038 385.204 206.386 388.168 202.601 386.719 cv
198.816 385.271 197.331 379.959 199.285 374.854 cv
201.238 369.75 205.89 366.786 209.675 368.234 cv
213.46 369.683 214.945 374.995 212.991 380.1 cv
cp
.317647 .329412 .4 rgb
f
205.147 374.571 mo
203.768 376.18 201.917 376.856 201.014 376.081 cv
200.111 375.306 200.497 373.374 201.877 371.766 cv
203.257 370.157 205.108 369.481 206.011 370.256 cv
206.914 371.03 206.527 372.962 205.147 374.571 cv
cp
.423529 .443137 .529412 rgb
f
86.1875 403.605 mo
83.6959 403.605 81.6214 402.643 80.1881 400.824 cv
78.7399 398.986 78.0058 396.356 78.0058 393.007 cv
81.0681 393.007 li
81.0681 395.614 81.5954 397.662 82.5938 398.929 cv
83.4371 400 84.6463 400.542 86.1875 400.542 cv
90.1436 400.542 96.7832 396.782 102.698 388.382 cv
109.108 379.279 112.638 367.61 112.638 355.524 cv
112.638 343.222 109.766 334.707 103.858 329.494 cv
98.5307 324.794 90.7421 322.604 79.347 322.604 cv
63.7954 322.604 53.7002 327.594 49.3412 337.437 cv
41.8031 354.457 53.5671 381.235 61.724 390.223 cv
59.4561 392.281 li
50.6017 382.524 38.3624 354.663 46.541 336.197 cv
51.4355 325.145 62.4731 319.542 79.347 319.542 cv
104.488 319.542 115.7 330.639 115.7 355.524 cv
115.7 368.235 111.972 380.531 105.202 390.145 cv
99.4448 398.322 91.9808 403.605 86.1875 403.605 cv
cp
1 .2 .196078 rgb
f
81.68 394.114 mo
77.4242 394.114 li
77.4242 388.754 li
81.68 388.754 li
81.68 394.114 li
cp
.698039 .698039 .698039 rgb
f
60.4376 387.772 mo
65.971 394.455 li
62.6949 397.168 li
57.1615 390.485 li
60.4376 387.772 li
cp
.737255 .0823529 .0823529 rgb
f
60.5559 391.65 mo
64.4641 388.414 70.2555 388.959 73.4912 392.868 cv
76.7271 396.776 76.1819 402.567 72.2737 405.803 cv
68.3656 409.039 62.5742 408.494 59.3384 404.585 cv
56.1026 400.677 56.6478 394.886 60.5559 391.65 cv
cp
.729412 .729412 .729412 rgb
f
74.9898 399.534 mo
74.5441 404.269 70.3435 407.747 65.6077 407.301 cv
60.8718 406.856 57.394 402.655 57.8398 397.919 cv
58.2856 393.183 62.4861 389.706 67.2219 390.151 cv
71.9578 390.597 75.4355 394.798 74.9898 399.534 cv
cp
.698039 .698039 .698039 rgb
f
68.4066 398.914 mo
68.3032 400.014 67.3274 400.822 66.2273 400.718 cv
65.1273 400.615 64.3194 399.639 64.423 398.539 cv
64.5265 397.439 65.5023 396.631 66.6023 396.735 cv
67.7024 396.838 68.5102 397.814 68.4066 398.914 cv
cp
.372549 .376471 .376471 rgb
f
64.6199 399.595 mo
64.4656 399.276 64.3874 398.917 64.423 398.539 cv
64.5265 397.439 65.5023 396.631 66.6023 396.735 cv
66.9801 396.77 67.3189 396.914 67.6027 397.125 cv
72.7279 392.882 li
71.3385 391.38 69.4192 390.358 67.2219 390.151 cv
62.4861 389.706 58.2856 393.183 57.8398 397.919 cv
57.633 400.117 58.2784 402.193 59.4946 403.838 cv
64.6199 399.595 li
cp
.866667 .866667 .866667 rgb
f
102.07 334.599 mo
98.3287 330.359 92.8396 328.682 87.1305 328.055 cv
87.1305 331.156 li
93.1664 331.87 97.1144 333.611 99.7739 336.625 cv
103.423 340.762 104.608 347.47 103.395 357.133 cv
101.136 375.129 90.9626 388.7 79.7299 388.7 cv
68.4975 388.7 58.3237 375.129 56.0646 357.133 cv
54.8516 347.47 56.0364 340.762 59.6862 336.625 cv
62.3455 333.611 66.2935 331.871 72.3291 331.156 cv
72.3291 328.055 li
66.6201 328.682 61.1312 330.359 57.3899 334.599 cv
53.1248 339.433 51.6973 346.929 53.0261 357.515 cv
54.2308 367.112 57.5943 375.836 62.4964 382.079 cv
67.4 388.323 73.5204 391.762 79.7299 391.762 cv
85.9396 391.762 92.0602 388.323 96.9637 382.079 cv
101.866 375.836 105.229 367.112 106.433 357.515 cv
107.762 346.929 106.335 339.433 102.07 334.599 cv
cp
.666667 .666667 .666667 rgb
f
63.6243 382.779 mo
58.8052 376.642 55.4988 368.066 54.3145 358.631 cv
53.0082 348.225 54.4115 340.856 58.6044 336.104 cv
62.0348 332.216 66.9603 330.521 72.1615 329.81 cv
72.1615 328.541 li
66.5492 329.158 61.1533 330.807 57.4754 334.975 cv
53.2826 339.727 51.8792 347.096 53.1855 357.502 cv
54.3699 366.937 57.6763 375.513 62.4953 381.65 cv
63.4677 382.888 64.4905 384.008 65.5509 385.017 cv
64.8906 384.317 64.2471 383.572 63.6243 382.779 cv
cp
.866667 .866667 .866667 rgb
f
81.2573 390.473 mo
92.7538 390.473 103.166 376.584 105.478 358.165 cv
106.72 348.275 105.507 341.409 101.772 337.176 cv
101.407 336.762 101.015 336.373 100.601 336.005 cv
104.333 340.239 105.544 347.104 104.303 356.989 cv
101.991 375.408 91.5785 389.298 80.0821 389.298 cv
75.7854 389.298 71.6406 387.357 68.013 383.965 cv
71.9081 388.077 76.4884 390.473 81.2573 390.473 cv
cp
f
76.695 330.839 mo
76.7902 331.941 75.9741 332.912 74.872 333.007 cv
70.4381 333.39 li
69.3361 333.485 68.3657 332.669 68.2705 331.567 cv
68.0215 328.685 li
67.9263 327.583 68.7425 326.613 69.8444 326.517 cv
74.2784 326.134 li
75.3804 326.039 76.3509 326.855 76.4461 327.957 cv
76.695 330.839 li
cp
1 .2 .196078 rgb
f
76.1045 329.931 mo
75.9377 328.001 li
75.8717 327.236 75.2195 326.637 74.4532 326.637 cv
74.3223 326.643 li
69.8883 327.026 li
69.0686 327.097 68.4593 327.821 68.5298 328.641 cv
68.6826 330.41 li
76.1045 329.931 li
cp
1 .301961 .301961 rgb
f
75.4293 328.045 mo
75.3857 327.542 74.9571 327.148 74.4532 327.148 cv
74.3662 327.151 li
69.9321 327.534 li
69.4255 327.578 69.0458 328.003 69.0397 328.501 cv
75.4293 328.045 li
cp
1 .690196 .690196 rgb
f
82.4208 330.839 mo
82.3256 331.941 83.1419 332.912 84.2438 333.007 cv
88.6777 333.39 li
89.7798 333.485 90.7503 332.669 90.8455 331.567 cv
91.0944 328.685 li
91.1896 327.583 90.3734 326.613 89.2714 326.517 cv
84.8374 326.134 li
83.7354 326.039 82.765 326.855 82.6698 327.957 cv
82.4208 330.839 li
cp
1 .2 .196078 rgb
f
83.0114 329.931 mo
83.1781 328.001 li
83.2441 327.236 83.8964 326.637 84.6627 326.637 cv
84.7935 326.643 li
89.2276 327.026 li
90.0473 327.097 90.6566 327.821 90.586 328.641 cv
90.4333 330.41 li
83.0114 329.931 li
cp
1 .301961 .301961 rgb
f
83.6865 328.045 mo
83.7301 327.542 84.1588 327.148 84.6627 327.148 cv
84.7496 327.151 li
89.1838 327.534 li
89.6905 327.578 90.0701 328.003 90.0763 328.501 cv
83.6865 328.045 li
cp
1 .690196 .690196 rgb
f
86.3947 401.372 mo
85.2521 401.372 84.2905 401.076 83.5175 400.499 cv
83.568 400.572 li
84.4312 401.668 85.669 402.224 87.2466 402.224 cv
91.2962 402.224 98.0929 398.375 104.148 389.776 cv
110.709 380.458 114.322 368.513 114.322 356.141 cv
114.322 343.943 111.555 335.393 105.886 330.018 cv
110.981 335.429 113.471 343.718 113.471 355.29 cv
113.471 367.661 109.857 379.606 103.296 388.924 cv
97.2409 397.523 90.4444 401.372 86.3947 401.372 cv
cp
f
79.2242 320.024 mo
62.6406 320.024 51.793 325.531 46.9826 336.392 cv
39.4362 353.431 49.5771 378.602 58.047 389.553 cv
58.1818 389.455 li
49.8648 378.073 40.4559 353.794 47.8006 337.21 cv
52.6109 326.349 63.4586 320.842 80.0421 320.842 cv
92.1517 320.842 100.965 323.469 106.813 329.02 cv
100.983 322.909 91.9132 320.024 79.2242 320.024 cv
cp
f
332.595 397.545 mo
329.432 397.545 326.859 394.972 326.859 391.809 cv
326.859 341.825 li
326.859 338.662 329.432 336.089 332.595 336.089 cv
403.065 336.089 li
406.228 336.089 408.801 338.662 408.801 341.825 cv
408.801 391.809 li
408.801 394.972 406.228 397.545 403.065 397.545 cv
332.595 397.545 li
cp
.231373 .376471 .588235 rgb
f
407.982 391.81 mo
407.982 394.525 405.78 396.726 403.065 396.726 cv
332.595 396.726 li
329.88 396.726 327.678 394.525 327.678 391.81 cv
327.678 341.825 li
327.678 339.11 329.88 336.908 332.595 336.908 cv
403.065 336.908 li
405.78 336.908 407.982 339.11 407.982 341.825 cv
407.982 391.81 li
cp
1 .2 .196078 rgb
f
407.333 359.736 mo
407.333 342.228 li
407.333 339.557 405.168 337.391 402.496 337.391 cv
333.164 337.391 li
330.492 337.391 328.327 339.557 328.327 342.228 cv
328.327 359.736 li
407.333 359.736 li
cp
1 .301961 .301961 rgb
f
328.377 392.069 mo
328.701 394.426 330.718 396.243 333.164 396.243 cv
402.496 396.243 li
404.942 396.243 406.959 394.426 407.283 392.069 cv
328.377 392.069 li
cp
.847059 .117647 .117647 rgb
f
400.675 353.514 mo
390.694 353.514 li
390.694 343.532 li
381.84 343.532 li
381.84 353.514 li
371.859 353.514 li
371.859 362.367 li
381.84 362.367 li
381.84 372.348 li
390.694 372.348 li
390.694 362.367 li
400.675 362.367 li
400.675 353.514 li
cp
1 1 1 rgb
f
350.759 398.092 mo
350.759 398.431 350.483 398.706 350.144 398.706 cv
332.527 398.706 li
332.187 398.706 331.912 398.431 331.912 398.092 cv
331.912 397.752 332.187 397.477 332.527 397.477 cv
350.144 397.477 li
350.483 397.477 350.759 397.752 350.759 398.092 cv
cp
.105882 .223529 .368627 rgb
f
402.997 398.092 mo
402.997 398.431 402.722 398.706 402.382 398.706 cv
384.765 398.706 li
384.425 398.706 384.15 398.431 384.15 398.092 cv
384.15 397.752 384.425 397.477 384.765 397.477 cv
402.382 397.477 li
402.722 397.477 402.997 397.752 402.997 398.092 cv
cp
f
347.276 335.406 mo
347.276 335.972 346.818 336.43 346.252 336.43 cv
335.804 336.43 li
335.239 336.43 334.78 335.972 334.78 335.406 cv
334.78 334.84 335.239 334.382 335.804 334.382 cv
346.252 334.382 li
346.818 334.382 347.276 334.84 347.276 335.406 cv
cp
f
400.334 335.406 mo
400.334 335.972 399.875 336.43 399.309 336.43 cv
388.862 336.43 li
388.296 336.43 387.837 335.972 387.837 335.406 cv
387.837 334.84 388.296 334.382 388.862 334.382 cv
399.309 334.382 li
399.875 334.382 400.334 334.84 400.334 335.406 cv
cp
f
333.349 345.181 mo
334.563 341.897 338.21 339.235 341.494 339.235 cv
406.291 339.235 li
405.405 338.113 404.036 337.391 402.496 337.391 cv
333.164 337.391 li
330.492 337.391 328.327 339.557 328.327 342.228 cv
328.327 358.762 li
333.349 345.181 li
cp
1 .690196 .690196 rgb
f
404.746 388.255 mo
403.491 393.934 400.982 394.202 396.601 394.202 cv
329.334 394.202 li
330.22 395.323 331.589 396.045 333.129 396.045 cv
402.462 396.045 li
405.133 396.045 407.299 393.88 407.299 391.208 cv
407.299 374.675 li
404.746 388.255 li
cp
.737255 .0823529 .0823529 rgb
f
384.765 326.051 mo
384.765 327.635 383.481 328.919 381.897 328.919 cv
353.763 328.919 li
352.179 328.919 350.895 327.635 350.895 326.051 cv
350.895 324.467 352.179 323.183 353.763 323.183 cv
381.897 323.183 li
383.481 323.183 384.765 324.467 384.765 326.051 cv
cp
.105882 .223529 .368627 rgb
f
384.228 326.103 mo
384.206 324.588 382.975 323.366 381.454 323.366 cv
354.205 323.366 li
352.685 323.366 351.454 324.588 351.432 326.103 cv
384.228 326.103 li
cp
.231373 .376471 .588235 rgb
f
351.863 328.182 mo
352.368 328.637 353.029 328.919 353.763 328.919 cv
381.897 328.919 li
382.63 328.919 383.292 328.637 383.797 328.182 cv
351.863 328.182 li
cp
.0666667 .164706 .266667 rgb
f
349.973 336.157 mo
347.652 336.157 li
353.285 328.919 li
355.607 328.919 li
349.973 336.157 li
cp
.231373 .376471 .588235 rgb
f
385.055 336.157 mo
387.377 336.157 li
381.743 328.919 li
379.421 328.919 li
385.055 336.157 li
cp
f
327.764 272.357 mo
327.116 273.004 325.944 272.883 325.146 272.085 cv
324.348 271.287 324.227 270.115 324.875 269.467 cv
333.009 261.333 li
333.657 260.685 334.829 260.807 335.627 261.605 cv
336.424 262.403 336.546 263.575 335.898 264.223 cv
327.764 272.357 li
cp
.211765 .219608 .270588 rgb
f
335.627 261.605 mo
335.144 261.122 334.526 260.892 333.968 260.924 cv
324.466 270.427 li
324.433 270.984 324.664 271.603 325.146 272.085 cv
325.266 272.187 li
335.728 261.724 li
335.627 261.605 li
cp
1 1 1 rgb
f
419.107 187.728 mo
420.298 188.918 420.298 190.848 419.107 192.039 cv
372.499 238.648 li
371.308 239.838 333.792 267.003 333.438 266.649 cv
330.579 263.789 li
330.224 263.435 357.389 225.919 358.58 224.729 cv
405.188 178.12 li
406.379 176.929 408.309 176.929 409.499 178.12 cv
419.107 187.728 li
.8 .85098 .866667 rgb
f
372.962 233.892 mo
371.772 235.082 369.842 235.082 368.651 233.892 cv
363.567 228.808 li
362.377 227.617 362.377 225.687 363.567 224.497 cv
398.733 189.331 li
399.924 188.14 401.854 188.14 403.044 189.331 cv
408.128 194.415 li
409.319 195.605 409.319 197.535 408.128 198.726 cv
372.962 233.892 li
.00392157 .568627 .956863 rgb
f
402.887 200.256 mo
404.488 198.655 404.488 196.058 402.887 194.456 cv
401.285 192.855 398.689 192.855 397.087 194.456 cv
395.486 196.058 395.486 198.655 397.087 200.256 cv
398.689 201.857 401.285 201.857 402.887 200.256 cv
.14902 .282353 .447059 rgb
f
375.398 227.744 mo
374.208 228.935 372.278 228.935 371.087 227.744 cv
369.831 226.488 li
368.64 225.297 368.64 223.367 369.831 222.177 cv
389.53 202.478 li
390.72 201.287 392.65 201.287 393.841 202.478 cv
395.097 203.734 li
396.288 204.925 396.288 206.855 395.097 208.046 cv
375.398 227.744 li
.027451 .27451 .309804 rgb
f
372.015 228.208 mo
370.759 226.952 li
369.568 225.761 369.568 223.831 370.759 222.641 cv
390.458 202.942 li
391.276 202.123 392.444 201.868 393.481 202.175 cv
392.289 201.302 390.607 201.4 389.53 202.478 cv
369.831 222.177 li
368.64 223.367 368.64 225.297 369.831 226.488 cv
371.087 227.744 li
371.459 228.116 371.903 228.372 372.375 228.512 cv
372.249 228.42 372.128 228.321 372.015 228.208 cv
.0156863 .188235 .2 rgb
f
358.976 228.155 mo
405.036 182.095 li
406.213 180.918 408.242 180.797 409.568 181.824 cv
419.503 189.519 li
419.359 189.103 419.124 188.712 418.792 188.38 cv
409.297 178.885 li
408.12 177.709 406.213 177.709 405.036 178.885 cv
358.976 224.946 li
357.799 226.122 331.006 263.249 331.356 263.599 cv
331.533 263.776 li
337.154 255.402 357.975 229.156 358.976 228.155 cv
.917647 .94902 .956863 rgb
f
369.035 238.215 mo
368.035 239.215 341.78 260.028 333.406 265.649 cv
333.583 265.826 li
333.933 266.176 371.068 239.391 372.245 238.215 cv
418.912 191.547 li
369.035 238.215 li
cp
.639216 .701961 .717647 rgb
f
402.345 199.714 mo
403.648 198.412 403.648 196.3 402.345 194.998 cv
401.043 193.695 398.931 193.695 397.629 194.998 cv
396.326 196.3 396.326 198.412 397.629 199.714 cv
398.931 201.017 401.043 201.017 402.345 199.714 cv
.141176 .815686 .0313726 rgb
f
393.678 206.255 mo
393.877 206.454 393.894 206.761 393.716 206.939 cv
392.562 208.093 li
392.383 208.271 392.077 208.254 391.878 208.055 cv
389.777 205.954 li
389.577 205.754 389.56 205.448 389.738 205.27 cv
390.893 204.116 li
391.071 203.937 391.377 203.955 391.576 204.154 cv
393.678 206.255 li
390.827 203.688 mo
389.31 205.204 li
389.076 205.438 389.076 205.818 389.31 206.052 cv
391.779 208.521 li
392.014 208.755 392.393 208.755 392.628 208.521 cv
394.144 207.005 li
394.378 206.771 394.378 206.391 394.144 206.157 cv
391.675 203.688 li
391.441 203.453 391.061 203.453 390.827 203.688 cv
0 .92549 .901961 rgb
f
405.255 191.542 mo
403.044 189.331 li
405.255 191.542 li
.858823 .894118 .905882 rgb
f
365.778 231.019 mo
363.567 228.808 li
362.972 228.212 362.674 227.432 362.674 226.652 cv
362.674 225.872 362.972 225.092 363.567 224.497 cv
398.733 189.331 li
399.328 188.735 400.109 188.438 400.889 188.438 cv
401.669 188.438 402.449 188.735 403.044 189.331 cv
403.044 189.331 li
405.255 191.542 li
402.601 194.196 li
401.844 193.569 400.916 193.255 399.987 193.255 cv
398.937 193.255 397.888 193.656 397.087 194.456 cv
395.578 195.966 395.491 198.359 396.827 199.97 cv
394.08 202.717 li
393.841 202.478 li
393.246 201.883 392.465 201.585 391.685 201.585 cv
391.057 201.585 390.429 201.778 389.898 202.164 cv
389.769 202.257 389.646 202.362 389.53 202.478 cv
369.831 222.177 li
369.236 222.772 368.938 223.552 368.938 224.332 cv
368.938 225.113 369.236 225.893 369.831 226.488 cv
370.07 226.727 li
365.778 231.019 li
.305882 .698039 .968627 rgb
f
396.827 199.97 mo
395.491 198.359 395.578 195.966 397.087 194.456 cv
397.888 193.656 398.937 193.255 399.987 193.255 cv
400.916 193.255 401.844 193.569 402.601 194.196 cv
402.056 194.74 li
401.452 194.261 400.719 194.021 399.987 194.021 cv
399.133 194.021 398.28 194.347 397.629 194.998 cv
396.418 196.208 396.333 198.117 397.371 199.426 cv
396.827 199.97 li
.407843 .498039 .615686 rgb
f
370.35 226.447 mo
369.589 225.266 369.725 223.675 370.759 222.641 cv
390.458 202.942 li
391.053 202.347 391.833 202.049 392.613 202.049 cv
392.906 202.049 393.198 202.091 393.481 202.175 cv
393.481 202.175 li
393.481 202.175 li
392.947 201.783 392.313 201.587 391.68 201.587 cv
391.054 201.587 390.428 201.779 389.898 202.164 cv
390.429 201.778 391.057 201.585 391.685 201.585 cv
392.465 201.585 393.246 201.883 393.841 202.478 cv
394.08 202.717 li
392.392 204.405 li
391.675 203.688 li
391.558 203.571 391.404 203.512 391.251 203.512 cv
391.097 203.512 390.944 203.571 390.827 203.688 cv
389.31 205.204 li
389.076 205.438 389.076 205.818 389.31 206.052 cv
390.028 206.769 li
370.35 226.447 li
.321569 .494118 .517647 rgb
f
370.07 226.727 mo
369.831 226.488 li
369.236 225.893 368.938 225.113 368.938 224.332 cv
368.938 223.552 369.236 222.772 369.831 222.177 cv
369.831 222.177 li
389.53 202.478 li
389.646 202.362 389.769 202.257 389.898 202.164 cv
390.428 201.779 391.054 201.587 391.68 201.587 cv
392.313 201.587 392.947 201.783 393.481 202.175 cv
393.198 202.091 392.906 202.049 392.613 202.049 cv
391.833 202.049 391.053 202.347 390.458 202.942 cv
370.759 222.641 li
369.725 223.675 369.589 225.266 370.35 226.447 cv
370.07 226.727 li
.313725 .435294 .443137 rgb
f
390.31 206.487 mo
389.777 205.954 li
389.577 205.754 389.56 205.448 389.738 205.27 cv
390.893 204.116 li
390.975 204.033 391.085 203.992 391.2 203.992 cv
391.332 203.992 391.469 204.047 391.576 204.154 cv
392.11 204.687 li
390.31 206.487 li
.321569 .494118 .517647 rgb
f
397.371 199.426 mo
396.333 198.117 396.418 196.208 397.629 194.998 cv
398.28 194.347 399.133 194.021 399.987 194.021 cv
400.719 194.021 401.452 194.261 402.056 194.74 cv
397.371 199.426 li
.4 .870588 .32549 rgb
f
390.028 206.769 mo
389.31 206.052 li
389.076 205.818 389.076 205.438 389.31 205.204 cv
390.827 203.688 li
390.944 203.571 391.097 203.512 391.251 203.512 cv
391.404 203.512 391.558 203.571 391.675 203.688 cv
392.392 204.405 li
392.11 204.687 li
391.576 204.154 li
391.469 204.047 391.332 203.992 391.2 203.992 cv
391.085 203.992 390.975 204.033 390.893 204.116 cv
389.738 205.27 li
389.56 205.448 389.577 205.754 389.777 205.954 cv
390.31 206.487 li
390.028 206.769 li
.301961 .94902 .933333 rgb
f
31.2376 270.404 mo
55.6034 246.038 li
55.7743 245.867 55.7743 245.59 55.6034 245.419 cv
55.4325 245.248 55.1554 245.248 54.9846 245.419 cv
30 270.404 li
31.2376 270.404 li
.211765 .219608 .270588 rgb
f
77.7996 217.963 mo
77.6479 217.811 li
92.635 202.824 li
92.8397 202.619 93.0865 202.485 93.3519 202.411 cv
77.7996 217.963 li
.776471 .968627 .980392 rgb
f
106.663 197.048 mo
115.491 188.219 li
115.488 188.216 li
112.673 185.401 li
103.55 194.524 li
102.906 195.168 101.846 195.119 101.1 194.663 cv
71.5896 224.173 li
70.963 224.799 70.963 225.815 71.5896 226.442 cv
74.4258 229.278 li
75.0524 229.905 76.0684 229.905 76.6949 229.278 cv
106.202 199.771 li
105.636 198.863 105.92 197.791 106.663 197.048 cv
.854902 .882353 .913725 rgb
f
106.663 197.048 mo
115.491 188.219 li
115.488 188.216 li
114.079 186.807 li
69.6137 231.272 li
74.4258 229.278 li
75.0524 229.905 76.0684 229.905 76.6949 229.278 cv
106.202 199.771 li
105.636 198.863 105.92 197.791 106.663 197.048 cv
.639216 .701961 .717647 rgb
f
75.7688 233.16 mo
79.3203 229.609 li
71.5687 221.857 li
68.0171 225.408 li
75.7688 233.16 li
.211765 .219608 .270588 rgb
f
75.3128 229.716 mo
76.9508 228.078 li
71.5391 222.666 li
69.9011 224.304 li
75.3128 229.716 li
.317647 .329412 .4 rgb
f
120.996 194.432 mo
121.358 194.07 121.358 193.483 120.996 193.12 cv
107.743 179.868 li
107.381 179.506 106.794 179.506 106.431 179.868 cv
106.069 180.23 106.069 180.818 106.431 181.18 cv
119.684 194.432 li
120.046 194.795 120.633 194.795 120.996 194.432 cv
cp
.854902 .882353 .913725 rgb
f
120.654 194.132 mo
120.772 193.808 120.708 193.436 120.454 193.182 cv
107.89 180.618 li
107.636 180.364 107.265 180.3 106.941 180.419 cv
120.654 194.132 li
cp
1 1 1 rgb
f
67.9849 225.486 mo
53.5581 239.912 li
52.9429 240.528 52.8458 241.428 53.3413 241.924 cv
59.2537 247.836 li
59.7492 248.331 60.6494 248.234 61.2648 247.619 cv
75.6916 233.192 li
67.9849 225.486 li
.141176 .815686 .0313726 rgb
f
60.0619 248.152 mo
60.0619 248.152 li
60.063 248.152 60.0641 248.152 60.0651 248.152 cv
60.0641 248.152 60.063 248.152 60.0619 248.152 cv
60.0595 248.152 mo
59.7527 248.152 59.4661 248.048 59.2537 247.836 cv
53.3413 241.924 li
53.1284 241.711 53.0249 241.423 53.0249 241.115 cv
53.0249 241.423 53.1284 241.711 53.3413 241.924 cv
59.2537 247.836 li
59.4661 248.048 59.7528 248.152 60.0595 248.152 cv
53.5581 239.912 mo
66.1686 227.302 li
66.1687 227.302 li
53.5581 239.912 li
66.3884 227.082 mo
66.3883 227.082 li
66.9071 226.563 li
66.9071 226.563 li
66.3884 227.082 li
84.3603 224.524 mo
82.9049 223.068 li
100.394 205.579 li
101.849 207.035 li
84.3603 224.524 li
77.6479 217.811 mo
76.6536 216.817 li
94.1424 199.328 li
95.2884 200.474 li
93.3519 202.411 li
93.0865 202.485 92.8397 202.619 92.635 202.824 cv
77.6479 217.811 li
.886274 .984314 .992157 rgb
f
95.9943 204.892 mo
96.1449 204.3 96.0435 203.669 95.5925 203.119 cv
95.1982 202.638 94.5281 202.341 93.8775 202.341 cv
93.6989 202.341 93.5215 202.363 93.3519 202.411 cv
95.2884 200.474 li
97.8501 203.036 li
95.9943 204.892 li
.92549 .941176 .956863 rgb
f
82.9049 223.068 mo
80.6055 220.769 li
95.2978 206.077 li
95.6393 205.735 95.8842 205.324 95.9943 204.892 cv
97.8501 203.036 li
100.394 205.579 li
82.9049 223.068 li
.815686 .85098 .858823 rgb
f
60.0619 248.152 mo
60.0611 248.152 60.0603 248.152 60.0595 248.152 cv
59.7528 248.152 59.4661 248.048 59.2537 247.836 cv
53.3413 241.924 li
53.1284 241.711 53.0249 241.423 53.0249 241.115 cv
53.0249 240.707 53.2072 240.263 53.5581 239.912 cv
53.5581 239.912 li
66.1687 227.302 li
67.163 228.296 li
56.948 238.511 li
56.1398 239.319 55.8723 240.517 56.6532 241.469 cv
57.0475 241.949 57.7175 242.247 58.368 242.247 cv
58.8265 242.247 59.2753 242.099 59.6108 241.764 cv
70.8591 230.515 li
74.6138 234.27 li
61.2648 247.619 li
61.2648 247.619 li
60.9148 247.969 60.4726 248.151 60.0651 248.152 cv
60.0641 248.152 60.063 248.152 60.0619 248.152 cv
67.3826 228.077 mo
66.3884 227.082 li
66.9071 226.563 li
67.9014 227.558 li
67.3826 228.077 li
.568627 .905882 .517647 rgb
f
60.3993 249.86 mo
59.9886 249.86 59.578 249.703 59.2647 249.39 cv
55.7167 245.842 li
55.7557 245.696 55.7179 245.534 55.6034 245.419 cv
55.5179 245.334 55.4059 245.291 55.2939 245.291 cv
55.2558 245.291 55.2178 245.296 55.1807 245.306 cv
51.7874 241.913 li
51.4741 241.599 51.3175 241.189 51.3175 240.778 cv
51.3175 240.367 51.4741 239.957 51.7874 239.643 cv
65.1487 226.282 li
66.1686 227.302 li
53.5581 239.912 li
53.2072 240.263 53.0249 240.707 53.0249 241.115 cv
53.0249 241.423 53.1284 241.711 53.3413 241.924 cv
59.2537 247.836 li
59.4661 248.048 59.7527 248.152 60.0595 248.152 cv
60.0603 248.152 60.0611 248.152 60.0619 248.152 cv
60.0619 248.152 li
60.0619 248.152 li
60.063 248.152 60.0641 248.152 60.0651 248.152 cv
60.4726 248.151 60.9147 247.969 61.2648 247.619 cv
61.2648 247.619 li
74.6138 234.27 li
75.6337 235.29 li
61.5338 249.39 li
61.2205 249.703 60.8099 249.86 60.3993 249.86 cv
.870588 .933333 .952941 rgb
f
55.7167 245.842 mo
55.1807 245.306 li
55.2178 245.296 55.2558 245.291 55.2939 245.291 cv
55.4059 245.291 55.5179 245.334 55.6034 245.419 cv
55.7179 245.534 55.7557 245.696 55.7167 245.842 cv
.752941 .815686 .843137 rgb
f
60.0619 248.152 mo
60.0611 248.152 60.0603 248.152 60.0595 248.152 cv
60.0603 248.152 60.0611 248.152 60.0619 248.152 cv
60.0619 248.152 li
60.0651 248.152 mo
60.4726 248.151 60.9148 247.969 61.2648 247.619 cv
60.9147 247.969 60.4726 248.151 60.0651 248.152 cv
61.2648 247.619 mo
74.6138 234.27 li
74.6138 234.27 li
61.2648 247.619 li
53.0249 241.115 mo
53.0249 240.707 53.2072 240.263 53.5581 239.912 cv
53.5581 239.912 li
53.2072 240.263 53.0249 240.707 53.0249 241.115 cv
.713725 .894118 .717647 rgb
f
66.3883 227.082 mo
65.3685 226.062 li
65.8872 225.544 li
66.9071 226.563 li
66.3883 227.082 li
.870588 .933333 .952941 rgb
f
102.869 208.055 mo
101.849 207.035 li
101.849 207.035 li
102.869 208.055 li
.92549 .941176 .956863 rgb
f
85.3801 225.544 mo
84.3603 224.524 li
101.849 207.035 li
102.869 208.055 li
85.3801 225.544 li
.870588 .933333 .952941 rgb
f
94.1424 199.328 mo
93.1225 198.308 li
94.1424 199.328 li
.92549 .941176 .956863 rgb
f
76.6536 216.817 mo
75.6337 215.797 li
93.1225 198.308 li
94.1424 199.328 li
76.6536 216.817 li
.870588 .933333 .952941 rgb
f
106.598 211.753 mo
106.826 211.524 106.826 211.154 106.598 210.925 cv
90.3856 194.713 li
90.1569 194.484 89.786 194.484 89.5573 194.713 cv
89.3285 194.941 89.3285 195.312 89.5573 195.541 cv
105.769 211.753 li
105.998 211.982 106.369 211.982 106.598 211.753 cv
cp
.854902 .882353 .913725 rgb
f
48.9548 250.365 mo
50.7683 252.178 li
51.0444 252.149 51.3168 252.035 51.5392 251.83 cv
56.818 246.957 li
54.1763 244.315 li
49.3032 249.594 li
49.0979 249.816 48.9837 250.089 48.9548 250.365 cv
cp
f
106.382 211.563 mo
106.456 211.359 106.416 211.124 106.256 210.964 cv
90.4785 195.186 li
90.318 195.026 90.0834 194.986 89.879 195.06 cv
106.382 211.563 li
cp
1 1 1 rgb
f
49.1517 250.562 mo
49.8653 251.275 li
55.3201 245.459 li
54.4929 244.632 li
49.5209 249.933 li
49.3414 250.125 49.2187 250.343 49.1517 250.562 cv
cp
f
92.0965 207.764 mo
87.8677 203.535 li
88.0873 203.316 li
92.3161 207.545 li
92.0965 207.764 li
cp
f
84.5189 215.342 mo
80.2901 211.113 li
80.5097 210.893 li
84.7385 215.122 li
84.5189 215.342 li
cp
f
76.9413 222.919 mo
72.7125 218.691 li
72.9322 218.471 li
77.161 222.7 li
76.9413 222.919 li
f
69.3638 230.497 mo
65.1349 226.268 li
65.3546 226.048 li
69.5834 230.277 li
69.3638 230.497 li
f
61.7862 238.075 mo
57.5574 233.846 li
57.777 233.626 li
62.0058 237.855 li
61.7862 238.075 li
cp
f
47.2319 251.622 mo
49.5115 253.901 li
49.8386 253.885 50.1558 253.767 50.4073 253.536 cv
56.3787 248.075 li
53.0579 244.754 li
47.5965 250.726 li
47.3664 250.977 47.2482 251.294 47.2319 251.622 cv
cp
.231373 .376471 .588235 rgb
f
47.4794 251.869 mo
48.3764 252.766 li
54.4957 246.192 li
53.4559 245.152 li
47.8782 251.144 li
47.6767 251.361 47.5448 251.613 47.4794 251.869 cv
cp
.270588 .447059 .658824 rgb
f
120.03 270.404 mo
95.6641 246.038 li
95.4932 245.867 95.4932 245.59 95.6641 245.419 cv
95.835 245.248 96.112 245.248 96.2829 245.419 cv
121.267 270.404 li
120.03 270.404 li
.211765 .219608 .270588 rgb
f
79.5748 229.193 mo
79.5201 229.139 li
82.2336 226.425 li
82.2882 226.48 li
79.5748 229.193 li
.705882 .960784 .976471 rgb
f
75.6337 220.129 mo
75.482 219.977 li
75.6337 219.825 li
75.7854 219.977 li
75.6337 220.129 li
.643137 .952941 .968627 rgb
f
78.1954 222.691 mo
75.6337 220.129 li
75.7854 219.977 li
78.3472 222.539 li
78.1954 222.691 li
.690196 .898039 .929412 rgb
f
78.4396 222.935 mo
78.1954 222.691 li
78.3472 222.539 li
78.5914 222.783 li
78.4396 222.935 li
.560784 .792157 .811765 rgb
f
75.482 219.977 mo
74.4877 218.983 li
74.6394 218.831 li
75.6337 219.825 li
75.482 219.977 li
.705882 .960784 .976471 rgb
f
78.5303 223.025 mo
78.4396 222.935 li
78.5914 222.783 li
78.682 222.874 li
78.5303 223.025 li
.666667 .882353 .894118 rgb
f
73.4678 217.963 mo
57.9154 202.41 li
58.1809 202.484 58.4278 202.619 58.6325 202.824 cv
73.6196 217.811 li
73.4678 217.963 li
.776471 .968627 .980392 rgb
f
74.4877 218.983 mo
73.4678 217.963 li
73.6196 217.811 li
74.6394 218.831 li
74.4877 218.983 li
.698039 .929412 .952941 rgb
f
44.6046 197.048 mo
35.7764 188.219 li
35.7795 188.216 li
38.5946 185.401 li
47.7178 194.524 li
48.3617 195.168 49.4211 195.119 50.1674 194.663 cv
79.6777 224.173 li
80.3044 224.799 80.3044 225.815 79.6777 226.442 cv
76.8417 229.278 li
76.2151 229.905 75.1992 229.905 74.5725 229.278 cv
45.0653 199.771 li
45.6315 198.863 45.3479 197.791 44.6046 197.048 cv
.854902 .882353 .913725 rgb
f
44.6046 197.048 mo
35.7764 188.219 li
35.7795 188.216 li
37.1885 186.807 li
81.6538 231.272 li
76.8417 229.278 li
76.2151 229.905 75.1992 229.905 74.5725 229.278 cv
45.0653 199.771 li
45.6315 198.863 45.3479 197.791 44.6046 197.048 cv
.639216 .701961 .717647 rgb
f
75.4987 233.16 mo
71.9471 229.609 li
79.6988 221.857 li
83.2504 225.408 li
75.4987 233.16 li
.211765 .219608 .270588 rgb
f
75.9547 229.716 mo
74.3166 228.078 li
79.7283 222.666 li
81.3663 224.304 li
75.9547 229.716 li
.317647 .329412 .4 rgb
f
30.2717 194.432 mo
29.9094 194.07 29.9094 193.483 30.2717 193.12 cv
43.5243 179.868 li
43.8865 179.506 44.4739 179.506 44.8362 179.868 cv
45.1984 180.23 45.1984 180.818 44.8362 181.18 cv
31.5836 194.432 li
31.2213 194.795 30.634 194.795 30.2717 194.432 cv
cp
.854902 .882353 .913725 rgb
f
30.6137 194.132 mo
30.4953 193.808 30.5592 193.436 30.8134 193.182 cv
43.3771 180.618 li
43.6313 180.364 44.0028 180.3 44.3265 180.419 cv
30.6137 194.132 li
cp
1 1 1 rgb
f
83.2825 225.486 mo
97.7094 239.912 li
98.3246 240.528 98.4217 241.428 97.9261 241.924 cv
92.0138 247.836 li
91.5183 248.331 90.6179 248.234 90.0027 247.619 cv
75.5758 233.192 li
83.2825 225.486 li
.00392157 .568627 .956863 rgb
f
91.2056 248.152 mo
91.204 248.152 91.2023 248.152 91.2008 248.152 cv
91.2024 248.152 91.2039 248.152 91.2056 248.152 cv
91.2056 248.152 li
91.208 248.152 mo
91.5147 248.152 91.8014 248.048 92.0138 247.836 cv
97.9261 241.924 li
98.1391 241.711 98.2426 241.423 98.2426 241.115 cv
98.2426 241.423 98.1391 241.711 97.9261 241.924 cv
92.0138 247.836 li
91.8014 248.048 91.5148 248.152 91.208 248.152 cv
.886274 .984314 .992157 rgb
f
71.6927 229.193 mo
68.9792 226.48 li
69.0339 226.425 li
71.7473 229.139 li
71.6927 229.193 li
.819608 .976471 .984314 rgb
f
71.9369 229.438 mo
71.6927 229.193 li
71.7473 229.139 li
71.9915 229.383 li
71.9369 229.438 li
.776471 .894118 .905882 rgb
f
71.9915 229.383 mo
71.7473 229.139 li
69.0339 226.425 li
70.3767 225.082 li
73.3344 228.04 li
71.9915 229.383 li
.647059 .74902 .772549 rgb
f
71.879 229.495 mo
68.9214 226.538 li
68.9792 226.48 li
71.6927 229.193 li
71.9369 229.438 li
71.879 229.495 li
.627451 .929412 .701961 rgb
f
68.9792 226.48 mo
67.9849 225.486 li
67.9271 225.543 li
67.9271 225.543 li
68.0396 225.431 li
69.0339 226.425 li
68.9792 226.48 li
.85098 .980392 .988235 rgb
f
72.0275 229.528 mo
71.9369 229.438 li
71.9915 229.383 li
72.0821 229.474 li
72.0275 229.528 li
.831372 .941176 .94902 rgb
f
72.0821 229.474 mo
71.9915 229.383 li
73.3344 228.04 li
73.425 228.131 li
72.0821 229.474 li
69.0339 226.425 mo
68.0396 225.431 li
69.3824 224.088 li
70.3767 225.082 li
69.0339 226.425 li
.764706 .866667 .882353 rgb
f
71.9696 229.586 mo
71.879 229.495 li
71.9369 229.438 li
72.0275 229.528 li
71.9696 229.586 li
68.9214 226.538 mo
67.9271 225.543 li
67.9849 225.486 li
68.9792 226.48 li
68.9214 226.538 li
.756863 .956863 .847059 rgb
f
66.9072 224.524 mo
49.4184 207.035 li
48.3985 208.055 li
50.8738 205.579 li
68.3626 223.068 li
66.9072 224.524 li
.886274 .984314 .992157 rgb
f
75.7854 219.977 mo
75.6337 219.825 li
76.628 218.831 li
76.7797 218.983 li
75.7854 219.977 li
.819608 .976471 .984314 rgb
f
78.3472 222.539 mo
75.7854 219.977 li
76.7797 218.983 li
79.3415 221.545 li
78.3472 222.539 li
.843137 .94902 .964706 rgb
f
78.5914 222.783 mo
78.3472 222.539 li
79.3415 221.545 li
79.5857 221.789 li
78.5914 222.783 li
.776471 .894118 .905882 rgb
f
75.6337 219.825 mo
74.6394 218.831 li
75.6337 217.837 li
76.628 218.831 li
75.6337 219.825 li
.85098 .980392 .988235 rgb
f
78.682 222.874 mo
78.5914 222.783 li
79.5857 221.789 li
79.6763 221.879 li
78.682 222.874 li
.831372 .941176 .94902 rgb
f
73.6196 217.811 mo
58.6325 202.824 li
58.4278 202.619 58.1809 202.484 57.9154 202.41 cv
55.979 200.474 li
58.145 198.308 li
75.6337 215.797 li
58.145 198.308 li
57.1251 199.328 li
74.6139 216.817 li
73.6196 217.811 li
.886274 .984314 .992157 rgb
f
67.9271 225.543 mo
66.9072 224.524 li
68.3626 223.068 li
69.3599 224.066 li
68.0171 225.408 li
68.0396 225.431 li
67.9271 225.543 li
.847059 .964706 .976471 rgb
f
68.0396 225.431 mo
68.0171 225.408 li
69.3599 224.066 li
69.3824 224.088 li
68.0396 225.431 li
.803922 .905882 .92549 rgb
f
74.6394 218.831 mo
73.6196 217.811 li
74.6139 216.817 li
75.6337 217.837 li
74.6394 218.831 li
.847059 .964706 .976471 rgb
f
55.2731 204.892 mo
53.4173 203.036 li
55.979 200.474 li
57.9154 202.41 li
57.7457 202.363 57.5686 202.341 57.3899 202.341 cv
56.7394 202.341 56.0692 202.638 55.6749 203.119 cv
55.2239 203.669 55.1225 204.3 55.2731 204.892 cv
.92549 .941176 .956863 rgb
f
73.425 228.131 mo
73.3344 228.04 li
70.3767 225.082 li
69.3824 224.088 li
69.3599 224.066 li
68.3626 223.068 li
50.8738 205.579 li
53.4173 203.036 li
55.2731 204.892 li
55.3833 205.324 55.6283 205.735 55.9697 206.077 cv
75.7244 225.831 li
73.425 228.131 li
.815686 .85098 .858823 rgb
f
97.7094 239.912 mo
84.3603 226.563 li
84.3603 226.563 li
97.7094 239.912 li
.886274 .984314 .992157 rgb
f
82.2882 226.48 mo
82.2336 226.425 li
83.2279 225.431 li
83.3404 225.543 li
83.3404 225.543 li
83.2825 225.486 li
82.2882 226.48 li
.85098 .980392 .988235 rgb
f
84.3603 226.563 mo
83.3404 225.543 li
83.3404 225.543 li
84.3603 226.563 li
84.3603 226.563 li
.847059 .964706 .976471 rgb
f
75.6337 233.134 mo
75.5791 233.08 li
75.6337 233.025 li
75.6884 233.08 li
75.6337 233.134 li
.85098 .980392 .988235 rgb
f
75.6884 233.08 mo
75.6337 233.025 li
78.6368 230.022 li
78.714 230.054 li
75.6884 233.08 li
.764706 .866667 .882353 rgb
f
75.5759 233.192 mo
75.5212 233.138 li
75.5791 233.08 li
75.6337 233.134 li
75.5758 233.192 li
.756863 .956863 .847059 rgb
f
78.714 230.054 mo
78.6368 230.022 li
79.276 229.383 li
79.3306 229.438 li
78.714 230.054 li
.815686 .85098 .858823 rgb
f
75.5212 233.138 mo
71.9696 229.586 li
72.0275 229.528 li
72.0821 229.474 li
73.425 228.131 li
75.7244 225.831 li
76.1439 226.251 li
74.3166 228.078 li
75.9547 229.716 li
77.7819 227.889 li
79.276 229.383 li
78.6368 230.022 li
75.6337 233.025 li
75.5791 233.08 li
75.5212 233.138 li
82.2336 226.425 mo
80.7395 224.931 li
81.3663 224.304 li
79.7283 222.666 li
79.1015 223.293 li
78.682 222.874 li
79.6763 221.879 li
83.2279 225.431 li
82.2336 226.425 li
.603922 .607843 .635294 rgb
f
75.9547 229.716 mo
74.3166 228.078 li
76.1439 226.251 li
77.7819 227.889 li
75.9547 229.716 li
80.7395 224.931 mo
79.1015 223.293 li
79.7283 222.666 li
81.3663 224.304 li
80.7395 224.931 li
.654902 .662745 .701961 rgb
f
91.2056 248.152 mo
91.2039 248.152 91.2024 248.152 91.2008 248.152 cv
90.7937 248.151 90.3522 247.969 90.0027 247.619 cv
90.0027 247.619 li
75.5759 233.192 li
75.6337 233.134 li
75.6884 233.08 li
78.714 230.054 li
79.3306 229.438 li
91.6567 241.764 li
91.9923 242.099 92.4409 242.247 92.8994 242.247 cv
93.5499 242.247 94.2201 241.949 94.6143 241.469 cv
95.3952 240.517 95.1277 239.319 94.3195 238.511 cv
82.2882 226.48 li
83.2825 225.486 li
83.3404 225.543 li
84.3603 226.563 li
97.7094 239.912 li
98.0603 240.263 98.2426 240.707 98.2426 241.115 cv
98.2426 241.423 98.1391 241.711 97.9261 241.924 cv
92.0138 247.836 li
91.8014 248.048 91.5147 248.152 91.208 248.152 cv
91.2072 248.152 91.2063 248.152 91.2056 248.152 cv
.498039 .784314 .980392 rgb
f
90.8681 249.86 mo
90.4575 249.86 90.0469 249.703 89.7336 249.39 cv
75.6337 235.29 li
76.6536 234.27 li
90.0027 247.619 li
90.0027 247.619 li
90.3522 247.969 90.7937 248.151 91.2008 248.152 cv
91.2023 248.152 91.204 248.152 91.2056 248.152 cv
91.2056 248.152 li
91.2056 248.152 li
91.2063 248.152 91.2072 248.152 91.208 248.152 cv
91.5148 248.152 91.8014 248.048 92.0138 247.836 cv
97.9261 241.924 li
98.1391 241.711 98.2426 241.423 98.2426 241.115 cv
98.2426 240.707 98.0603 240.263 97.7094 239.912 cv
97.7094 239.912 li
84.3603 226.563 li
85.3801 225.544 li
99.48 239.643 li
99.7933 239.957 99.9499 240.367 99.9499 240.778 cv
99.9499 241.189 99.7933 241.599 99.48 241.913 cv
96.0867 245.306 li
96.0497 245.296 96.0116 245.291 95.9735 245.291 cv
95.8615 245.291 95.7495 245.334 95.6641 245.419 cv
95.5496 245.534 95.5118 245.696 95.5507 245.842 cv
92.0028 249.39 li
91.6894 249.703 91.2788 249.86 90.8681 249.86 cv
.870588 .933333 .952941 rgb
f
70.8591 230.515 mo
67.9014 227.558 li
68.9214 226.538 li
71.879 229.495 li
70.8591 230.515 li
.741176 .905882 .807843 rgb
f
66.9071 226.563 mo
66.9071 226.563 li
67.9271 225.543 li
67.9271 225.543 li
66.9071 226.563 li
.854902 .929412 .94902 rgb
f
74.6138 234.27 mo
70.8591 230.515 li
71.879 229.495 li
71.9696 229.586 li
71.9471 229.609 li
75.4987 233.16 li
75.5212 233.138 li
75.5759 233.192 li
75.5758 233.192 li
75.6337 233.25 li
74.6138 234.27 li
67.9014 227.558 mo
66.9071 226.563 li
67.9271 225.543 li
68.9214 226.538 li
67.9014 227.558 li
.807843 .917647 .882353 rgb
f
65.8872 225.544 mo
48.3985 208.055 li
49.4184 207.035 li
66.9072 224.524 li
65.8872 225.544 li
.870588 .933333 .952941 rgb
f
76.7797 218.983 mo
76.628 218.831 li
77.6479 217.811 li
77.7996 217.963 li
76.7797 218.983 li
.839216 .929412 .94902 rgb
f
79.3415 221.545 mo
76.7797 218.983 li
77.7996 217.963 li
80.3613 220.525 li
79.3415 221.545 li
.85098 .913725 .937255 rgb
f
79.5857 221.789 mo
79.3415 221.545 li
80.3613 220.525 li
80.6055 220.769 li
79.5857 221.789 li
.815686 .886274 .909804 rgb
f
83.3404 225.543 mo
83.2279 225.431 li
83.2504 225.408 li
81.9075 224.066 li
82.9049 223.068 li
84.3603 224.524 li
83.3404 225.543 li
76.628 218.831 mo
75.6337 217.837 li
76.6536 216.817 li
77.6479 217.811 li
76.628 218.831 li
.854902 .929412 .94902 rgb
f
81.9075 224.066 mo
79.6988 221.857 li
79.6763 221.879 li
79.5857 221.789 li
80.6055 220.769 li
82.9049 223.068 li
81.9075 224.066 li
.843137 .909804 .929412 rgb
f
74.6139 216.817 mo
57.1251 199.328 li
58.145 198.308 li
75.6337 215.797 li
74.6139 216.817 li
.870588 .933333 .952941 rgb
f
75.6337 235.29 mo
74.6138 234.27 li
75.6337 233.25 li
76.6536 234.27 li
75.6337 235.29 li
.85098 .921569 .945098 rgb
f
74.6138 234.27 mo
74.6138 234.27 li
75.6337 233.25 li
75.6337 233.25 li
74.6138 234.27 li
.827451 .917647 .909804 rgb
f
66.9071 226.563 mo
65.8872 225.544 li
66.9072 224.524 li
67.9271 225.543 li
66.9071 226.563 li
.85098 .921569 .945098 rgb
f
84.3603 226.563 mo
83.3404 225.543 li
84.3603 224.524 li
85.3801 225.544 li
84.3603 226.563 li
75.6337 217.837 mo
74.6139 216.817 li
75.6337 215.797 li
76.6536 216.817 li
75.6337 217.837 li
f
95.5507 245.842 mo
95.5118 245.696 95.5496 245.534 95.6641 245.419 cv
95.7495 245.334 95.8615 245.291 95.9735 245.291 cv
96.0116 245.291 96.0497 245.296 96.0867 245.306 cv
95.5507 245.842 li
.752941 .815686 .843137 rgb
f
75.4987 233.16 mo
71.9471 229.609 li
71.9696 229.586 li
75.5212 233.138 li
75.4987 233.16 li
83.2279 225.431 mo
79.6763 221.879 li
79.6988 221.857 li
81.9075 224.066 li
83.2504 225.408 li
83.2279 225.431 li
.729412 .745098 .776471 rgb
f
91.2056 248.152 mo
91.2056 248.152 li
91.2063 248.152 91.2072 248.152 91.208 248.152 cv
91.2072 248.152 91.2063 248.152 91.2056 248.152 cv
91.2008 248.152 mo
90.7937 248.151 90.3522 247.969 90.0027 247.619 cv
90.3522 247.969 90.7937 248.151 91.2008 248.152 cv
90.0027 247.619 mo
76.6536 234.27 li
75.6337 233.25 li
75.6337 233.25 li
75.5758 233.192 li
90.0027 247.619 li
98.2426 241.115 mo
98.2426 240.707 98.0603 240.263 97.7094 239.912 cv
97.7094 239.912 li
98.0603 240.263 98.2426 240.707 98.2426 241.115 cv
.678431 .835294 .945098 rgb
f
44.6698 211.753 mo
44.4411 211.524 44.4411 211.154 44.6698 210.925 cv
60.8818 194.713 li
61.1106 194.484 61.4815 194.484 61.7102 194.713 cv
61.9389 194.941 61.9389 195.312 61.7102 195.541 cv
45.4982 211.753 li
45.2694 211.982 44.8986 211.982 44.6698 211.753 cv
cp
.854902 .882353 .913725 rgb
f
102.313 250.365 mo
100.499 252.178 li
100.223 252.149 99.9507 252.035 99.7283 251.83 cv
94.4495 246.957 li
97.0911 244.315 li
101.964 249.594 li
102.17 249.816 102.284 250.089 102.313 250.365 cv
cp
f
44.8857 211.563 mo
44.811 211.359 44.8513 211.124 45.0118 210.964 cv
60.7889 195.186 li
60.9494 195.026 61.184 194.986 61.3884 195.06 cv
44.8857 211.563 li
cp
1 1 1 rgb
f
102.116 250.562 mo
101.402 251.275 li
95.9474 245.459 li
96.7745 244.632 li
101.746 249.933 li
101.926 250.125 102.049 250.343 102.116 250.562 cv
cp
f
59.171 207.764 mo
63.3998 203.535 li
63.1802 203.316 li
58.9514 207.545 li
59.171 207.764 li
cp
f
66.7486 215.342 mo
70.9774 211.113 li
70.7577 210.893 li
66.5289 215.122 li
66.7486 215.342 li
cp
f
74.3261 222.919 mo
78.5549 218.691 li
78.3353 218.471 li
74.1065 222.7 li
74.3261 222.919 li
cp
f
81.9037 230.497 mo
86.1325 226.268 li
85.9129 226.048 li
81.684 230.277 li
81.9037 230.497 li
cp
f
89.4813 238.075 mo
93.7101 233.846 li
93.4904 233.626 li
89.2616 237.855 li
89.4813 238.075 li
cp
f
104.036 251.622 mo
101.756 253.901 li
101.429 253.885 101.112 253.767 100.86 253.536 cv
94.8888 248.075 li
98.2096 244.754 li
103.671 250.726 li
103.901 250.977 104.019 251.294 104.036 251.622 cv
cp
.231373 .376471 .588235 rgb
f
103.788 251.869 mo
102.891 252.766 li
96.7718 246.192 li
97.8116 245.152 li
103.389 251.144 li
103.591 251.361 103.723 251.613 103.788 251.869 cv
cp
.270588 .447059 .658824 rgb
f
420.665 82.8279 mo
417.799 88.2829 411.055 90.3822 405.6 87.517 cv
363.052 65.1693 li
357.598 62.3041 355.498 55.5594 358.363 50.1044 cv
361.228 44.6496 367.973 42.5502 373.428 45.4155 cv
415.975 67.7631 li
421.43 70.6283 423.53 77.3731 420.665 82.8279 cv
cp
.141176 .815686 .0313726 rgb
f
361.472 53.8748 mo
355.394 50.6823 357.366 61.6976 362.191 64.2321 cv
403.441 85.8985 li
408.267 88.4331 414.034 87.1222 417.018 83.0499 cv
361.472 53.8748 li
cp
.0901961 .678431 0 rgb
f
410.521 69.3815 mo
409.887 70.5879 408.396 71.0522 407.189 70.4185 cv
368.821 50.2656 li
367.614 49.6319 367.15 48.1404 367.784 46.934 cv
368.417 45.7277 369.909 45.2634 371.115 45.8969 cv
409.484 66.0498 li
410.69 66.6835 411.154 68.1751 410.521 69.3815 cv
cp
.545098 1 .239216 rgb
f
403.198 82.8624 mo
402.647 83.9115 401.349 84.3152 400.301 83.7643 cv
362.502 63.9106 li
361.453 63.3596 361.049 62.0625 361.6 61.0136 cv
362.151 59.9645 363.448 59.5608 364.497 60.1118 cv
402.296 79.9654 li
403.345 80.5164 403.749 81.8135 403.198 82.8624 cv
cp
.0705882 .611765 .0352941 rgb
f
415.975 67.7631 mo
394.478 56.4715 li
384.102 76.2254 li
405.6 87.517 li
411.055 90.3822 417.799 88.2829 420.665 82.8279 cv
423.53 77.3731 421.43 70.6283 415.975 67.7631 cv
cp
1 .2 .196078 rgb
f
415.9 82.463 mo
388.382 68.0089 li
384.273 75.8307 li
406.928 87.7301 li
411.79 90.2837 422.024 85.6794 415.9 82.463 cv
cp
.847059 .117647 .117647 rgb
f
416.964 69.9788 mo
393.751 57.7863 li
391.456 62.155 li
414.669 74.3473 li
415.885 74.9858 417.384 74.5253 418.017 73.319 cv
418.651 72.1127 418.179 70.6171 416.964 69.9788 cv
cp
1 .690196 .690196 rgb
f
409.011 83.4926 mo
386.468 71.652 li
384.473 75.4508 li
407.016 87.2915 li
408.073 87.8466 409.376 87.4462 409.927 86.3972 cv
410.478 85.3482 410.068 84.0477 409.011 83.4926 cv
cp
.737255 .0823529 .0823529 rgb
f
401.182 83.3029 mo
401.182 89.4645 396.187 94.4594 390.026 94.4594 cv
341.967 94.4594 li
335.805 94.4594 330.811 89.4645 330.811 83.3029 cv
330.811 77.1414 335.805 72.1464 341.967 72.1464 cv
390.026 72.1464 li
396.187 72.1464 401.182 77.1414 401.182 83.3029 cv
cp
.00392157 .568627 .956863 rgb
f
335.316 85.1952 mo
328.451 85.1952 335.318 94.0303 340.769 94.0303 cv
387.362 94.0303 li
392.813 94.0303 397.309 90.1879 398.057 85.1952 cv
335.316 85.1952 li
cp
.0117647 .47451 .858824 rgb
f
385.949 76.1156 mo
385.949 77.4782 384.845 78.5829 383.482 78.5829 cv
340.143 78.5829 li
338.781 78.5829 337.676 77.4782 337.676 76.1156 cv
337.676 74.7529 338.781 73.6483 340.143 73.6483 cv
383.482 73.6483 li
384.845 73.6483 385.949 74.7529 385.949 76.1156 cv
cp
0 .690196 .988235 rgb
f
385.735 91.4557 mo
385.735 92.6407 384.774 93.6013 383.589 93.6013 cv
340.894 93.6013 li
339.709 93.6013 338.749 92.6407 338.749 91.4557 cv
338.749 90.2708 339.709 89.3102 340.894 89.3102 cv
383.589 89.3102 li
384.774 89.3102 385.735 90.2708 385.735 91.4557 cv
cp
0 .392157 .776471 rgb
f
390.026 72.1464 mo
365.743 72.1464 li
365.743 94.4594 li
390.026 94.4594 li
396.187 94.4594 401.182 89.4645 401.182 83.3029 cv
401.182 77.1414 396.187 72.1464 390.026 72.1464 cv
cp
.996078 .760784 .00784314 rgb
f
396.795 85.1952 mo
365.711 85.1952 li
365.711 94.0303 li
391.301 94.0303 li
396.793 94.0303 403.712 85.1952 396.795 85.1952 cv
cp
.972549 .580392 0 rgb
f
391.931 73.6483 mo
365.711 73.6483 li
365.711 78.5829 li
391.931 78.5829 li
393.304 78.5829 394.417 77.4782 394.417 76.1156 cv
394.417 74.7529 393.304 73.6483 391.931 73.6483 cv
cp
1 .972549 .658824 rgb
f
391.175 89.3102 mo
365.711 89.3102 li
365.711 93.6013 li
391.175 93.6013 li
392.368 93.6013 393.336 92.6407 393.336 91.4557 cv
393.336 90.2708 392.368 89.3102 391.175 89.3102 cv
cp
.894118 .345098 .0117647 rgb
f
369.8 45.0008 mo
374.045 49.4669 373.865 56.5285 369.399 60.7734 cv
334.565 93.8831 li
330.099 98.128 323.037 97.9489 318.793 93.4829 cv
314.548 89.0168 314.727 81.9552 319.193 77.7103 cv
354.027 44.6006 li
358.493 40.3557 365.555 40.5348 369.8 45.0008 cv
cp
.878431 .894118 .905882 rgb
f
323.362 91.7504 mo
318.386 96.4803 329.45 98.1527 333.401 94.3976 cv
367.173 62.2975 li
371.124 58.5423 371.736 52.6596 368.838 48.5256 cv
323.362 91.7504 li
cp
.803922 .823529 .847059 rgb
f
353.807 50.2859 mo
354.746 51.2735 354.706 52.8353 353.718 53.774 cv
322.305 83.6319 li
321.318 84.5707 319.756 84.5311 318.817 83.5434 cv
317.878 82.5557 317.918 80.994 318.906 80.0553 cv
350.319 50.1974 li
351.306 49.2586 352.868 49.2982 353.807 50.2859 cv
cp
1 1 1 rgb
f
364.22 61.5525 mo
365.036 62.4114 365.002 63.7694 364.143 64.5857 cv
333.196 94.0002 li
332.337 94.8165 330.979 94.7821 330.163 93.9231 cv
329.347 93.0643 329.381 91.7063 330.24 90.8899 cv
361.187 61.4756 li
362.045 60.6593 363.403 60.6937 364.22 61.5525 cv
cp
.658824 .654902 .67451 rgb
f
354.027 44.6006 mo
336.426 61.3299 li
351.799 77.5027 li
369.399 60.7734 li
373.865 56.5285 374.045 49.4668 369.8 45.0008 cv
365.555 40.5348 358.493 40.3557 354.027 44.6006 cv
cp
1 .2 .196078 rgb
f
367.923 49.3952 mo
345.393 70.8098 li
351.48 77.2136 li
370.028 59.5837 li
374.008 55.8005 372.937 44.6298 367.923 49.3952 cv
cp
.847059 .117647 .117647 rgb
f
356.443 44.3764 mo
337.438 62.4404 li
340.838 66.0171 li
359.842 47.9532 li
360.837 47.0073 360.883 45.4399 359.944 44.4522 cv
359.006 43.4646 357.438 43.4306 356.443 44.3764 cv
cp
1 .690196 .690196 rgb
f
366.684 56.2498 mo
348.228 73.7924 li
351.184 76.9026 li
369.641 59.3599 li
370.506 58.5374 370.546 57.1744 369.729 56.3156 cv
368.913 55.4568 367.55 55.4273 366.684 56.2498 cv
cp
.737255 .0823529 .0823529 rgb
f
207.623 132.145 mo
205.498 134.27 202.054 134.27 199.93 132.145 cv
170.808 103.023 li
168.683 100.899 168.683 97.4545 170.808 95.3302 cv
242.377 23.7604 li
244.502 21.6361 247.946 21.6361 250.07 23.7604 cv
279.192 52.8828 li
281.317 55.0071 281.317 58.4513 279.192 60.5756 cv
207.623 132.145 li
.105882 .223529 .368627 rgb
f
218.233 47.9046 mo
230.491 109.277 li
247.227 92.5415 li
234.968 31.1693 li
218.233 47.9046 li
.305882 .423529 .560784 rgb
f
218.724 121.044 mo
225.228 114.54 li
212.97 53.1675 li
206.466 59.6718 li
218.724 121.044 li
f
249.922 47.2626 mo
245.621 48.7155 240.957 46.4071 239.504 42.1067 cv
238.051 37.8063 240.36 33.1422 244.66 31.6893 cv
248.961 30.2365 253.625 32.5448 255.078 36.8453 cv
256.53 41.1458 254.222 45.8097 249.922 47.2626 cv
.956863 .960784 .968627 rgb
f
249.109 47.4865 mo
249.381 47.4249 249.652 47.3537 249.922 47.2626 cv
250.233 47.1575 250.529 47.029 250.818 46.8911 cv
245.599 31.4409 li
245.285 31.5065 244.972 31.5842 244.66 31.6893 cv
244.391 31.7805 244.132 31.8884 243.878 32.0041 cv
249.109 47.4865 li
.878431 .901961 .901961 rgb
f
250.446 47.0588 mo
250.571 47.0048 250.696 46.9494 250.818 46.8911 cv
245.599 31.4409 li
245.466 31.4687 245.333 31.5002 245.201 31.5337 cv
250.446 47.0588 li
.717647 .745098 .776471 rgb
f
244.146 31.9054 mo
243.914 32.0102 li
249.133 47.4603 li
249.382 47.4025 li
244.146 31.9054 li
f
253.361 45.0154 mo
252.504 45.8554 251.458 46.5268 250.245 46.9365 cv
245.945 48.3893 241.281 46.0809 239.828 41.7804 cv
238.837 38.8475 239.598 35.7474 241.545 33.6103 cv
239.364 35.7497 238.461 39.0186 239.504 42.1067 cv
240.957 46.4071 245.621 48.7155 249.922 47.2626 cv
251.289 46.8006 252.453 46.0119 253.361 45.0154 cv
f
266.425 63.7655 mo
262.124 65.2184 257.46 62.9101 256.007 58.6096 cv
254.554 54.3091 256.863 49.6452 261.163 48.1922 cv
265.464 46.7393 270.128 49.0478 271.58 53.3482 cv
273.033 57.6487 270.725 62.3127 266.425 63.7655 cv
.996078 .807843 .537255 rgb
f
258.5 49.7215 mo
258.29 49.9044 258.085 50.0957 257.89 50.3038 cv
257.666 50.5438 257.466 50.7973 257.277 51.0559 cv
269.196 62.1851 li
269.441 61.9785 269.68 61.7618 269.905 61.5216 cv
270.099 61.3135 270.276 61.0958 270.444 60.8739 cv
258.5 49.7215 li
.956863 .756863 .490196 rgb
f
257.526 50.7315 mo
257.441 50.8385 257.357 50.9464 257.277 51.0559 cv
269.196 62.1851 li
269.3 62.0977 269.402 62.0069 269.503 61.9148 cv
257.526 50.7315 li
.878431 .623529 .317647 rgb
f
270.255 61.0877 mo
270.41 60.8852 li
258.491 49.756 li
258.299 49.9247 li
270.255 61.0877 li
f
269.863 61.5183 mo
269.007 62.3584 267.96 63.0298 266.748 63.4394 cv
262.448 64.8923 257.784 62.5838 256.331 58.2834 cv
255.34 55.3505 256.101 52.2504 258.048 50.1133 cv
255.867 52.2526 254.964 55.5216 256.007 58.6096 cv
257.46 62.9101 262.124 65.2184 266.425 63.7655 cv
267.792 63.3034 268.956 62.5149 269.863 61.5183 cv
f
234.399 62.7855 mo
230.098 64.2383 225.434 61.93 223.982 57.6296 cv
222.529 53.329 224.837 48.665 229.138 47.2121 cv
233.438 45.7592 238.102 48.0676 239.555 52.3682 cv
241.008 56.6686 238.699 61.3326 234.399 62.7855 cv
.956863 .960784 .968627 rgb
f
226.758 61.4503 mo
226.979 61.6204 227.206 61.7843 227.448 61.934 cv
227.728 62.107 228.015 62.2536 228.306 62.3885 cv
236.889 48.5215 li
236.639 48.3215 236.38 48.1293 236.1 47.9564 cv
235.858 47.8066 235.61 47.6758 235.359 47.5541 cv
226.758 61.4503 li
.878431 .901961 .901961 rgb
f
227.939 62.2081 mo
228.061 62.2705 228.183 62.3314 228.306 62.3885 cv
236.889 48.5215 li
236.783 48.4368 236.674 48.3545 236.564 48.2735 cv
227.939 62.2081 li
.717647 .745098 .776471 rgb
f
235.606 47.6979 mo
235.377 47.5851 li
226.794 61.4522 li
226.997 61.607 li
235.606 47.6979 li
f
237.838 60.5383 mo
236.982 61.3783 235.935 62.0496 234.722 62.4592 cv
230.422 63.9121 225.758 61.6037 224.305 57.3033 cv
223.314 54.3704 224.075 51.2703 226.022 49.1332 cv
223.842 51.2726 222.938 54.5415 223.982 57.6296 cv
225.434 61.93 230.098 64.2383 234.399 62.7855 cv
235.766 62.3234 236.93 61.5348 237.838 60.5383 cv
f
250.902 79.2884 mo
246.601 80.7412 241.937 78.4329 240.484 74.1324 cv
239.032 69.8319 241.34 65.168 245.64 63.7151 cv
249.941 62.2622 254.605 64.5706 256.058 68.8711 cv
257.511 73.1715 255.202 77.8355 250.902 79.2884 cv
.996078 .807843 .537255 rgb
f
252.226 78.7213 mo
252.47 78.5874 252.712 78.4445 252.946 78.283 cv
253.216 78.0963 253.466 77.8916 253.706 77.6794 cv
244.446 64.2556 li
244.162 64.4048 243.882 64.5655 243.612 64.752 cv
243.378 64.9137 243.158 65.0886 242.946 65.2695 cv
252.226 78.7213 li
.956863 .756863 .490196 rgb
f
253.394 77.9431 mo
253.5 77.8567 253.604 77.7692 253.706 77.6794 cv
244.446 64.2556 li
244.326 64.3188 244.207 64.3856 244.089 64.4541 cv
253.394 77.9431 li
.878431 .623529 .317647 rgb
f
243.177 65.1009 mo
242.982 65.2655 li
252.242 78.6893 li
252.465 78.5655 li
243.177 65.1009 li
f
254.341 77.0412 mo
253.485 77.8813 252.438 78.5525 251.225 78.9622 cv
246.925 80.4149 242.261 78.1067 240.808 73.8062 cv
239.817 70.8734 240.578 67.7732 242.525 65.6361 cv
240.345 67.7755 239.441 71.0444 240.484 74.1324 cv
241.937 78.4329 246.601 80.7412 250.902 79.2884 cv
252.269 78.8263 253.433 78.0377 254.341 77.0412 cv
f
218.876 78.3083 mo
214.576 79.7612 209.912 77.4527 208.459 73.1523 cv
207.006 68.8518 209.314 64.1879 213.615 62.735 cv
217.915 61.2821 222.579 63.5905 224.032 67.8909 cv
225.485 72.1914 223.176 76.8553 218.876 78.3083 cv
.956863 .960784 .968627 rgb
f
220.785 77.3954 mo
221.017 77.2419 221.246 77.0795 221.466 76.8992 cv
221.72 76.6909 221.952 76.4662 222.174 76.235 cv
211.837 63.621 li
211.566 63.7931 211.3 63.9764 211.046 64.1846 cv
210.826 64.3651 210.622 64.5575 210.426 64.7551 cv
220.785 77.3954 li
.878431 .901961 .901961 rgb
f
221.884 76.5236 mo
221.983 76.4287 222.08 76.333 222.174 76.235 cv
211.837 63.621 li
211.722 63.6939 211.609 63.7703 211.497 63.8481 cv
221.884 76.5236 li
.717647 .745098 .776471 rgb
f
210.642 64.5683 mo
210.461 64.7482 li
220.798 77.3624 li
221.01 77.2206 li
210.642 64.5683 li
f
222.315 76.061 mo
221.459 76.9011 220.412 77.5725 219.199 77.9821 cv
214.899 79.435 210.235 77.1266 208.782 72.8262 cv
207.792 69.8933 208.552 66.7932 210.499 64.6559 cv
208.319 66.7953 207.416 70.0644 208.459 73.1523 cv
209.912 77.4527 214.576 79.7612 218.876 78.3083 cv
220.244 77.8462 221.407 77.0576 222.315 76.061 cv
f
235.379 94.8112 mo
231.078 96.2641 226.415 93.9556 224.962 89.6552 cv
223.509 85.3548 225.817 80.6908 230.118 79.2379 cv
234.418 77.7851 239.082 80.0934 240.535 84.3938 cv
241.988 88.6943 239.679 93.3583 235.379 94.8112 cv
.996078 .807843 .537255 rgb
f
234.566 95.0351 mo
234.838 94.9734 235.109 94.9022 235.379 94.8112 cv
235.69 94.706 235.986 94.5777 236.276 94.4395 cv
231.056 78.9894 li
230.742 79.0551 230.429 79.1327 230.118 79.2379 cv
229.848 79.329 229.589 79.437 229.336 79.5527 cv
234.566 95.0351 li
.956863 .756863 .490196 rgb
f
235.903 94.6074 mo
236.028 94.5534 236.153 94.498 236.276 94.4395 cv
231.056 78.9894 li
230.923 79.0173 230.79 79.0489 230.658 79.0822 cv
235.903 94.6074 li
.878431 .623529 .317647 rgb
f
229.604 79.4541 mo
229.371 79.5587 li
234.591 95.0088 li
234.839 94.9511 li
229.604 79.4541 li
f
238.818 92.564 mo
237.962 93.4039 236.915 94.0753 235.702 94.4849 cv
231.402 95.9378 226.738 93.6296 225.285 89.329 cv
224.294 86.3961 225.055 83.296 227.002 81.1589 cv
224.822 83.2983 223.918 86.5673 224.962 89.6552 cv
226.415 93.9557 231.078 96.2641 235.379 94.8112 cv
236.747 94.3492 237.91 93.5605 238.818 92.564 cv
f
203.353 93.8311 mo
199.053 95.2841 194.389 92.9756 192.936 88.6751 cv
191.483 84.3747 193.792 79.7108 198.092 78.2578 cv
202.392 76.8049 207.056 79.1134 208.509 83.4138 cv
209.962 87.7142 207.654 92.3782 203.353 93.8311 cv
.956863 .960784 .968627 rgb
f
208.865 84.5191 mo
208.812 84.2458 208.749 83.9724 208.666 83.7 cv
208.571 83.3857 208.452 83.0857 208.323 82.7923 cv
192.717 87.5244 li
192.773 87.8399 192.841 88.1555 192.936 88.4698 cv
193.018 88.7422 193.118 89.0043 193.226 89.2611 cv
208.865 84.5191 li
.878431 .901961 .901961 rgb
f
208.479 83.17 mo
208.429 83.0429 208.378 82.9165 208.323 82.7923 cv
192.717 87.5244 li
192.741 87.658 192.768 87.7917 192.797 87.9251 cv
208.479 83.17 li
.717647 .745098 .776471 rgb
f
193.136 88.9903 mo
193.233 89.2262 li
208.839 84.494 li
208.789 84.2439 li
193.136 88.9903 li
f
206.792 91.5839 mo
205.936 92.424 204.889 93.0954 203.677 93.505 cv
199.376 94.9577 194.712 92.6494 193.259 88.3489 cv
192.269 85.4161 193.03 82.316 194.977 80.1788 cv
192.796 82.3182 191.893 85.5871 192.936 88.6751 cv
194.389 92.9756 199.053 95.2839 203.353 93.8311 cv
204.721 93.3691 205.884 92.5804 206.792 91.5839 cv
f
219.856 110.334 mo
215.556 111.787 210.892 109.478 209.439 105.178 cv
207.986 100.878 210.294 96.2137 214.595 94.7607 cv
218.895 93.3078 223.559 95.6163 225.012 99.9167 cv
226.465 104.217 224.157 108.881 219.856 110.334 cv
.996078 .807843 .537255 rgb
f
212.911 95.5671 mo
212.677 95.717 212.445 95.876 212.223 96.053 cv
211.965 96.2574 211.73 96.4787 211.505 96.7066 cv
221.649 109.474 li
221.922 109.306 222.191 109.127 222.448 108.923 cv
222.671 108.745 222.878 108.556 223.077 108.361 cv
212.911 95.5671 li
.956863 .756863 .490196 rgb
f
211.799 96.4223 mo
211.699 96.5156 211.6 96.61 211.505 96.7066 cv
221.649 109.474 li
221.765 109.403 221.879 109.328 221.992 109.252 cv
211.799 96.4223 li
.878431 .623529 .317647 rgb
f
222.858 108.545 mo
223.042 108.368 li
212.897 95.6 li
212.683 95.7385 li
222.858 108.545 li
f
223.295 108.087 mo
222.439 108.927 221.392 109.598 220.18 110.008 cv
215.879 111.461 211.215 109.152 209.762 104.852 cv
208.772 101.919 209.533 98.8188 211.479 96.6817 cv
209.299 98.8212 208.396 102.09 209.439 105.178 cv
210.892 109.478 215.556 111.787 219.856 110.334 cv
221.224 109.872 222.387 109.083 223.295 108.087 cv
f
187.83 109.354 mo
183.53 110.807 178.866 108.498 177.413 104.198 cv
175.96 99.8976 178.269 95.2335 182.569 93.7806 cv
186.87 92.3278 191.534 94.6361 192.987 98.9366 cv
194.439 103.237 192.131 107.901 187.83 109.354 cv
.956863 .960784 .968627 rgb
f
191.822 106.499 mo
191.988 106.275 192.148 106.044 192.293 105.8 cv
192.461 105.517 192.602 105.227 192.732 104.934 cv
178.712 96.6039 li
178.517 96.8582 178.329 97.1209 178.162 97.4034 cv
178.016 97.6482 177.89 97.8987 177.773 98.1515 cv
191.822 106.499 li
.878431 .901961 .901961 rgb
f
192.558 105.304 mo
192.619 105.181 192.677 105.058 192.732 104.934 cv
178.712 96.6039 li
178.629 96.7116 178.549 96.8219 178.47 96.9336 cv
192.558 105.304 li
.717647 .745098 .776471 rgb
f
177.912 97.9022 mo
177.804 98.1331 li
191.824 106.463 li
191.975 106.257 li
177.912 97.9022 li
f
191.269 107.107 mo
190.413 107.947 189.367 108.618 188.154 109.028 cv
183.854 110.481 179.19 108.172 177.737 103.872 cv
176.746 100.939 177.507 97.8387 179.454 95.7017 cv
177.273 97.8411 176.37 101.11 177.413 104.198 cv
178.866 108.498 183.53 110.807 187.83 109.354 cv
189.198 108.892 190.362 108.103 191.269 107.107 cv
f
204.333 125.857 mo
200.033 127.31 195.369 125.001 193.916 120.701 cv
192.463 116.401 194.772 111.736 199.072 110.283 cv
203.373 108.831 208.036 111.139 209.489 115.44 cv
210.942 119.74 208.634 124.404 204.333 125.857 cv
.996078 .807843 .537255 rgb
f
195.886 123.798 mo
196.083 123.996 196.287 124.188 196.507 124.368 cv
196.761 124.576 197.027 124.759 197.298 124.931 cv
207.628 112.314 li
207.406 112.082 207.174 111.858 206.92 111.65 cv
206.7 111.47 206.471 111.307 206.238 111.154 cv
195.886 123.798 li
.956863 .756863 .490196 rgb
f
196.958 124.704 mo
197.07 124.782 197.183 124.859 197.298 124.931 cv
207.628 112.314 li
207.534 112.216 207.437 112.12 207.338 112.025 cv
196.958 124.704 li
.878431 .623529 .317647 rgb
f
206.464 111.329 mo
206.252 111.187 li
195.921 123.805 li
196.102 123.985 li
206.464 111.329 li
f
207.772 123.61 mo
206.916 124.45 205.869 125.121 204.657 125.531 cv
200.356 126.984 195.693 124.675 194.24 120.375 cv
193.249 117.442 194.01 114.342 195.957 112.205 cv
193.776 114.344 192.873 117.613 193.916 120.701 cv
195.369 125.001 200.033 127.31 204.333 125.857 cv
205.701 125.395 206.865 124.606 207.772 123.61 cv
f
186.827 117.287 mo
186.554 117.287 186.28 117.182 186.072 116.973 cv
185.654 116.556 185.654 115.88 186.072 115.462 cv
212.359 89.1753 li
212.496 89.8623 li
186.896 115.462 li
186.782 115.576 186.782 115.761 186.896 115.875 cv
186.953 115.931 187.027 115.96 187.102 115.96 cv
187.176 115.96 187.251 115.931 187.308 115.875 cv
212.633 90.5492 li
212.862 91.6943 li
187.583 116.973 li
187.374 117.182 187.101 117.287 186.827 117.287 cv
219.366 85.19 mo
219.137 84.0449 li
224.4 78.782 li
224.629 79.927 li
219.366 85.19 li
219 83.358 mo
218.863 82.671 li
224.126 77.4081 li
224.263 78.0951 li
219 83.358 li
241.364 63.1918 mo
241.136 62.0467 li
263.548 39.6341 li
263.662 39.5203 263.662 39.3358 263.548 39.2221 cv
263.491 39.1652 263.417 39.1368 263.342 39.1368 cv
263.268 39.1368 263.193 39.1652 263.136 39.2221 cv
240.998 61.3598 li
240.861 60.6728 li
262.312 39.2221 li
262.521 39.0134 262.794 38.9091 263.067 38.9091 cv
263.341 38.9091 263.614 39.0134 263.823 39.2221 cv
264.24 39.6394 264.24 40.3158 263.823 40.7331 cv
241.364 63.1918 li
.364706 .447059 .54902 rgb
f
224.629 79.927 mo
224.4 78.782 li
241.136 62.0467 li
241.364 63.1918 li
224.629 79.927 li
224.263 78.0951 mo
224.126 77.4081 li
240.861 60.6728 li
240.998 61.3598 li
224.263 78.0951 li
.501961 .584314 .682353 rgb
f
212.862 91.6943 mo
212.633 90.5492 li
219.137 84.0449 li
219.366 85.19 li
212.862 91.6943 li
212.496 89.8623 mo
212.359 89.1753 li
218.863 82.671 li
219 83.358 li
212.496 89.8623 li
f
187.102 115.96 mo
187.027 115.96 186.953 115.931 186.896 115.875 cv
186.782 115.761 186.782 115.576 186.896 115.462 cv
212.496 89.8623 li
212.633 90.5492 li
187.308 115.875 li
187.251 115.931 187.176 115.96 187.102 115.96 cv
219.137 84.0449 mo
219 83.358 li
224.263 78.0951 li
224.4 78.782 li
219.137 84.0449 li
241.136 62.0467 mo
240.998 61.3598 li
263.136 39.2221 li
263.193 39.1652 263.268 39.1368 263.342 39.1368 cv
263.417 39.1368 263.491 39.1652 263.548 39.2221 cv
263.662 39.3358 263.662 39.5203 263.548 39.6341 cv
241.136 62.0467 li
.721569 .756863 .8 rgb
f
224.4 78.782 mo
224.263 78.0951 li
240.998 61.3598 li
241.136 62.0467 li
224.4 78.782 li
.776471 .811765 .854902 rgb
f
212.633 90.5492 mo
212.496 89.8623 li
219 83.358 li
219.137 84.0449 li
212.633 90.5492 li
f
247.267 49.2567 mo
244.723 49.2567 242.249 48.2574 240.375 46.3834 cv
239.307 45.3156 238.518 44.0436 238.032 42.6045 cv
237.196 40.1308 237.374 37.4801 238.532 35.1407 cv
239.69 32.8011 241.69 31.0522 244.163 30.2173 cv
245.201 29.8667 246.265 29.6957 247.317 29.6957 cv
249.86 29.6957 252.334 30.6948 254.208 32.5686 cv
255.275 33.6364 256.064 34.9086 256.55 36.3478 cv
258.274 41.4532 255.524 47.01 250.419 48.7354 cv
249.382 49.0858 248.318 49.2567 247.267 49.2567 cv
247.29 47.6972 mo
247.29 47.6972 li
247.291 47.6972 247.291 47.6972 247.292 47.6972 cv
248.158 47.697 249.04 47.5586 249.907 47.2675 cv
249.912 47.2659 249.917 47.2642 249.922 47.2626 cv
249.922 47.2626 li
249.929 47.26 249.937 47.2575 249.944 47.2549 cv
249.946 47.2544 249.947 47.2538 249.949 47.2534 cv
249.956 47.2508 249.964 47.2482 249.971 47.2456 cv
249.972 47.2454 249.973 47.2451 249.974 47.2448 cv
249.981 47.2424 249.987 47.2401 249.994 47.2377 cv
249.996 47.2371 249.997 47.2367 249.999 47.2361 cv
250.006 47.2337 250.013 47.2312 250.02 47.2288 cv
250.022 47.2279 250.024 47.2272 250.026 47.2264 cv
250.032 47.2245 250.037 47.2226 250.043 47.2206 cv
250.045 47.2199 250.046 47.2193 250.049 47.2185 cv
250.055 47.2164 250.061 47.2141 250.067 47.2119 cv
250.071 47.2106 250.075 47.2092 250.078 47.2079 cv
250.081 47.207 250.083 47.2061 250.086 47.2052 cv
253.609 45.9329 255.747 42.4844 255.492 38.8977 cv
256.259 38.8977 li
256.21 38.1307 256.071 37.3584 255.814 36.5964 cv
255.366 35.2714 254.641 34.1012 253.658 33.1182 cv
251.933 31.3935 249.656 30.4736 247.315 30.4736 cv
246.346 30.4736 245.368 30.6309 244.412 30.9538 cv
242.135 31.722 240.295 33.3318 239.228 35.4854 cv
238.692 36.5695 238.385 37.7261 238.31 38.8977 cv
239.09 38.8977 li
239.019 39.8982 239.132 40.9281 239.45 41.9399 cv
239.451 41.9423 239.451 41.9446 239.452 41.947 cv
239.454 41.9518 239.455 41.9559 239.456 41.9606 cv
239.457 41.9637 239.458 41.967 239.459 41.97 cv
239.461 41.976 239.463 41.9823 239.465 41.9884 cv
239.467 41.9927 239.468 41.997 239.469 42.0014 cv
239.47 42.0045 239.472 42.0078 239.473 42.0109 cv
239.474 42.0156 239.476 42.0204 239.477 42.0251 cv
239.478 42.028 239.479 42.0304 239.48 42.0333 cv
239.482 42.0402 239.484 42.0474 239.487 42.0543 cv
239.487 42.0564 239.488 42.0586 239.489 42.0607 cv
239.491 42.0664 239.493 42.072 239.495 42.0777 cv
239.495 42.0798 239.496 42.0821 239.497 42.0842 cv
239.499 42.0917 239.502 42.0991 239.504 42.1067 cv
239.504 42.1067 li
240.662 45.5328 243.857 47.6945 247.283 47.6972 cv
247.286 47.6972 247.288 47.6972 247.29 47.6972 cv
247.29 47.6972 li
.447059 .517647 .607843 rgb
f
247.29 47.6972 mo
247.29 47.6972 li
247.291 47.6972 247.291 47.6972 247.292 47.6972 cv
247.291 47.6972 247.291 47.6972 247.29 47.6972 cv
247.283 47.6972 mo
243.857 47.6945 240.662 45.5328 239.504 42.1067 cv
240.662 45.5325 243.857 47.6942 247.283 47.6972 cv
247.614 47.3711 mo
244.185 47.3713 240.986 45.2089 239.828 41.7804 cv
239.505 40.8242 239.368 39.8503 239.398 38.8977 cv
246.207 38.8977 li
249.028 47.2475 li
248.556 47.3306 248.082 47.371 247.614 47.3711 cv
249.944 47.2549 mo
249.946 47.2544 249.947 47.2538 249.949 47.2534 cv
249.947 47.2538 249.946 47.2544 249.944 47.2549 cv
249.971 47.2456 mo
249.972 47.2454 249.973 47.2451 249.974 47.2448 cv
249.973 47.2451 249.972 47.2454 249.971 47.2456 cv
249.994 47.2377 mo
249.996 47.2371 249.997 47.2366 249.999 47.2361 cv
249.997 47.2367 249.996 47.2371 249.994 47.2377 cv
250.02 47.2288 mo
250.022 47.228 250.024 47.2272 250.026 47.2264 cv
250.024 47.2272 250.022 47.2279 250.02 47.2288 cv
250.043 47.2206 mo
250.045 47.2199 250.047 47.2192 250.049 47.2185 cv
250.046 47.2193 250.045 47.2199 250.043 47.2206 cv
250.067 47.2119 mo
250.071 47.2105 250.075 47.2092 250.078 47.2079 cv
250.075 47.2092 250.071 47.2106 250.067 47.2119 cv
250.086 47.2052 mo
251.382 46.7368 252.489 45.9718 253.361 45.0154 cv
253.34 45.0357 253.319 45.056 253.298 45.0761 cv
254.833 43.429 255.653 41.1925 255.491 38.8977 cv
255.492 38.8977 li
255.747 42.4844 253.609 45.9329 250.086 47.2052 cv
250.767 46.7399 mo
248.118 38.8977 li
254.824 38.8977 li
255.163 41.3938 254.321 43.8685 252.642 45.6443 cv
252.08 46.083 251.453 46.4545 250.767 46.7399 cv
239.497 42.0842 mo
239.496 42.0821 239.495 42.0798 239.495 42.0777 cv
239.495 42.0797 239.496 42.0821 239.497 42.0842 cv
239.489 42.0607 mo
239.488 42.0586 239.487 42.0564 239.487 42.0543 cv
239.488 42.0566 239.488 42.0584 239.489 42.0607 cv
239.48 42.0333 mo
239.479 42.0304 239.478 42.028 239.477 42.0251 cv
239.478 42.0277 239.479 42.0306 239.48 42.0333 cv
239.473 42.0109 mo
239.472 42.0078 239.47 42.0045 239.469 42.0014 cv
239.47 42.0046 239.471 42.0077 239.473 42.0109 cv
239.465 41.9884 mo
239.463 41.9823 239.461 41.976 239.459 41.97 cv
239.461 41.9762 239.463 41.9822 239.465 41.9884 cv
239.456 41.9606 mo
239.455 41.9559 239.454 41.9518 239.452 41.947 cv
239.454 41.9516 239.455 41.9561 239.456 41.9606 cv
239.45 41.9399 mo
239.132 40.9281 239.019 39.8982 239.09 38.8977 cv
239.092 38.8977 li
239.02 39.8979 239.131 40.9275 239.45 41.9399 cv
.956863 .960784 .968627 rgb
f
249.907 47.2675 mo
249.912 47.2659 249.917 47.2643 249.922 47.2626 cv
249.917 47.2642 249.912 47.2659 249.907 47.2675 cv
249.028 47.2475 mo
246.207 38.8977 li
246.24 38.8977 li
249.059 47.2419 li
249.049 47.2438 249.039 47.2456 249.028 47.2475 cv
249.311 47.1927 mo
246.508 38.8977 li
247.688 38.8977 li
250.387 46.8869 li
250.34 46.9038 250.293 46.9203 250.245 46.9365 cv
249.935 47.0412 249.623 47.1264 249.311 47.1927 cv
.909804 .92549 .929412 rgb
f
250.387 46.8869 mo
247.688 38.8977 li
248.118 38.8977 li
250.767 46.7399 li
250.643 46.7917 250.516 46.8408 250.387 46.8869 cv
.811765 .831372 .854902 rgb
f
249.059 47.2419 mo
246.24 38.8977 li
246.508 38.8977 li
249.311 47.1927 li
249.227 47.2104 249.143 47.2269 249.059 47.2419 cv
f
252.642 45.6443 mo
254.321 43.8685 255.163 41.3938 254.824 38.8977 cv
255.491 38.8977 li
255.653 41.1925 254.833 43.429 253.298 45.0761 cv
253.09 45.2758 252.872 45.4656 252.642 45.6443 cv
.980392 .980392 .984314 rgb
f
247.29 47.6972 mo
247.288 47.6972 247.286 47.6972 247.283 47.6972 cv
243.857 47.6942 240.662 45.5325 239.504 42.1067 cv
239.504 42.1067 li
239.502 42.0991 239.499 42.0917 239.497 42.0842 cv
239.496 42.0821 239.495 42.0797 239.495 42.0777 cv
239.493 42.072 239.491 42.0664 239.489 42.0607 cv
239.488 42.0584 239.488 42.0566 239.487 42.0543 cv
239.484 42.0474 239.482 42.0402 239.48 42.0333 cv
239.479 42.0306 239.478 42.0277 239.477 42.0251 cv
239.476 42.0204 239.474 42.0156 239.473 42.0109 cv
239.471 42.0077 239.47 42.0046 239.469 42.0014 cv
239.468 41.997 239.467 41.9927 239.465 41.9884 cv
239.463 41.9822 239.461 41.9762 239.459 41.97 cv
239.458 41.967 239.457 41.9637 239.456 41.9606 cv
239.455 41.9561 239.454 41.9516 239.452 41.947 cv
239.451 41.9446 239.451 41.9423 239.45 41.9399 cv
239.131 40.9275 239.02 39.8979 239.092 38.8977 cv
239.398 38.8977 li
239.368 39.8503 239.505 40.8242 239.828 41.7804 cv
240.986 45.2089 244.185 47.3713 247.614 47.3711 cv
248.082 47.371 248.556 47.3306 249.028 47.2475 cv
249.039 47.2456 249.049 47.2438 249.059 47.2419 cv
249.143 47.2269 249.227 47.2104 249.311 47.1927 cv
249.623 47.1264 249.935 47.0412 250.245 46.9365 cv
250.293 46.9203 250.34 46.9038 250.387 46.8869 cv
250.516 46.8408 250.643 46.7917 250.767 46.7399 cv
250.767 46.7399 li
251.453 46.4545 252.08 46.083 252.642 45.6443 cv
252.872 45.4656 253.09 45.2758 253.298 45.0761 cv
253.319 45.056 253.34 45.0357 253.361 45.0154 cv
252.489 45.9718 251.382 46.7368 250.086 47.2052 cv
250.083 47.2061 250.081 47.207 250.078 47.2079 cv
250.075 47.2092 250.071 47.2105 250.067 47.2119 cv
250.061 47.2141 250.055 47.2164 250.049 47.2185 cv
250.047 47.2192 250.045 47.2199 250.043 47.2206 cv
250.037 47.2226 250.032 47.2245 250.026 47.2264 cv
250.024 47.2272 250.022 47.228 250.02 47.2288 cv
250.013 47.2312 250.006 47.2337 249.999 47.2361 cv
249.997 47.2366 249.996 47.2371 249.994 47.2377 cv
249.987 47.2401 249.981 47.2424 249.974 47.2448 cv
249.973 47.2451 249.972 47.2454 249.971 47.2456 cv
249.964 47.2482 249.956 47.2508 249.949 47.2534 cv
249.947 47.2538 249.946 47.2544 249.944 47.2549 cv
249.937 47.2575 249.929 47.26 249.922 47.2626 cv
249.922 47.2626 li
249.917 47.2643 249.912 47.2659 249.907 47.2675 cv
249.04 47.5586 248.158 47.697 247.292 47.6972 cv
247.291 47.6972 247.291 47.6972 247.29 47.6972 cv
247.29 47.6972 li
.811765 .831372 .854902 rgb
f
256.259 38.8977 mo
255.492 38.8977 li
255.447 38.2687 255.328 37.6356 255.131 37.0091 cv
255.13 37.0072 255.13 37.0056 255.129 37.0037 cv
255.128 36.9987 255.126 36.9935 255.125 36.9885 cv
255.124 36.986 255.123 36.9836 255.122 36.9811 cv
255.121 36.9764 255.119 36.9715 255.118 36.9668 cv
255.117 36.9639 255.116 36.9607 255.115 36.9578 cv
255.112 36.951 255.11 36.944 255.108 36.9372 cv
255.107 36.9328 255.105 36.9283 255.104 36.924 cv
255.103 36.9205 255.101 36.917 255.1 36.9136 cv
255.099 36.9092 255.097 36.905 255.096 36.9006 cv
255.095 36.8975 255.094 36.894 255.093 36.8908 cv
255.091 36.886 255.09 36.8812 255.088 36.8764 cv
255.087 36.8738 255.086 36.8707 255.085 36.868 cv
255.083 36.8605 255.08 36.8529 255.078 36.8453 cv
255.078 36.8453 li
255.078 36.8453 li
255.072 36.8283 255.066 36.8114 255.06 36.7944 cv
255.057 36.7855 255.054 36.7769 255.051 36.768 cv
255.047 36.7565 255.043 36.7447 255.039 36.7333 cv
253.85 33.3721 250.687 31.2574 247.299 31.2547 cv
247.296 31.2547 247.294 31.2547 247.292 31.2547 cv
247.292 31.2547 li
247.292 31.2547 li
247.291 31.2547 247.291 31.2547 247.29 31.2547 cv
246.419 31.2549 245.532 31.3948 244.66 31.6893 cv
244.66 31.6893 li
244.652 31.6923 244.643 31.6952 244.634 31.6982 cv
244.631 31.6992 244.628 31.7002 244.626 31.7012 cv
244.62 31.7033 244.614 31.7053 244.608 31.7074 cv
244.606 31.7081 244.604 31.7088 244.602 31.7095 cv
244.594 31.712 244.587 31.7145 244.58 31.7171 cv
244.579 31.7172 244.579 31.7174 244.578 31.7176 cv
241.39 32.8318 239.316 35.7195 239.09 38.8977 cv
238.31 38.8977 li
238.385 37.7261 238.692 36.5695 239.228 35.4854 cv
240.295 33.3318 242.135 31.722 244.412 30.9538 cv
245.368 30.6309 246.346 30.4736 247.315 30.4736 cv
249.656 30.4736 251.933 31.3935 253.658 33.1182 cv
254.641 34.1012 255.366 35.2714 255.814 36.5964 cv
256.071 37.3584 256.21 38.1307 256.259 38.8977 cv
.65098 .694118 .752941 rgb
f
255.492 38.8977 mo
255.491 38.8977 li
255.447 38.2689 255.328 37.6358 255.131 37.0091 cv
255.328 37.6356 255.447 38.2687 255.492 38.8977 cv
254.824 38.8977 mo
248.118 38.8977 li
245.731 31.8329 li
246.048 31.7958 246.365 31.7776 246.679 31.7776 cv
250.108 31.7776 253.306 33.9397 254.465 37.3682 cv
254.636 37.875 254.755 38.3868 254.824 38.8977 cv
246.207 38.8977 mo
239.398 38.8977 li
239.459 36.9285 240.233 35.0506 241.545 33.6103 cv
240.117 35.0111 239.237 36.8961 239.092 38.8977 cv
239.09 38.8977 li
239.316 35.7195 241.39 32.8318 244.578 31.7176 cv
243.455 32.1102 242.476 32.7281 241.662 33.4958 cv
242.34 32.9724 243.107 32.5415 243.959 32.2426 cv
246.207 38.8977 li
255.129 37.0037 mo
255.128 36.9987 255.126 36.9935 255.125 36.9885 cv
255.126 36.9935 255.128 36.9987 255.129 37.0037 cv
255.122 36.9811 mo
255.121 36.9763 255.119 36.9716 255.118 36.9668 cv
255.119 36.9715 255.121 36.9764 255.122 36.9811 cv
255.115 36.9578 mo
255.112 36.9509 255.11 36.944 255.108 36.9372 cv
255.11 36.944 255.112 36.951 255.115 36.9578 cv
255.104 36.924 mo
255.103 36.9204 255.101 36.9172 255.1 36.9136 cv
255.101 36.917 255.103 36.9205 255.104 36.924 cv
255.096 36.9006 mo
255.095 36.8975 255.094 36.8939 255.093 36.8908 cv
255.094 36.894 255.095 36.8975 255.096 36.9006 cv
255.088 36.8764 mo
255.087 36.8735 255.086 36.871 255.085 36.868 cv
255.086 36.8707 255.087 36.8738 255.088 36.8764 cv
255.06 36.7944 mo
255.057 36.7855 255.054 36.7769 255.051 36.768 cv
255.054 36.7769 255.057 36.7855 255.06 36.7944 cv
255.039 36.7333 mo
253.85 33.3724 250.687 31.2577 247.299 31.2547 cv
250.687 31.2574 253.85 33.3721 255.039 36.7333 cv
244.58 31.7171 mo
244.587 31.7145 244.594 31.712 244.602 31.7095 cv
244.594 31.712 244.587 31.7145 244.58 31.7171 cv
244.608 31.7074 mo
244.614 31.7053 244.62 31.7033 244.626 31.7012 cv
244.62 31.7033 244.614 31.7053 244.608 31.7074 cv
244.634 31.6982 mo
244.643 31.6952 244.652 31.6923 244.66 31.6893 cv
244.66 31.6893 li
244.66 31.6893 li
244.66 31.6893 li
244.66 31.6893 li
244.652 31.6923 244.643 31.6952 244.634 31.6982 cv
247.29 31.2547 mo
247.291 31.2547 247.291 31.2547 247.292 31.2547 cv
247.292 31.2547 li
247.291 31.2547 247.291 31.2547 247.29 31.2547 cv
.956863 .960784 .968627 rgb
f
247.688 38.8977 mo
246.508 38.8977 li
244.23 32.1529 li
244.592 32.0397 244.957 31.9528 245.321 31.8913 cv
247.688 38.8977 li
246.24 38.8977 mo
246.207 38.8977 li
243.959 32.2426 li
243.969 32.2392 243.979 32.2358 243.989 32.2323 cv
246.24 38.8977 li
.929412 .941176 .945098 rgb
f
248.118 38.8977 mo
247.688 38.8977 li
245.321 31.8913 li
245.458 31.8683 245.595 31.8489 245.731 31.8329 cv
248.118 38.8977 li
.870588 .882353 .901961 rgb
f
246.508 38.8977 mo
246.24 38.8977 li
243.989 32.2323 li
244.008 32.2255 244.028 32.2188 244.048 32.2122 cv
244.108 32.1917 244.169 32.1719 244.23 32.1529 cv
246.508 38.8977 li
f
255.131 37.0091 mo
255.13 37.0073 255.13 37.0056 255.129 37.0037 cv
255.13 37.0056 255.13 37.0072 255.131 37.0091 cv
255.125 36.9885 mo
255.124 36.9859 255.123 36.9838 255.122 36.9811 cv
255.123 36.9836 255.124 36.986 255.125 36.9885 cv
255.118 36.9668 mo
255.117 36.9639 255.116 36.9607 255.115 36.9578 cv
255.116 36.9607 255.117 36.9639 255.118 36.9668 cv
255.108 36.9372 mo
255.107 36.9327 255.105 36.9284 255.104 36.924 cv
255.105 36.9283 255.107 36.9328 255.108 36.9372 cv
255.1 36.9136 mo
255.099 36.9092 255.098 36.9051 255.096 36.9006 cv
255.097 36.905 255.099 36.9092 255.1 36.9136 cv
255.093 36.8908 mo
255.091 36.8858 255.09 36.8814 255.088 36.8764 cv
255.09 36.8812 255.091 36.886 255.093 36.8908 cv
255.085 36.868 mo
255.083 36.8604 255.08 36.853 255.078 36.8453 cv
255.08 36.8529 255.083 36.8605 255.085 36.868 cv
255.078 36.8453 mo
255.072 36.8283 255.066 36.8114 255.06 36.7944 cv
255.066 36.8114 255.072 36.8283 255.078 36.8453 cv
255.051 36.768 mo
255.047 36.7565 255.043 36.7447 255.039 36.7333 cv
255.043 36.7447 255.047 36.7565 255.051 36.768 cv
244.578 31.7176 mo
244.579 31.7174 244.579 31.7172 244.58 31.7171 cv
244.579 31.7172 244.579 31.7174 244.578 31.7176 cv
244.602 31.7095 mo
244.604 31.7088 244.606 31.7081 244.608 31.7074 cv
244.605 31.7081 244.604 31.7087 244.602 31.7095 cv
244.626 31.7012 mo
244.628 31.7002 244.631 31.6992 244.634 31.6982 cv
244.631 31.6992 244.628 31.7002 244.626 31.7012 cv
244.66 31.6893 mo
245.532 31.3948 246.419 31.2549 247.29 31.2547 cv
246.419 31.255 245.532 31.3949 244.66 31.6893 cv
247.299 31.2547 mo
247.296 31.2547 247.294 31.2547 247.292 31.2547 cv
247.292 31.2547 li
247.294 31.2547 247.296 31.2547 247.299 31.2547 cv
.941176 .945098 .956863 rgb
f
255.491 38.8977 mo
254.824 38.8977 li
254.755 38.3868 254.636 37.875 254.465 37.3682 cv
253.306 33.9397 250.108 31.7776 246.679 31.7776 cv
246.365 31.7776 246.048 31.7958 245.731 31.8329 cv
245.599 31.4409 li
245.285 31.5065 244.972 31.5842 244.66 31.6893 cv
244.66 31.6893 li
245.532 31.3949 246.419 31.255 247.29 31.2547 cv
247.291 31.2547 247.291 31.2547 247.292 31.2547 cv
247.294 31.2547 247.296 31.2547 247.299 31.2547 cv
250.687 31.2577 253.85 33.3724 255.039 36.7333 cv
255.043 36.7447 255.047 36.7565 255.051 36.768 cv
255.054 36.7769 255.057 36.7855 255.06 36.7944 cv
255.066 36.8114 255.072 36.8283 255.078 36.8453 cv
255.078 36.8453 li
255.078 36.8453 li
255.08 36.853 255.083 36.8604 255.085 36.868 cv
255.086 36.871 255.087 36.8735 255.088 36.8764 cv
255.09 36.8814 255.091 36.8858 255.093 36.8908 cv
255.094 36.8939 255.095 36.8975 255.096 36.9006 cv
255.098 36.9051 255.099 36.9092 255.1 36.9136 cv
255.101 36.9172 255.103 36.9204 255.104 36.924 cv
255.105 36.9284 255.107 36.9327 255.108 36.9372 cv
255.11 36.944 255.112 36.9509 255.115 36.9578 cv
255.116 36.9607 255.117 36.9639 255.118 36.9668 cv
255.119 36.9716 255.121 36.9763 255.122 36.9811 cv
255.123 36.9838 255.124 36.9859 255.125 36.9885 cv
255.126 36.9935 255.128 36.9987 255.129 37.0037 cv
255.13 37.0056 255.13 37.0073 255.131 37.0091 cv
255.328 37.6358 255.447 38.2689 255.491 38.8977 cv
241.662 33.4958 mo
242.476 32.7281 243.455 32.1102 244.578 31.7176 cv
244.579 31.7174 244.579 31.7172 244.58 31.7171 cv
244.587 31.7145 244.594 31.712 244.602 31.7095 cv
244.604 31.7087 244.605 31.7081 244.608 31.7074 cv
244.614 31.7053 244.62 31.7033 244.626 31.7012 cv
244.628 31.7002 244.631 31.6992 244.634 31.6982 cv
244.643 31.6952 244.652 31.6923 244.66 31.6893 cv
244.391 31.7805 244.132 31.8884 243.878 32.0041 cv
243.959 32.2426 li
243.107 32.5415 242.34 32.9724 241.662 33.4958 cv
.972549 .972549 .976471 rgb
f
243.959 32.2426 mo
243.878 32.0041 li
244.132 31.8884 244.391 31.7805 244.66 31.6893 cv
244.66 31.6893 li
244.66 31.6893 li
244.972 31.5842 245.285 31.5065 245.599 31.4409 cv
245.731 31.8329 li
245.731 31.8329 li
245.599 31.4409 li
245.466 31.4687 245.333 31.5002 245.201 31.5337 cv
245.321 31.8913 li
244.957 31.9528 244.592 32.0397 244.23 32.1529 cv
244.146 31.9054 li
243.914 32.0102 li
243.989 32.2323 li
243.979 32.2358 243.969 32.2392 243.959 32.2426 cv
.968627 .968627 .976471 rgb
f
245.321 31.8913 mo
245.201 31.5337 li
245.333 31.5002 245.466 31.4687 245.599 31.4409 cv
245.731 31.8329 li
245.595 31.8489 245.458 31.8683 245.321 31.8913 cv
.960784 .964706 .972549 rgb
f
243.989 32.2323 mo
243.914 32.0102 li
244.146 31.9054 li
244.23 32.1529 li
244.169 32.1719 244.108 32.1917 244.048 32.2122 cv
244.028 32.2188 244.008 32.2255 243.989 32.2323 cv
f
239.398 38.8977 mo
239.092 38.8977 li
239.237 36.8961 240.117 35.0111 241.545 33.6103 cv
240.233 35.0506 239.459 36.9285 239.398 38.8977 cv
.870588 .882353 .901961 rgb
f
263.768 65.7591 mo
261.225 65.7591 258.751 64.7599 256.877 62.8862 cv
255.809 61.8183 255.021 60.5464 254.535 59.1072 cv
252.81 54.0016 255.561 48.4449 260.666 46.7195 cv
261.703 46.3691 262.767 46.1982 263.818 46.1982 cv
266.362 46.1982 268.836 47.1973 270.71 49.0713 cv
271.778 50.1392 272.567 51.4112 273.053 52.8504 cv
273.889 55.3241 273.711 57.9747 272.553 60.3143 cv
271.395 62.6538 269.395 64.4026 266.921 65.2376 cv
265.884 65.5882 264.82 65.7591 263.768 65.7591 cv
263.793 64.2001 mo
263.793 64.2001 li
263.793 64.2001 263.794 64.2001 263.795 64.2001 cv
264.666 64.2 265.553 64.06 266.425 63.7655 cv
266.432 63.7631 266.439 63.7607 266.446 63.7583 cv
266.448 63.7574 266.451 63.7567 266.453 63.7558 cv
266.459 63.7539 266.464 63.752 266.47 63.75 cv
266.474 63.7485 266.479 63.747 266.483 63.7455 cv
266.486 63.7445 266.489 63.7435 266.492 63.7425 cv
267.514 63.3876 268.421 62.8509 269.191 62.1804 cv
269.196 62.1851 li
269.196 62.1851 li
269.441 61.9785 269.68 61.7618 269.905 61.5216 cv
270.099 61.3135 270.276 61.0958 270.444 60.8739 cv
270.416 60.8481 li
271.55 59.3028 272.132 57.3799 271.995 55.4146 cv
272.767 55.4146 li
272.717 54.6358 272.573 53.8582 272.317 53.0991 cv
271.869 51.774 271.144 50.6039 270.161 49.6209 cv
268.436 47.8958 266.157 46.976 263.816 46.976 cv
262.848 46.976 261.87 47.1331 260.915 47.4556 cv
257.358 48.6576 255.047 51.8811 254.82 55.4146 cv
255.592 55.4146 li
255.525 56.3878 255.631 57.388 255.931 58.3727 cv
255.931 58.3734 255.931 58.374 255.932 58.3747 cv
255.933 58.38 255.935 58.3852 255.937 58.3905 cv
255.937 58.3924 255.938 58.3944 255.938 58.3963 cv
255.941 58.4039 255.943 58.4115 255.945 58.4191 cv
255.946 58.4225 255.947 58.4258 255.949 58.4292 cv
255.95 58.4331 255.951 58.4369 255.952 58.4408 cv
255.953 58.4444 255.954 58.4481 255.956 58.4517 cv
255.957 58.4551 255.958 58.4591 255.959 58.4625 cv
255.961 58.4682 255.963 58.474 255.964 58.4796 cv
255.965 58.4825 255.966 58.4855 255.967 58.4884 cv
255.969 58.4939 255.971 58.4996 255.973 58.5051 cv
255.973 58.5077 255.974 58.5105 255.975 58.5131 cv
255.977 58.5186 255.979 58.5237 255.98 58.5292 cv
255.981 58.5313 255.982 58.5337 255.983 58.5358 cv
255.985 58.5432 255.987 58.5503 255.99 58.5576 cv
255.99 58.5595 255.991 58.5613 255.992 58.5632 cv
255.994 58.569 255.995 58.5747 255.997 58.5806 cv
255.998 58.5827 255.999 58.5851 256 58.5872 cv
256.002 58.5947 256.005 58.6021 256.007 58.6096 cv
256.022 58.6522 256.036 58.6948 256.051 58.7369 cv
257.244 62.0893 260.403 64.1975 263.786 64.2001 cv
263.789 64.2001 263.791 64.2001 263.793 64.2001 cv
263.793 64.2001 li
.447059 .517647 .607843 rgb
f
263.793 64.2001 mo
263.793 64.2001 li
263.793 64.2001 263.794 64.2001 263.795 64.2001 cv
263.794 64.2001 263.793 64.2001 263.793 64.2001 cv
263.786 64.2001 mo
260.403 64.1975 257.244 62.0893 256.051 58.7369 cv
257.244 62.0891 260.403 64.1972 263.786 64.2001 cv
264.117 63.874 mo
260.688 63.8743 257.489 61.7119 256.331 58.2834 cv
256.009 57.3318 255.872 56.3628 255.9 55.4146 cv
261.945 55.4146 li
269.15 62.1421 li
269.148 62.1439 269.147 62.1457 269.145 62.1475 cv
268.442 62.6951 267.64 63.1381 266.748 63.4394 cv
265.876 63.734 264.989 63.8739 264.117 63.874 cv
266.446 63.7583 mo
266.448 63.7575 266.451 63.7566 266.453 63.7558 cv
266.451 63.7567 266.448 63.7574 266.446 63.7583 cv
266.47 63.75 mo
266.474 63.7485 266.479 63.747 266.483 63.7455 cv
266.479 63.747 266.474 63.7485 266.47 63.75 cv
266.492 63.7425 mo
267.513 63.3875 268.42 62.8494 269.189 62.1786 cv
269.191 62.1804 li
268.421 62.8509 267.514 63.3876 266.492 63.7425 cv
270.416 60.8481 mo
270.411 60.8431 li
271.546 59.2992 272.13 57.3787 271.995 55.4146 cv
271.995 55.4146 li
272.132 57.3799 271.55 59.3028 270.416 60.8481 cv
270.246 60.6888 mo
264.597 55.4146 li
271.329 55.4146 li
271.579 57.2795 271.17 59.1318 270.246 60.6888 cv
256 58.5872 mo
255.999 58.5851 255.998 58.5827 255.997 58.5806 cv
255.998 58.5827 255.999 58.5851 256 58.5872 cv
255.992 58.5632 mo
255.991 58.5613 255.99 58.5595 255.99 58.5576 cv
255.99 58.5595 255.991 58.5613 255.992 58.5632 cv
255.983 58.5358 mo
255.982 58.5337 255.981 58.5313 255.98 58.5292 cv
255.981 58.5313 255.982 58.5337 255.983 58.5358 cv
255.975 58.5131 mo
255.974 58.5105 255.973 58.5077 255.973 58.5051 cv
255.974 58.5077 255.974 58.5105 255.975 58.5131 cv
255.967 58.4884 mo
255.966 58.4855 255.965 58.4825 255.964 58.4796 cv
255.965 58.4826 255.966 58.4854 255.967 58.4884 cv
255.959 58.4625 mo
255.958 58.4591 255.957 58.4551 255.956 58.4517 cv
255.957 58.4553 255.958 58.459 255.959 58.4625 cv
255.952 58.4408 mo
255.951 58.4369 255.95 58.4331 255.949 58.4292 cv
255.95 58.4331 255.951 58.4368 255.952 58.4408 cv
255.945 58.4191 mo
255.943 58.4115 255.941 58.4039 255.938 58.3963 cv
255.941 58.4039 255.943 58.4115 255.945 58.4191 cv
255.937 58.3905 mo
255.935 58.3852 255.933 58.38 255.932 58.3747 cv
255.933 58.38 255.935 58.3852 255.937 58.3905 cv
255.931 58.3727 mo
255.631 57.388 255.525 56.3878 255.592 55.4146 cv
255.594 55.4146 li
255.526 56.3873 255.631 57.3877 255.931 58.3727 cv
.980392 .870588 .709804 rgb
f
269.196 62.1851 mo
269.3 62.0977 269.402 62.0069 269.503 61.9148 cv
269.49 61.9027 li
269.619 61.7784 269.743 61.6502 269.863 61.5183 cv
269.843 61.5389 269.822 61.5593 269.8 61.5797 cv
269.953 61.4158 270.099 61.2461 270.237 61.0711 cv
270.255 61.0877 li
270.41 60.8852 li
270.392 60.8685 li
270.398 60.8601 270.405 60.8515 270.411 60.8431 cv
270.416 60.8481 li
270.444 60.8739 li
270.276 61.0958 270.099 61.3135 269.905 61.5216 cv
269.68 61.7618 269.441 61.9785 269.196 62.1851 cv
269.422 61.8393 mo
262.541 55.4146 li
264.179 55.4146 li
270.093 60.9364 li
269.89 61.2514 269.666 61.5533 269.422 61.8393 cv
270.229 60.7164 mo
264.551 55.4146 li
264.597 55.4146 li
270.246 60.6888 li
270.24 60.698 270.235 60.7072 270.229 60.7164 cv
.956863 .839216 .682353 rgb
f
269.196 62.1851 mo
269.191 62.1804 li
269.189 62.1786 li
269.292 62.089 269.392 61.997 269.49 61.9027 cv
269.503 61.9148 li
269.402 62.0069 269.3 62.0977 269.196 62.1851 cv
269.196 62.1851 li
269.15 62.1421 mo
261.945 55.4146 li
262.541 55.4146 li
269.422 61.8393 li
269.334 61.9424 269.243 62.0433 269.15 62.1421 cv
.909804 .756863 .576471 rgb
f
270.255 61.0877 mo
270.237 61.0711 li
270.29 61.0043 270.341 60.9368 270.392 60.8685 cv
270.41 60.8852 li
270.255 61.0877 li
270.093 60.9364 mo
264.179 55.4146 li
264.551 55.4146 li
270.229 60.7164 li
270.185 60.7905 270.139 60.8637 270.093 60.9364 cv
f
269.145 62.1475 mo
269.147 62.1457 269.148 62.1439 269.15 62.1421 cv
269.151 62.1429 li
269.149 62.1445 269.147 62.146 269.145 62.1475 cv
.984314 .972549 .960784 rgb
f
269.468 61.8824 mo
269.422 61.8393 li
269.666 61.5533 269.89 61.2514 270.093 60.9364 cv
270.237 61.0711 li
270.099 61.2461 269.953 61.4158 269.8 61.5797 cv
269.693 61.6833 269.582 61.7842 269.468 61.8824 cv
.980392 .968627 .956863 rgb
f
270.411 60.8431 mo
270.246 60.6888 li
271.17 59.1318 271.579 57.2795 271.329 55.4146 cv
271.995 55.4146 li
272.13 57.3787 271.546 59.2992 270.411 60.8431 cv
.984314 .972549 .960784 rgb
f
270.392 60.8685 mo
270.229 60.7164 li
270.235 60.7072 270.24 60.698 270.246 60.6888 cv
270.411 60.8431 li
270.405 60.8515 270.398 60.8601 270.392 60.8685 cv
.980392 .968627 .956863 rgb
f
269.151 62.1429 mo
269.15 62.1421 li
269.243 62.0433 269.334 61.9424 269.422 61.8393 cv
269.468 61.8824 li
269.365 61.9716 269.259 62.0585 269.151 62.1429 cv
.976471 .960784 .945098 rgb
f
270.237 61.0711 mo
270.093 60.9364 li
270.139 60.8637 270.185 60.7905 270.229 60.7164 cv
270.392 60.8685 li
270.341 60.9368 270.29 61.0043 270.237 61.0711 cv
f
263.793 64.2001 mo
263.791 64.2001 263.789 64.2001 263.786 64.2001 cv
260.403 64.1972 257.244 62.0891 256.051 58.7369 cv
256.036 58.6948 256.022 58.6522 256.007 58.6096 cv
256.005 58.6021 256.002 58.5947 256 58.5872 cv
255.999 58.5851 255.998 58.5827 255.997 58.5806 cv
255.995 58.5747 255.994 58.569 255.992 58.5632 cv
255.991 58.5613 255.99 58.5595 255.99 58.5576 cv
255.987 58.5503 255.985 58.5432 255.983 58.5358 cv
255.982 58.5337 255.981 58.5313 255.98 58.5292 cv
255.979 58.5237 255.977 58.5186 255.975 58.5131 cv
255.974 58.5105 255.974 58.5077 255.973 58.5051 cv
255.971 58.4996 255.969 58.4939 255.967 58.4884 cv
255.966 58.4854 255.965 58.4826 255.964 58.4796 cv
255.963 58.474 255.961 58.4682 255.959 58.4625 cv
255.958 58.459 255.957 58.4553 255.956 58.4517 cv
255.954 58.4481 255.953 58.4444 255.952 58.4408 cv
255.951 58.4368 255.95 58.4331 255.949 58.4292 cv
255.947 58.4258 255.946 58.4225 255.945 58.4191 cv
255.943 58.4115 255.941 58.4039 255.938 58.3963 cv
255.938 58.3944 255.937 58.3924 255.937 58.3905 cv
255.935 58.3852 255.933 58.38 255.932 58.3747 cv
255.931 58.374 255.931 58.3734 255.931 58.3727 cv
255.631 57.3877 255.526 56.3873 255.594 55.4146 cv
255.9 55.4146 li
255.872 56.3628 256.009 57.3318 256.331 58.2834 cv
257.489 61.7119 260.688 63.8743 264.117 63.874 cv
264.989 63.8739 265.876 63.734 266.748 63.4394 cv
267.64 63.1381 268.442 62.6951 269.145 62.1475 cv
269.147 62.146 269.149 62.1445 269.151 62.1429 cv
269.259 62.0585 269.365 61.9716 269.468 61.8824 cv
269.582 61.7842 269.693 61.6833 269.8 61.5797 cv
269.822 61.5593 269.843 61.5389 269.863 61.5183 cv
269.743 61.6502 269.619 61.7784 269.49 61.9027 cv
269.392 61.997 269.292 62.089 269.189 62.1786 cv
268.42 62.8494 267.513 63.3875 266.492 63.7425 cv
266.489 63.7435 266.486 63.7445 266.483 63.7455 cv
266.479 63.747 266.474 63.7485 266.47 63.75 cv
266.464 63.752 266.459 63.7539 266.453 63.7558 cv
266.451 63.7566 266.448 63.7575 266.446 63.7583 cv
266.439 63.7607 266.432 63.7631 266.425 63.7655 cv
265.553 64.06 264.666 64.2 263.795 64.2001 cv
263.794 64.2001 263.793 64.2001 263.793 64.2001 cv
263.793 64.2001 li
.909804 .756863 .576471 rgb
f
272.767 55.4146 mo
271.995 55.4146 li
271.951 54.7815 271.833 54.1435 271.634 53.5128 cv
271.633 53.5107 271.633 53.5083 271.632 53.5062 cv
271.631 53.5015 271.629 53.4967 271.628 53.4919 cv
271.627 53.489 271.626 53.4861 271.625 53.4831 cv
271.623 53.4789 271.622 53.4742 271.621 53.47 cv
271.619 53.4664 271.618 53.4632 271.617 53.4596 cv
271.615 53.4536 271.613 53.4471 271.611 53.4411 cv
271.61 53.4361 271.608 53.4316 271.606 53.4266 cv
271.605 53.4234 271.604 53.4202 271.603 53.4171 cv
271.602 53.4125 271.6 53.4078 271.599 53.4032 cv
271.598 53.4001 271.597 53.3969 271.596 53.3938 cv
271.594 53.3888 271.592 53.384 271.591 53.379 cv
271.59 53.3764 271.589 53.3736 271.588 53.371 cv
271.586 53.3635 271.583 53.3557 271.58 53.3482 cv
271.58 53.3482 li
271.575 53.3319 271.569 53.3157 271.564 53.2995 cv
271.562 53.2932 271.559 53.2868 271.557 53.2805 cv
270.381 49.8936 267.205 47.7603 263.802 47.7576 cv
263.799 47.7576 263.797 47.7576 263.795 47.7576 cv
263.795 47.7576 li
263.795 47.7576 li
263.794 47.7576 263.794 47.7576 263.793 47.7576 cv
262.921 47.7577 262.035 47.8977 261.163 48.1922 cv
261.163 48.1922 li
261.154 48.1952 261.146 48.1982 261.137 48.2013 cv
261.136 48.2016 261.135 48.202 261.134 48.2023 cv
257.911 49.3047 255.814 52.2134 255.592 55.4146 cv
254.82 55.4146 li
255.047 51.8811 257.358 48.6576 260.915 47.4556 cv
261.87 47.1331 262.848 46.976 263.816 46.976 cv
266.157 46.976 268.436 47.8958 270.161 49.6209 cv
271.144 50.6039 271.869 51.774 272.317 53.0991 cv
272.573 53.8582 272.717 54.6358 272.767 55.4146 cv
.65098 .694118 .752941 rgb
f
271.995 55.4146 mo
271.995 55.4146 li
271.951 54.7814 271.833 54.1438 271.634 53.5128 cv
271.833 54.1435 271.951 54.7815 271.995 55.4146 cv
271.329 55.4146 mo
264.597 55.4146 li
258.519 49.7396 li
259.132 49.3154 259.809 48.9655 260.55 48.7151 cv
261.422 48.4205 262.31 48.2805 263.182 48.2805 cv
266.611 48.2805 269.809 50.4427 270.968 53.8711 cv
271.14 54.3826 271.26 54.8991 271.329 55.4146 cv
261.945 55.4146 mo
255.9 55.4146 li
255.946 53.8531 256.44 52.3484 257.295 51.0733 cv
261.945 55.4146 li
255.594 55.4146 mo
255.592 55.4146 li
255.814 52.2134 257.911 49.3047 261.134 48.2023 cv
259.989 48.594 258.992 49.2191 258.165 49.9988 cv
258.215 49.9597 258.267 49.9212 258.318 49.8832 cv
258.172 50.0169 258.028 50.1561 257.89 50.3038 cv
257.842 50.3558 257.794 50.4085 257.748 50.4617 cv
257.844 50.343 257.944 50.2267 258.048 50.1133 cv
256.617 51.5174 255.736 53.4078 255.594 55.4146 cv
271.632 53.5062 mo
271.631 53.5014 271.629 53.4967 271.628 53.4919 cv
271.629 53.4967 271.631 53.5015 271.632 53.5062 cv
271.625 53.4831 mo
271.623 53.4788 271.622 53.4743 271.621 53.47 cv
271.622 53.4742 271.623 53.4789 271.625 53.4831 cv
271.617 53.4596 mo
271.615 53.4536 271.613 53.4471 271.611 53.4411 cv
271.613 53.4471 271.615 53.4536 271.617 53.4596 cv
271.606 53.4266 mo
271.605 53.4234 271.604 53.4202 271.603 53.4171 cv
271.604 53.4202 271.605 53.4234 271.606 53.4266 cv
271.599 53.4032 mo
271.598 53.4001 271.597 53.3969 271.596 53.3938 cv
271.597 53.3969 271.598 53.4001 271.599 53.4032 cv
271.591 53.379 mo
271.59 53.3763 271.589 53.3737 271.588 53.371 cv
271.589 53.3736 271.59 53.3764 271.591 53.379 cv
271.58 53.3482 mo
271.58 53.3482 li
271.575 53.3319 271.569 53.3157 271.564 53.2995 cv
271.569 53.3157 271.575 53.3319 271.58 53.3482 cv
271.58 53.3482 li
271.557 53.2805 mo
270.381 49.8939 267.205 47.7606 263.802 47.7576 cv
267.205 47.7603 270.381 49.8936 271.557 53.2805 cv
261.137 48.2013 mo
261.146 48.1982 261.154 48.1952 261.163 48.1922 cv
261.163 48.1922 li
261.163 48.1922 li
261.154 48.1952 261.146 48.1982 261.137 48.2013 cv
263.793 47.7576 mo
263.794 47.7576 263.794 47.7576 263.795 47.7576 cv
263.795 47.7576 li
263.794 47.7576 263.794 47.7576 263.793 47.7576 cv
.972549 .905882 .811765 rgb
f
264.597 55.4146 mo
264.551 55.4146 li
258.493 49.7579 li
258.502 49.7518 258.51 49.7457 258.519 49.7396 cv
264.597 55.4146 li
264.179 55.4146 mo
262.541 55.4146 li
257.533 50.738 li
257.602 50.6445 257.674 50.5523 257.748 50.4617 cv
257.794 50.4085 257.842 50.3558 257.89 50.3038 cv
258.028 50.1561 258.172 50.0169 258.318 49.8832 cv
258.369 49.8456 258.421 49.8086 258.473 49.772 cv
258.299 49.9247 li
264.179 55.4146 li
.956863 .886274 .796078 rgb
f
262.541 55.4146 mo
261.945 55.4146 li
257.295 51.0733 li
257.372 50.9596 257.451 50.8478 257.533 50.738 cv
262.541 55.4146 li
.929412 .839216 .733333 rgb
f
264.551 55.4146 mo
264.179 55.4146 li
258.299 49.9247 li
258.473 49.772 li
258.479 49.7673 258.486 49.7626 258.493 49.7579 cv
264.551 55.4146 li
f
271.634 53.5128 mo
271.633 53.5104 271.633 53.5086 271.632 53.5062 cv
271.633 53.5083 271.633 53.5107 271.634 53.5128 cv
271.628 53.4919 mo
271.627 53.4891 271.626 53.486 271.625 53.4831 cv
271.626 53.4861 271.627 53.489 271.628 53.4919 cv
271.621 53.47 mo
271.619 53.4663 271.618 53.4633 271.617 53.4596 cv
271.618 53.4632 271.619 53.4664 271.621 53.47 cv
271.611 53.4411 mo
271.61 53.4361 271.608 53.4316 271.606 53.4266 cv
271.608 53.4316 271.61 53.4361 271.611 53.4411 cv
271.603 53.4171 mo
271.602 53.4126 271.6 53.4077 271.599 53.4032 cv
271.6 53.4078 271.602 53.4125 271.603 53.4171 cv
271.596 53.3938 mo
271.594 53.3888 271.592 53.384 271.591 53.379 cv
271.592 53.384 271.594 53.3888 271.596 53.3938 cv
271.588 53.371 mo
271.586 53.3634 271.583 53.3558 271.58 53.3482 cv
271.583 53.3557 271.586 53.3635 271.588 53.371 cv
271.564 53.2995 mo
271.562 53.2932 271.559 53.2868 271.557 53.2805 cv
271.559 53.2868 271.562 53.2932 271.564 53.2995 cv
261.134 48.2023 mo
261.135 48.202 261.136 48.2016 261.137 48.2013 cv
261.136 48.2016 261.135 48.2019 261.134 48.2023 cv
261.163 48.1922 mo
262.035 47.8977 262.921 47.7577 263.793 47.7576 cv
262.922 47.7578 262.035 47.8978 261.163 48.1922 cv
263.802 47.7576 mo
263.799 47.7576 263.797 47.7576 263.795 47.7576 cv
263.795 47.7576 li
263.797 47.7576 263.799 47.7576 263.802 47.7576 cv
.941176 .945098 .956863 rgb
f
271.995 55.4146 mo
271.329 55.4146 li
271.26 54.8991 271.14 54.3826 270.968 53.8711 cv
269.809 50.4427 266.611 48.2805 263.182 48.2805 cv
262.31 48.2805 261.422 48.4205 260.55 48.7151 cv
259.809 48.9655 259.132 49.3154 258.519 49.7396 cv
258.5 49.7215 li
258.439 49.7746 258.378 49.8284 258.318 49.8832 cv
258.267 49.9212 258.215 49.9597 258.165 49.9988 cv
258.992 49.2191 259.989 48.594 261.134 48.2023 cv
261.135 48.2019 261.136 48.2016 261.137 48.2013 cv
261.146 48.1982 261.154 48.1952 261.163 48.1922 cv
261.163 48.1922 li
262.035 47.8978 262.922 47.7578 263.793 47.7576 cv
263.794 47.7576 263.794 47.7576 263.795 47.7576 cv
263.797 47.7576 263.799 47.7576 263.802 47.7576 cv
267.205 47.7606 270.381 49.8939 271.557 53.2805 cv
271.559 53.2868 271.562 53.2932 271.564 53.2995 cv
271.569 53.3157 271.575 53.3319 271.58 53.3482 cv
271.58 53.3482 li
271.583 53.3558 271.586 53.3634 271.588 53.371 cv
271.589 53.3737 271.59 53.3763 271.591 53.379 cv
271.592 53.384 271.594 53.3888 271.596 53.3938 cv
271.597 53.3969 271.598 53.4001 271.599 53.4032 cv
271.6 53.4077 271.602 53.4126 271.603 53.4171 cv
271.604 53.4202 271.605 53.4234 271.606 53.4266 cv
271.608 53.4316 271.61 53.4361 271.611 53.4411 cv
271.613 53.4471 271.615 53.4536 271.617 53.4596 cv
271.618 53.4633 271.619 53.4663 271.621 53.47 cv
271.622 53.4743 271.623 53.4788 271.625 53.4831 cv
271.626 53.486 271.627 53.4891 271.628 53.4919 cv
271.629 53.4967 271.631 53.5014 271.632 53.5062 cv
271.633 53.5086 271.633 53.5104 271.634 53.5128 cv
271.833 54.1438 271.951 54.7814 271.995 55.4146 cv
.972549 .968627 .964706 rgb
f
258.318 49.8832 mo
258.378 49.8284 258.439 49.7746 258.5 49.7215 cv
258.519 49.7396 li
258.51 49.7457 258.502 49.7518 258.493 49.7579 cv
258.491 49.756 li
258.473 49.772 li
258.421 49.8086 258.369 49.8456 258.318 49.8832 cv
.972549 .964706 .960784 rgb
f
258.473 49.772 mo
258.491 49.756 li
258.493 49.7579 li
258.486 49.7626 258.479 49.7673 258.473 49.772 cv
.968627 .960784 .952941 rgb
f
255.9 55.4146 mo
255.594 55.4146 li
255.736 53.4078 256.617 51.5174 258.048 50.1133 cv
257.944 50.2267 257.844 50.343 257.748 50.4617 cv
257.674 50.5523 257.602 50.6445 257.533 50.738 cv
257.451 50.8478 257.372 50.9596 257.295 51.0733 cv
256.44 52.3484 255.946 53.8531 255.9 55.4146 cv
.929412 .839216 .733333 rgb
f
240.573 59.2294 mo
239.928 56 li
239.986 55.5309 240.003 55.0546 239.978 54.5747 cv
240.747 54.5746 li
240.709 53.7572 240.566 52.9323 240.291 52.1193 cv
239.908 50.9857 239.322 49.9657 238.546 49.079 cv
238.27 47.6996 li
238.411 47.8256 238.55 47.9563 238.685 48.0915 cv
239.753 49.1593 240.541 50.4313 241.027 51.8705 cv
241.876 54.3847 241.641 57.0078 240.573 59.2294 cv
.447059 .517647 .607843 rgb
f
231.744 64.7795 mo
229.2 64.7795 226.726 63.7803 224.852 61.9063 cv
223.784 60.8385 222.995 59.5665 222.509 58.1273 cv
221.673 55.6535 221.851 53.003 223.009 50.6635 cv
224.167 48.3239 226.167 46.5751 228.641 45.7402 cv
229.678 45.3896 230.742 45.2186 231.794 45.2186 cv
234.154 45.2186 236.453 46.0786 238.27 47.6996 cv
238.546 49.079 li
238.414 48.9292 238.278 48.7831 238.135 48.641 cv
236.411 46.9162 234.133 45.9965 231.792 45.9965 cv
230.824 45.9965 229.845 46.1538 228.889 46.4766 cv
226.612 47.2448 224.772 48.8545 223.705 51.0082 cv
223.145 52.1398 222.842 53.3504 222.784 54.5748 cv
223.558 54.5748 li
223.51 55.5035 223.62 56.4552 223.905 57.3926 cv
223.906 57.3933 223.906 57.3939 223.906 57.3946 cv
223.908 57.3999 223.909 57.4052 223.911 57.4104 cv
223.911 57.4123 223.912 57.4143 223.913 57.4162 cv
223.915 57.4239 223.917 57.4314 223.92 57.439 cv
223.921 57.4424 223.922 57.4457 223.923 57.4491 cv
223.924 57.453 223.925 57.4568 223.927 57.4607 cv
223.928 57.4643 223.929 57.468 223.93 57.4716 cv
223.931 57.475 223.932 57.479 223.933 57.4825 cv
223.935 57.4881 223.937 57.4939 223.939 57.4995 cv
223.94 57.5024 223.941 57.5054 223.942 57.5083 cv
223.943 57.5138 223.945 57.5196 223.947 57.525 cv
223.948 57.5277 223.949 57.5304 223.95 57.533 cv
223.951 57.5385 223.953 57.5436 223.955 57.5491 cv
223.956 57.5512 223.956 57.5536 223.957 57.5557 cv
223.959 57.5631 223.962 57.5702 223.964 57.5775 cv
223.965 57.5794 223.965 57.5812 223.966 57.5831 cv
223.968 57.5889 223.97 57.5947 223.972 57.6005 cv
223.973 57.6026 223.973 57.605 223.974 57.6071 cv
223.977 57.6146 223.979 57.622 223.982 57.6296 cv
223.982 57.6296 li
225.14 61.058 228.338 63.2201 231.767 63.2201 cv
231.767 63.2201 li
231.767 63.2201 li
232.64 63.2201 233.527 63.0801 234.399 62.7855 cv
234.406 62.7831 234.413 62.7807 234.42 62.7783 cv
234.423 62.7774 234.425 62.7766 234.428 62.7757 cv
234.433 62.7738 234.439 62.7719 234.444 62.77 cv
234.449 62.7684 234.453 62.7669 234.458 62.7654 cv
234.46 62.7644 234.463 62.7634 234.466 62.7625 cv
237.521 61.7017 239.556 59.014 239.928 56 cv
240.573 59.2294 li
239.472 61.5192 237.488 63.3825 234.896 64.2583 cv
233.859 64.6087 232.795 64.7795 231.744 64.7795 cv
.564706 .639216 .72549 rgb
f
231.767 63.2201 mo
228.338 63.2201 225.14 61.058 223.982 57.6296 cv
225.14 61.0578 228.339 63.22 231.767 63.2201 cv
231.767 63.2201 li
232.091 62.8938 mo
230.835 62.8939 229.61 62.6037 228.505 62.0677 cv
233.143 54.5747 li
239.321 54.5747 li
239.605 57.0184 238.764 59.4282 237.119 61.1676 cv
236.416 61.715 235.614 62.1579 234.722 62.4592 cv
233.85 62.7538 232.963 62.8938 232.091 62.8938 cv
234.42 62.7783 mo
234.423 62.7774 234.425 62.7765 234.428 62.7757 cv
234.425 62.7766 234.423 62.7774 234.42 62.7783 cv
234.444 62.77 mo
234.449 62.7684 234.453 62.7669 234.458 62.7654 cv
234.453 62.7669 234.449 62.7684 234.444 62.77 cv
234.466 62.7625 mo
235.804 62.2974 236.945 61.5184 237.838 60.5383 cv
237.817 60.5588 237.796 60.5793 237.775 60.5996 cv
239.275 58.9894 240.093 56.8155 239.978 54.5747 cv
239.978 54.5747 li
240.003 55.0546 239.986 55.5309 239.928 56 cv
239.556 59.014 237.521 61.7017 234.466 62.7625 cv
226.972 61.104 mo
225.776 60.1535 224.831 58.8588 224.305 57.3033 cv
223.999 56.3986 223.861 55.4781 223.872 54.5748 cv
231.014 54.5747 li
226.972 61.104 li
223.974 57.6071 mo
223.973 57.605 223.973 57.6026 223.972 57.6005 cv
223.973 57.6026 223.973 57.605 223.974 57.6071 cv
223.966 57.5831 mo
223.965 57.5812 223.965 57.5794 223.964 57.5775 cv
223.965 57.5794 223.965 57.5812 223.966 57.5831 cv
223.957 57.5557 mo
223.956 57.5536 223.956 57.5512 223.955 57.5491 cv
223.956 57.5512 223.956 57.5537 223.957 57.5557 cv
223.95 57.533 mo
223.949 57.5304 223.948 57.5277 223.947 57.525 cv
223.948 57.5277 223.949 57.5304 223.95 57.533 cv
223.942 57.5083 mo
223.941 57.5054 223.94 57.5024 223.939 57.4995 cv
223.94 57.5026 223.941 57.5053 223.942 57.5083 cv
223.933 57.4825 mo
223.932 57.479 223.931 57.475 223.93 57.4716 cv
223.931 57.4752 223.932 57.4789 223.933 57.4825 cv
223.927 57.4607 mo
223.925 57.4568 223.924 57.453 223.923 57.4491 cv
223.924 57.4531 223.925 57.4568 223.927 57.4607 cv
223.92 57.439 mo
223.917 57.4314 223.915 57.4239 223.913 57.4162 cv
223.915 57.4238 223.917 57.4315 223.92 57.439 cv
223.911 57.4104 mo
223.909 57.4052 223.908 57.3999 223.906 57.3946 cv
223.908 57.3999 223.909 57.4051 223.911 57.4104 cv
223.905 57.3926 mo
223.62 56.4552 223.51 55.5035 223.558 54.5748 cv
223.56 54.5748 li
223.51 55.5032 223.619 56.4548 223.905 57.3926 cv
.956863 .960784 .968627 rgb
f
228.142 61.8806 mo
227.815 61.7016 227.501 61.5006 227.2 61.2785 cv
231.349 54.5747 li
232.664 54.5747 li
228.142 61.8806 li
226.997 61.1236 mo
226.989 61.1171 226.981 61.1106 226.972 61.104 cv
231.014 54.5747 li
231.051 54.5747 li
226.997 61.1236 li
.909804 .92549 .929412 rgb
f
228.505 62.0677 mo
228.382 62.0083 228.262 61.946 228.142 61.8806 cv
232.664 54.5747 li
233.143 54.5747 li
228.505 62.0677 li
.811765 .831372 .854902 rgb
f
227.2 61.2785 mo
227.132 61.228 227.064 61.1763 226.997 61.1236 cv
231.051 54.5747 li
231.349 54.5747 li
227.2 61.2785 li
f
237.119 61.1676 mo
238.764 59.4282 239.605 57.0184 239.321 54.5747 cv
239.978 54.5747 li
240.093 56.8155 239.275 58.9894 237.775 60.5996 cv
237.567 60.7993 237.348 60.9889 237.119 61.1676 cv
.980392 .980392 .984314 rgb
f
231.767 63.2201 mo
231.767 63.2201 li
228.339 63.22 225.14 61.0578 223.982 57.6296 cv
223.982 57.6296 li
223.979 57.622 223.977 57.6146 223.974 57.6071 cv
223.973 57.605 223.973 57.6026 223.972 57.6005 cv
223.97 57.5947 223.968 57.5889 223.966 57.5831 cv
223.965 57.5812 223.965 57.5794 223.964 57.5775 cv
223.962 57.5702 223.959 57.5631 223.957 57.5557 cv
223.956 57.5537 223.956 57.5512 223.955 57.5491 cv
223.953 57.5436 223.951 57.5385 223.95 57.533 cv
223.949 57.5304 223.948 57.5277 223.947 57.525 cv
223.945 57.5196 223.943 57.5138 223.942 57.5083 cv
223.941 57.5053 223.94 57.5026 223.939 57.4995 cv
223.937 57.4939 223.935 57.4881 223.933 57.4825 cv
223.932 57.4789 223.931 57.4752 223.93 57.4716 cv
223.929 57.468 223.928 57.4643 223.927 57.4607 cv
223.925 57.4568 223.924 57.4531 223.923 57.4491 cv
223.922 57.4457 223.921 57.4424 223.92 57.439 cv
223.917 57.4315 223.915 57.4238 223.913 57.4162 cv
223.912 57.4143 223.911 57.4123 223.911 57.4104 cv
223.909 57.4051 223.908 57.3999 223.906 57.3946 cv
223.906 57.3939 223.906 57.3933 223.905 57.3926 cv
223.619 56.4548 223.51 55.5032 223.56 54.5748 cv
223.872 54.5748 li
223.861 55.4781 223.999 56.3986 224.305 57.3033 cv
224.831 58.8588 225.776 60.1535 226.972 61.104 cv
226.981 61.1106 226.989 61.1171 226.997 61.1236 cv
227.064 61.1763 227.132 61.228 227.2 61.2785 cv
227.501 61.5006 227.815 61.7016 228.142 61.8806 cv
228.262 61.946 228.382 62.0083 228.505 62.0677 cv
229.61 62.6037 230.835 62.8939 232.091 62.8938 cv
232.963 62.8938 233.85 62.7538 234.722 62.4592 cv
235.614 62.1579 236.416 61.715 237.119 61.1676 cv
237.348 60.9889 237.567 60.7993 237.775 60.5996 cv
237.796 60.5793 237.817 60.5588 237.838 60.5383 cv
236.945 61.5184 235.804 62.2974 234.466 62.7625 cv
234.463 62.7634 234.46 62.7644 234.458 62.7654 cv
234.453 62.7669 234.449 62.7684 234.444 62.77 cv
234.439 62.7719 234.433 62.7738 234.428 62.7757 cv
234.425 62.7765 234.423 62.7774 234.42 62.7783 cv
234.413 62.7807 234.406 62.7831 234.399 62.7855 cv
233.527 63.0801 232.64 63.2201 231.767 63.2201 cv
.811765 .831372 .854902 rgb
f
239.978 54.5747 mo
239.946 53.9549 239.842 53.3301 239.662 52.7108 cv
239.662 52.7096 239.662 52.708 239.661 52.7068 cv
239.66 52.7012 239.658 52.6958 239.656 52.6902 cv
239.656 52.6884 239.655 52.6863 239.655 52.6844 cv
239.65 52.6684 239.645 52.6524 239.64 52.6363 cv
239.639 52.6328 239.638 52.6291 239.637 52.6255 cv
239.636 52.6218 239.635 52.618 239.634 52.6143 cv
239.632 52.6101 239.631 52.6059 239.63 52.6017 cv
239.629 52.5983 239.628 52.595 239.627 52.5916 cv
239.625 52.5863 239.624 52.5813 239.622 52.576 cv
239.621 52.5737 239.621 52.5714 239.62 52.569 cv
239.618 52.5615 239.615 52.5539 239.613 52.5464 cv
239.612 52.5443 239.612 52.5423 239.611 52.5402 cv
239.609 52.5344 239.607 52.5288 239.605 52.523 cv
239.605 52.5206 239.604 52.5178 239.603 52.5155 cv
239.601 52.51 239.599 52.5042 239.598 52.4988 cv
239.597 52.4965 239.596 52.4944 239.596 52.492 cv
239.593 52.4849 239.591 52.4779 239.589 52.4708 cv
239.589 52.4703 239.588 52.4693 239.588 52.4688 cv
239.586 52.4611 239.583 52.4532 239.581 52.4455 cv
239.58 52.4436 239.579 52.4415 239.579 52.4397 cv
239.577 52.4338 239.575 52.428 239.573 52.4221 cv
239.572 52.4198 239.571 52.4173 239.57 52.4149 cv
239.569 52.4093 239.567 52.4036 239.565 52.3979 cv
239.564 52.3956 239.563 52.3938 239.563 52.3914 cv
239.56 52.3837 239.557 52.3759 239.555 52.3682 cv
239.555 52.3682 li
239.55 52.3543 239.545 52.3405 239.541 52.3267 cv
239.537 52.3162 239.534 52.306 239.53 52.2956 cv
239.364 51.8185 239.158 51.3657 238.917 50.9409 cv
238.546 49.079 li
239.322 49.9657 239.908 50.9857 240.291 52.1193 cv
240.566 52.9323 240.709 53.7572 240.747 54.5746 cv
239.978 54.5747 li
.65098 .694118 .752941 rgb
f
222.784 54.5748 mo
222.842 53.3504 223.145 52.1398 223.705 51.0082 cv
224.772 48.8545 226.612 47.2448 228.889 46.4766 cv
229.845 46.1538 230.824 45.9965 231.792 45.9965 cv
234.133 45.9965 236.411 46.9162 238.135 48.641 cv
238.278 48.7831 238.414 48.9292 238.546 49.079 cv
238.917 50.9409 li
238.386 50.0028 237.686 49.1982 236.87 48.5533 cv
236.889 48.5215 li
236.889 48.5215 li
236.639 48.3215 236.38 48.1293 236.1 47.9564 cv
235.858 47.8066 235.61 47.6758 235.359 47.5541 cv
235.335 47.5938 li
234.237 47.065 233.022 46.7785 231.776 46.7775 cv
231.773 46.7775 231.772 46.7775 231.769 46.7775 cv
231.769 46.7775 li
231.769 46.7775 li
231.769 46.7775 231.768 46.7775 231.767 46.7775 cv
230.896 46.7777 230.009 46.9176 229.138 47.2121 cv
229.138 47.2121 li
229.129 47.2151 229.12 47.2182 229.111 47.2212 cv
229.11 47.2214 229.11 47.2217 229.109 47.2219 cv
225.838 48.3398 223.727 51.3182 223.558 54.5748 cv
222.784 54.5748 li
.721569 .768627 .823529 rgb
f
223.558 54.5748 mo
223.727 51.3182 225.838 48.3398 229.109 47.2219 cv
227.964 47.6136 226.966 48.2388 226.139 49.0187 cv
226.841 48.4771 227.638 48.0347 228.525 47.735 cv
229.397 47.4405 230.284 47.3004 231.156 47.3004 cv
232.489 47.3004 233.786 47.6268 234.943 48.2272 cv
231.014 54.5747 li
223.872 54.5748 li
223.897 52.5496 224.676 50.6111 226.022 49.1332 cv
224.558 50.5699 223.669 52.516 223.56 54.5748 cv
223.558 54.5748 li
233.143 54.5747 mo
236.449 49.2329 li
237.563 50.1687 238.442 51.4119 238.942 52.8909 cv
239.13 53.4488 239.255 54.0126 239.321 54.5747 cv
233.143 54.5747 li
239.978 54.5747 mo
239.946 53.955 239.842 53.3302 239.662 52.7108 cv
239.842 53.3301 239.946 53.9549 239.978 54.5747 cv
239.978 54.5747 li
239.661 52.7068 mo
239.66 52.7011 239.658 52.6959 239.656 52.6902 cv
239.658 52.6958 239.66 52.7012 239.661 52.7068 cv
239.655 52.6844 mo
239.65 52.6683 239.645 52.6524 239.64 52.6363 cv
239.645 52.6524 239.65 52.6684 239.655 52.6844 cv
239.637 52.6255 mo
239.636 52.6218 239.635 52.6181 239.634 52.6143 cv
239.635 52.618 239.636 52.6218 239.637 52.6255 cv
239.63 52.6017 mo
239.629 52.5984 239.628 52.5949 239.627 52.5916 cv
239.628 52.595 239.629 52.5983 239.63 52.6017 cv
239.622 52.576 mo
239.621 52.5737 239.621 52.5713 239.62 52.569 cv
239.621 52.5714 239.621 52.5737 239.622 52.576 cv
239.613 52.5464 mo
239.612 52.5443 239.612 52.5423 239.611 52.5402 cv
239.612 52.5423 239.612 52.5443 239.613 52.5464 cv
239.605 52.523 mo
239.605 52.5205 239.604 52.518 239.603 52.5155 cv
239.604 52.5178 239.605 52.5206 239.605 52.523 cv
239.598 52.4988 mo
239.597 52.4965 239.596 52.4943 239.596 52.492 cv
239.596 52.4944 239.597 52.4965 239.598 52.4988 cv
239.589 52.4708 mo
239.589 52.4702 239.588 52.4694 239.588 52.4688 cv
239.588 52.4693 239.589 52.4703 239.589 52.4708 cv
239.581 52.4455 mo
239.58 52.4434 239.579 52.4417 239.579 52.4397 cv
239.579 52.4415 239.58 52.4436 239.581 52.4455 cv
239.573 52.4221 mo
239.572 52.4198 239.571 52.4172 239.57 52.4149 cv
239.571 52.4173 239.572 52.4198 239.573 52.4221 cv
239.565 52.3979 mo
239.564 52.3957 239.563 52.3937 239.563 52.3914 cv
239.563 52.3938 239.564 52.3956 239.565 52.3979 cv
239.555 52.3682 mo
239.555 52.3682 li
239.55 52.3543 239.545 52.3405 239.541 52.3267 cv
239.545 52.3405 239.55 52.3543 239.555 52.3682 cv
239.555 52.3682 li
239.53 52.2956 mo
238.997 50.765 238.056 49.4903 236.87 48.5534 cv
236.87 48.5533 li
237.686 49.1982 238.386 50.0028 238.917 50.9409 cv
239.158 51.3657 239.364 51.8185 239.53 52.2956 cv
235.335 47.5939 mo
234.237 47.065 233.022 46.7786 231.776 46.7775 cv
233.022 46.7785 234.237 47.065 235.335 47.5938 cv
235.335 47.5939 li
229.111 47.2212 mo
229.12 47.2182 229.129 47.2151 229.138 47.2121 cv
229.138 47.2121 li
229.138 47.2121 li
229.129 47.2151 229.12 47.2182 229.111 47.2212 cv
231.767 46.7775 mo
231.768 46.7775 231.769 46.7775 231.769 46.7775 cv
231.769 46.7775 li
231.769 46.7775 231.768 46.7775 231.767 46.7775 cv
.956863 .960784 .968627 rgb
f
231.014 54.5747 mo
234.943 48.2272 li
234.952 48.2319 234.962 48.237 234.971 48.2417 cv
231.051 54.5747 li
231.014 54.5747 li
231.349 54.5747 mo
235.194 48.3633 li
235.519 48.5461 235.831 48.7514 236.129 48.9772 cv
232.664 54.5747 li
231.349 54.5747 li
236.889 48.5215 mo
236.783 48.4368 236.674 48.3545 236.564 48.2735 cv
236.543 48.3082 li
236.239 48.0915 235.921 47.8959 235.591 47.7227 cv
235.606 47.6979 li
235.377 47.5851 li
235.363 47.6076 li
235.354 47.6031 235.344 47.5984 235.335 47.5939 cv
235.335 47.5938 li
235.359 47.5541 li
235.61 47.6758 235.858 47.8066 236.1 47.9564 cv
236.38 48.1293 236.639 48.3215 236.889 48.5215 cv
236.889 48.5215 li
.929412 .941176 .945098 rgb
f
232.664 54.5747 mo
236.129 48.9772 li
236.238 49.0597 236.344 49.1448 236.449 49.2329 cv
233.143 54.5747 li
232.664 54.5747 li
236.87 48.5534 mo
236.763 48.4688 236.654 48.3872 236.543 48.3082 cv
236.564 48.2735 li
236.674 48.3545 236.783 48.4368 236.889 48.5215 cv
236.889 48.5215 li
236.87 48.5533 li
236.87 48.5534 li
.870588 .882353 .901961 rgb
f
231.051 54.5747 mo
234.971 48.2417 li
235.046 48.2812 235.12 48.3215 235.194 48.3633 cv
231.349 54.5747 li
231.051 54.5747 li
235.591 47.7227 mo
235.515 47.6832 235.44 47.6448 235.363 47.6076 cv
235.377 47.5851 li
235.606 47.6979 li
235.591 47.7227 li
f
239.662 52.7108 mo
239.662 52.7095 239.662 52.7081 239.661 52.7068 cv
239.662 52.708 239.662 52.7096 239.662 52.7108 cv
239.656 52.6902 mo
239.656 52.6884 239.655 52.6863 239.655 52.6844 cv
239.655 52.6863 239.656 52.6884 239.656 52.6902 cv
239.64 52.6363 mo
239.639 52.6326 239.638 52.6292 239.637 52.6255 cv
239.638 52.6291 239.639 52.6328 239.64 52.6363 cv
239.634 52.6143 mo
239.632 52.6101 239.631 52.6059 239.63 52.6017 cv
239.631 52.6059 239.632 52.6101 239.634 52.6143 cv
239.627 52.5916 mo
239.625 52.5866 239.624 52.581 239.622 52.576 cv
239.624 52.5813 239.625 52.5863 239.627 52.5916 cv
239.62 52.569 mo
239.617 52.5614 239.615 52.554 239.613 52.5464 cv
239.615 52.5539 239.618 52.5615 239.62 52.569 cv
239.611 52.5402 mo
239.609 52.5344 239.607 52.5288 239.605 52.523 cv
239.607 52.5288 239.609 52.5344 239.611 52.5402 cv
239.603 52.5155 mo
239.601 52.5099 239.6 52.5043 239.598 52.4988 cv
239.599 52.5042 239.601 52.51 239.603 52.5155 cv
239.596 52.492 mo
239.593 52.4849 239.591 52.4779 239.589 52.4708 cv
239.591 52.4779 239.593 52.4849 239.596 52.492 cv
239.588 52.4688 mo
239.586 52.4609 239.583 52.4534 239.581 52.4455 cv
239.583 52.4532 239.586 52.4611 239.588 52.4688 cv
239.579 52.4397 mo
239.577 52.4336 239.575 52.4282 239.573 52.4221 cv
239.575 52.428 239.577 52.4338 239.579 52.4397 cv
239.57 52.4149 mo
239.569 52.4094 239.567 52.4035 239.565 52.3979 cv
239.567 52.4036 239.569 52.4093 239.57 52.4149 cv
239.563 52.3914 mo
239.56 52.3838 239.557 52.3758 239.555 52.3682 cv
239.557 52.3759 239.56 52.3837 239.563 52.3914 cv
239.541 52.3267 mo
239.537 52.3162 239.534 52.306 239.53 52.2956 cv
239.534 52.306 239.537 52.3162 239.541 52.3267 cv
.941176 .945098 .956863 rgb
f
239.321 54.5747 mo
239.255 54.0126 239.13 53.4488 238.942 52.8909 cv
238.442 51.4119 237.563 50.1687 236.449 49.2329 cv
236.87 48.5534 li
238.056 49.4903 238.997 50.765 239.53 52.2956 cv
239.534 52.306 239.537 52.3162 239.541 52.3267 cv
239.545 52.3405 239.55 52.3543 239.555 52.3682 cv
239.555 52.3682 li
239.557 52.3758 239.56 52.3838 239.563 52.3914 cv
239.563 52.3937 239.564 52.3957 239.565 52.3979 cv
239.567 52.4035 239.569 52.4094 239.57 52.4149 cv
239.571 52.4172 239.572 52.4198 239.573 52.4221 cv
239.575 52.4282 239.577 52.4336 239.579 52.4397 cv
239.579 52.4417 239.58 52.4434 239.581 52.4455 cv
239.583 52.4534 239.586 52.4609 239.588 52.4688 cv
239.588 52.4694 239.589 52.4702 239.589 52.4708 cv
239.591 52.4779 239.593 52.4849 239.596 52.492 cv
239.596 52.4943 239.597 52.4965 239.598 52.4988 cv
239.6 52.5043 239.601 52.5099 239.603 52.5155 cv
239.604 52.518 239.605 52.5205 239.605 52.523 cv
239.607 52.5288 239.609 52.5344 239.611 52.5402 cv
239.612 52.5423 239.612 52.5443 239.613 52.5464 cv
239.615 52.554 239.617 52.5614 239.62 52.569 cv
239.621 52.5713 239.621 52.5737 239.622 52.576 cv
239.624 52.581 239.625 52.5866 239.627 52.5916 cv
239.628 52.5949 239.629 52.5984 239.63 52.6017 cv
239.631 52.6059 239.632 52.6101 239.634 52.6143 cv
239.635 52.6181 239.636 52.6218 239.637 52.6255 cv
239.638 52.6292 239.639 52.6326 239.64 52.6363 cv
239.645 52.6524 239.65 52.6683 239.655 52.6844 cv
239.655 52.6863 239.656 52.6884 239.656 52.6902 cv
239.658 52.6959 239.66 52.7011 239.661 52.7068 cv
239.662 52.7081 239.662 52.7095 239.662 52.7108 cv
239.842 53.3302 239.946 53.955 239.978 54.5747 cv
239.321 54.5747 li
.972549 .972549 .976471 rgb
f
229.109 47.2219 mo
229.11 47.2217 229.11 47.2214 229.111 47.2212 cv
229.11 47.2214 229.109 47.2217 229.109 47.2219 cv
229.138 47.2121 mo
230.009 46.9176 230.896 46.7777 231.767 46.7775 cv
230.896 46.7777 230.009 46.9177 229.138 47.2121 cv
231.776 46.7775 mo
231.773 46.7775 231.772 46.7775 231.769 46.7775 cv
231.769 46.7775 li
231.772 46.7775 231.773 46.7775 231.776 46.7775 cv
.94902 .952941 .964706 rgb
f
226.139 49.0187 mo
226.966 48.2388 227.964 47.6136 229.109 47.2219 cv
229.109 47.2217 229.11 47.2214 229.111 47.2212 cv
229.12 47.2182 229.129 47.2151 229.138 47.2121 cv
229.138 47.2121 li
230.009 46.9177 230.896 46.7777 231.767 46.7775 cv
231.768 46.7775 231.769 46.7775 231.769 46.7775 cv
231.772 46.7775 231.773 46.7775 231.776 46.7775 cv
233.022 46.7786 234.237 47.065 235.335 47.5939 cv
234.943 48.2272 li
233.786 47.6268 232.489 47.3004 231.156 47.3004 cv
230.284 47.3004 229.397 47.4405 228.525 47.735 cv
227.638 48.0347 226.841 48.4771 226.139 49.0187 cv
.972549 .972549 .976471 rgb
f
236.129 48.9772 mo
235.831 48.7514 235.519 48.5461 235.194 48.3633 cv
235.591 47.7227 li
235.921 47.8959 236.239 48.0915 236.543 48.3082 cv
236.129 48.9772 li
234.971 48.2417 mo
234.962 48.237 234.952 48.2319 234.943 48.2272 cv
235.335 47.5939 li
235.344 47.5984 235.354 47.6031 235.363 47.6076 cv
234.971 48.2417 li
.968627 .968627 .976471 rgb
f
236.449 49.2329 mo
236.344 49.1448 236.238 49.0597 236.129 48.9772 cv
236.543 48.3082 li
236.654 48.3872 236.763 48.4688 236.87 48.5534 cv
236.449 49.2329 li
.960784 .964706 .972549 rgb
f
235.194 48.3633 mo
235.12 48.3215 235.046 48.2812 234.971 48.2417 cv
235.363 47.6076 li
235.44 47.6448 235.515 47.6832 235.591 47.7227 cv
235.194 48.3633 li
f
223.56 54.5748 mo
223.669 52.516 224.558 50.5699 226.022 49.1332 cv
224.676 50.6111 223.897 52.5496 223.872 54.5748 cv
223.56 54.5748 li
.870588 .882353 .901961 rgb
f
248.246 81.2819 mo
247.084 81.2819 245.937 81.0735 244.855 80.6687 cv
244.481 78.7948 li
245.636 79.3951 246.932 79.7219 248.263 79.723 cv
248.266 79.723 248.268 79.723 248.27 79.723 cv
248.27 79.723 li
248.27 79.723 li
248.271 79.723 248.271 79.723 248.272 79.723 cv
249.13 79.7228 250.002 79.5872 250.861 79.3021 cv
250.861 79.3021 li
250.875 79.2975 250.888 79.293 250.902 79.2884 cv
250.909 79.286 250.916 79.2835 250.923 79.2811 cv
250.926 79.2803 250.928 79.2796 250.93 79.2788 cv
250.937 79.2765 250.943 79.2743 250.95 79.272 cv
250.953 79.271 250.956 79.27 250.958 79.269 cv
250.962 79.2676 250.966 79.2663 250.97 79.265 cv
251.408 79.1128 251.825 78.927 252.219 78.7118 cv
252.226 78.7213 li
252.47 78.5874 252.712 78.4445 252.946 78.283 cv
253.216 78.0963 253.466 77.8916 253.706 77.6794 cv
253.706 77.6794 li
253.706 77.6794 li
253.702 77.6735 li
255.427 76.1541 256.449 73.9613 256.491 71.6516 cv
257.26 71.6516 li
257.276 70.6352 257.129 69.6132 256.794 68.622 cv
256.346 67.2968 255.621 66.1267 254.638 65.1436 cv
252.913 63.4186 250.635 62.4988 248.294 62.4988 cv
247.325 62.4988 246.347 62.6559 245.392 62.9784 cv
243.972 63.4583 242.75 64.2602 241.781 65.2756 cv
241.598 64.3618 li
242.585 63.4365 243.78 62.7029 245.143 62.2422 cv
246.18 61.8919 247.244 61.721 248.295 61.721 cv
250.839 61.721 253.314 62.7202 255.187 64.5942 cv
256.255 65.662 257.044 66.934 257.53 68.3733 cv
258.366 70.847 258.188 73.4974 257.03 75.837 cv
255.872 78.1767 253.872 79.9255 251.399 80.7603 cv
250.361 81.111 249.297 81.2819 248.246 81.2819 cv
.447059 .517647 .607843 rgb
f
244.855 80.6687 mo
243.568 80.187 242.373 79.4272 241.354 78.409 cv
240.287 77.3412 239.498 76.0691 239.012 74.6299 cv
237.748 70.8874 238.888 66.9024 241.598 64.3618 cv
241.781 65.2756 li
240.158 66.9739 239.241 69.2692 239.279 71.6516 cv
240.051 71.6516 li
240.065 72.4027 240.183 73.1628 240.414 73.9144 cv
240.414 73.9151 240.415 73.9157 240.415 73.9165 cv
240.418 73.9275 240.422 73.9386 240.425 73.9496 cv
240.425 73.9502 240.425 73.9508 240.426 73.9514 cv
240.427 73.9559 240.428 73.9599 240.43 73.9644 cv
240.431 73.9676 240.432 73.9705 240.433 73.9737 cv
240.434 73.9777 240.435 73.9818 240.436 73.9858 cv
240.438 73.9903 240.439 73.995 240.441 73.9995 cv
240.442 74.004 240.443 74.008 240.445 74.0124 cv
240.447 74.0175 240.448 74.0225 240.45 74.0276 cv
240.451 74.0305 240.452 74.0333 240.453 74.0361 cv
240.454 74.0412 240.456 74.0464 240.458 74.0515 cv
240.458 74.0541 240.459 74.0561 240.46 74.0588 cv
240.462 74.0659 240.465 74.0731 240.467 74.0803 cv
240.468 74.0821 240.468 74.0842 240.469 74.0861 cv
240.471 74.0919 240.473 74.0977 240.475 74.1035 cv
240.475 74.1056 240.476 74.1077 240.477 74.1098 cv
240.479 74.1174 240.482 74.1249 240.484 74.1324 cv
240.499 74.1749 240.514 74.2175 240.529 74.2597 cv
241.252 76.2934 242.699 77.8691 244.481 78.7948 cv
244.855 80.6687 li
.564706 .639216 .72549 rgb
f
248.27 79.723 mo
248.27 79.723 li
248.271 79.723 248.271 79.723 248.272 79.723 cv
248.271 79.723 248.271 79.723 248.27 79.723 cv
248.263 79.723 mo
246.932 79.7219 245.636 79.3951 244.481 78.7948 cv
242.699 77.8691 241.252 76.2934 240.529 74.2597 cv
241.721 77.6119 244.88 79.72 248.263 79.723 cv
248.594 79.3967 mo
245.165 79.397 241.966 77.2347 240.808 73.8062 cv
240.567 73.0925 240.43 72.3688 240.388 71.6516 cv
247.349 71.6516 li
252.136 78.5915 li
251.844 78.7316 251.54 78.8557 251.225 78.9622 cv
250.353 79.2567 249.466 79.3967 248.594 79.3967 cv
250.861 79.3021 mo
250.861 79.3021 li
250.861 79.3021 li
250.923 79.2811 mo
250.925 79.2803 250.928 79.2796 250.93 79.2788 cv
250.928 79.2796 250.926 79.2803 250.923 79.2811 cv
250.95 79.272 mo
250.953 79.271 250.956 79.27 250.958 79.269 cv
250.956 79.27 250.953 79.271 250.95 79.272 cv
250.97 79.265 mo
251.408 79.1127 251.825 78.9268 252.219 78.7112 cv
252.219 78.7118 li
251.825 78.927 251.408 79.1128 250.97 79.265 cv
253.702 77.6735 mo
253.701 77.6713 li
253.926 77.4724 254.14 77.2619 254.341 77.0412 cv
254.32 77.062 254.298 77.0827 254.277 77.1033 cv
255.649 75.6309 256.451 73.687 256.49 71.6516 cv
256.491 71.6516 li
256.449 73.9613 255.427 76.1541 253.702 77.6735 cv
253.667 77.6225 mo
249.548 71.6516 li
255.87 71.6516 li
255.97 73.8729 255.154 76.0244 253.667 77.6225 cv
240.477 74.1098 mo
240.476 74.1077 240.475 74.1056 240.475 74.1035 cv
240.475 74.1056 240.476 74.1078 240.477 74.1098 cv
240.469 74.0861 mo
240.468 74.0842 240.468 74.0821 240.467 74.0803 cv
240.468 74.0821 240.468 74.0842 240.469 74.0861 cv
240.46 74.0588 mo
240.459 74.0561 240.458 74.0541 240.458 74.0515 cv
240.458 74.0539 240.459 74.0563 240.46 74.0588 cv
240.453 74.0361 mo
240.452 74.0333 240.451 74.0305 240.45 74.0276 cv
240.451 74.0304 240.452 74.0333 240.453 74.0361 cv
240.445 74.0124 mo
240.443 74.008 240.442 74.004 240.441 73.9995 cv
240.442 74.0039 240.444 74.0081 240.445 74.0124 cv
240.436 73.9858 mo
240.435 73.9818 240.434 73.9777 240.433 73.9737 cv
240.434 73.9777 240.435 73.9818 240.436 73.9858 cv
240.43 73.9644 mo
240.428 73.9599 240.427 73.9559 240.426 73.9514 cv
240.427 73.9558 240.428 73.9601 240.43 73.9644 cv
240.425 73.9496 mo
240.422 73.9386 240.418 73.9275 240.415 73.9165 cv
240.418 73.9274 240.422 73.9387 240.425 73.9496 cv
240.414 73.9144 mo
240.183 73.1628 240.065 72.4027 240.051 71.6516 cv
240.053 71.6516 li
240.066 72.4022 240.183 73.1627 240.414 73.9144 cv
.980392 .870588 .709804 rgb
f
252.226 78.7213 mo
252.219 78.7118 li
252.219 78.7112 li
252.635 78.4836 253.025 78.223 253.387 77.934 cv
253.394 77.9431 li
253.5 77.8567 253.604 77.7692 253.706 77.6794 cv
253.466 77.8916 253.216 78.0963 252.946 78.283 cv
252.712 78.4445 252.47 78.5874 252.226 78.7213 cv
252.136 78.5915 mo
247.349 71.6516 li
247.387 71.6516 li
252.165 78.5777 li
252.156 78.5823 252.146 78.5869 252.136 78.5915 cv
252.394 78.4623 mo
247.696 71.6516 li
249.054 71.6516 li
253.347 77.8756 li
253.046 78.0908 252.728 78.2872 252.394 78.4623 cv
.956863 .839216 .682353 rgb
f
253.394 77.9431 mo
253.387 77.934 li
253.494 77.8489 253.599 77.7613 253.701 77.6713 cv
253.706 77.6794 li
253.706 77.6794 li
253.604 77.7692 253.5 77.8567 253.394 77.9431 cv
253.347 77.8756 mo
249.054 71.6516 li
249.548 71.6516 li
253.667 77.6225 li
253.652 77.6386 253.637 77.6549 253.622 77.6708 cv
253.532 77.7408 253.44 77.8091 253.347 77.8756 cv
.909804 .756863 .576471 rgb
f
252.165 78.5777 mo
247.387 71.6516 li
247.696 71.6516 li
252.394 78.4623 li
252.318 78.5018 252.242 78.5403 252.165 78.5777 cv
f
253.673 77.6308 mo
253.667 77.6225 li
255.154 76.0244 255.97 73.8729 255.87 71.6516 cv
256.49 71.6516 li
256.451 73.687 255.649 75.6309 254.277 77.1033 cv
254.085 77.2879 253.883 77.464 253.673 77.6308 cv
.984314 .972549 .960784 rgb
f
253.622 77.6708 mo
253.637 77.6549 253.652 77.6386 253.667 77.6225 cv
253.673 77.6308 li
253.656 77.6442 253.639 77.6575 253.622 77.6708 cv
.976471 .960784 .945098 rgb
f
248.27 79.723 mo
248.268 79.723 248.266 79.723 248.263 79.723 cv
244.88 79.72 241.721 77.6119 240.529 74.2597 cv
240.514 74.2175 240.499 74.1749 240.484 74.1324 cv
240.482 74.1249 240.479 74.1174 240.477 74.1098 cv
240.476 74.1078 240.475 74.1056 240.475 74.1035 cv
240.473 74.0977 240.471 74.0919 240.469 74.0861 cv
240.468 74.0842 240.468 74.0821 240.467 74.0803 cv
240.465 74.0731 240.462 74.0659 240.46 74.0588 cv
240.459 74.0563 240.458 74.0539 240.458 74.0515 cv
240.456 74.0464 240.454 74.0412 240.453 74.0361 cv
240.452 74.0333 240.451 74.0304 240.45 74.0276 cv
240.448 74.0225 240.447 74.0175 240.445 74.0124 cv
240.444 74.0081 240.442 74.0039 240.441 73.9995 cv
240.439 73.995 240.438 73.9903 240.436 73.9858 cv
240.435 73.9818 240.434 73.9777 240.433 73.9737 cv
240.432 73.9705 240.431 73.9676 240.43 73.9644 cv
240.428 73.9601 240.427 73.9558 240.426 73.9514 cv
240.425 73.9508 240.425 73.9502 240.425 73.9496 cv
240.422 73.9387 240.418 73.9274 240.415 73.9165 cv
240.415 73.9157 240.414 73.9151 240.414 73.9144 cv
240.183 73.1627 240.066 72.4022 240.053 71.6516 cv
240.388 71.6516 li
240.43 72.3688 240.567 73.0925 240.808 73.8062 cv
241.966 77.2347 245.165 79.397 248.594 79.3967 cv
249.466 79.3967 250.353 79.2567 251.225 78.9622 cv
251.54 78.8557 251.844 78.7316 252.136 78.5915 cv
252.146 78.5869 252.156 78.5823 252.165 78.5777 cv
252.242 78.5403 252.318 78.5018 252.394 78.4623 cv
252.728 78.2872 253.046 78.0908 253.347 77.8756 cv
253.44 77.8091 253.532 77.7408 253.622 77.6708 cv
253.639 77.6575 253.656 77.6442 253.673 77.6308 cv
253.673 77.6308 li
253.883 77.464 254.085 77.2879 254.277 77.1033 cv
254.298 77.0827 254.32 77.062 254.341 77.0412 cv
254.14 77.2619 253.926 77.4724 253.701 77.6713 cv
253.701 77.6713 li
253.599 77.7613 253.494 77.8489 253.387 77.934 cv
253.025 78.223 252.635 78.4836 252.219 78.7112 cv
251.825 78.9268 251.408 79.1127 250.97 79.265 cv
250.966 79.2663 250.962 79.2676 250.958 79.269 cv
250.956 79.27 250.953 79.271 250.95 79.272 cv
250.943 79.2743 250.937 79.2765 250.93 79.2788 cv
250.928 79.2796 250.925 79.2803 250.923 79.2811 cv
250.916 79.2835 250.909 79.286 250.902 79.2884 cv
250.888 79.293 250.875 79.2975 250.861 79.3021 cv
250.861 79.3021 li
250.002 79.5872 249.13 79.7228 248.272 79.723 cv
248.271 79.723 248.271 79.723 248.27 79.723 cv
248.27 79.723 li
.909804 .756863 .576471 rgb
f
257.26 71.6516 mo
256.491 71.6516 li
256.506 70.8513 256.403 70.037 256.171 69.2318 cv
256.171 69.2318 li
256.169 69.226 256.167 69.2199 256.165 69.2141 cv
256.165 69.2124 256.165 69.2108 256.164 69.2092 cv
256.163 69.2039 256.161 69.1986 256.159 69.1934 cv
256.159 69.1911 256.158 69.1887 256.157 69.1864 cv
256.154 69.1759 256.151 69.1658 256.148 69.1553 cv
256.148 69.1541 256.147 69.1526 256.147 69.1514 cv
256.146 69.1477 256.145 69.1434 256.144 69.1397 cv
256.142 69.136 256.141 69.1319 256.14 69.1281 cv
256.139 69.1245 256.138 69.1211 256.137 69.1174 cv
256.135 69.113 256.134 69.1087 256.133 69.1043 cv
256.132 69.1009 256.131 69.098 256.13 69.0946 cv
256.128 69.0894 256.127 69.0839 256.125 69.0787 cv
256.124 69.0766 256.123 69.0739 256.123 69.0718 cv
256.12 69.0643 256.118 69.0567 256.116 69.0492 cv
256.115 69.0471 256.114 69.0452 256.114 69.0431 cv
256.112 69.0372 256.11 69.0317 256.108 69.0258 cv
256.108 69.0235 256.107 69.0207 256.106 69.0183 cv
256.104 69.0129 256.102 69.0071 256.101 69.0017 cv
256.1 68.9993 256.099 68.9972 256.099 68.9948 cv
256.096 68.9877 256.094 68.9807 256.092 68.9736 cv
256.092 68.9731 256.091 68.9722 256.091 68.9717 cv
256.089 68.9639 256.086 68.956 256.083 68.9483 cv
256.083 68.9465 256.082 68.9443 256.082 68.9425 cv
256.08 68.9367 256.078 68.9308 256.076 68.925 cv
256.075 68.9226 256.074 68.9201 256.073 68.9177 cv
256.072 68.9121 256.07 68.9064 256.068 68.9008 cv
256.067 68.8984 256.066 68.8966 256.066 68.8942 cv
256.063 68.8865 256.06 68.8788 256.058 68.8711 cv
256.058 68.8711 li
256.058 68.8711 li
256.052 68.854 256.046 68.8372 256.04 68.8202 cv
256.037 68.8113 256.034 68.8026 256.031 68.7937 cv
256.027 68.7822 256.023 68.7704 256.019 68.759 cv
254.857 65.4733 251.809 63.3788 248.507 63.2839 cv
248.429 63.2816 248.351 63.2805 248.272 63.2805 cv
248.272 63.2805 li
248.272 63.2805 li
248.23 63.2805 248.187 63.2808 248.145 63.2814 cv
247.321 63.2943 246.484 63.4323 245.661 63.7081 cv
245.654 63.7104 245.647 63.7128 245.64 63.7151 cv
245.632 63.7181 245.623 63.7211 245.614 63.7242 cv
245.613 63.7244 245.612 63.7247 245.611 63.7249 cv
244.139 64.2285 242.901 65.1094 241.97 66.223 cv
241.781 65.2756 li
242.75 64.2602 243.972 63.4583 245.392 62.9784 cv
246.347 62.6559 247.325 62.4988 248.294 62.4988 cv
250.635 62.4988 252.913 63.4186 254.638 65.1436 cv
255.621 66.1267 256.346 67.2968 256.794 68.622 cv
257.129 69.6132 257.276 70.6352 257.26 71.6516 cv
.65098 .694118 .752941 rgb
f
240.051 71.6516 mo
239.279 71.6516 li
239.241 69.2692 240.158 66.9739 241.781 65.2756 cv
241.97 66.223 li
240.713 67.7266 240.014 69.6549 240.051 71.6516 cv
.721569 .768627 .823529 rgb
f
256.491 71.6516 mo
256.49 71.6516 li
256.505 70.8514 256.403 70.0373 256.171 69.2318 cv
256.403 70.037 256.506 70.8513 256.491 71.6516 cv
255.87 71.6516 mo
249.548 71.6516 li
244.555 64.4142 li
244.71 64.3509 244.867 64.2921 245.028 64.2379 cv
245.9 63.9433 246.787 63.8033 247.659 63.8033 cv
251.088 63.8033 254.287 65.9653 255.445 69.3939 cv
255.698 70.1421 255.836 70.9007 255.87 71.6516 cv
247.349 71.6516 mo
240.388 71.6516 li
240.258 69.4215 241.052 67.2531 242.525 65.6361 cv
240.925 67.2058 240.013 69.3834 240.053 71.6516 cv
240.051 71.6516 li
240.014 69.6549 240.713 67.7266 241.97 66.223 cv
242.901 65.1094 244.139 64.2285 245.611 63.7249 cv
244.466 64.1166 243.469 64.7417 242.642 65.5216 cv
242.746 65.4415 242.852 65.3637 242.959 65.2882 cv
247.349 71.6516 li
256.171 69.2318 mo
256.169 69.226 256.167 69.2199 256.165 69.2141 cv
256.167 69.2199 256.169 69.226 256.171 69.2318 cv
256.164 69.2092 mo
256.163 69.2039 256.161 69.1986 256.159 69.1934 cv
256.161 69.1986 256.163 69.2039 256.164 69.2092 cv
256.157 69.1864 mo
256.154 69.176 256.151 69.1658 256.148 69.1553 cv
256.151 69.1658 256.154 69.1759 256.157 69.1864 cv
256.147 69.1514 mo
256.146 69.1474 256.145 69.1437 256.144 69.1397 cv
256.145 69.1434 256.146 69.1477 256.147 69.1514 cv
256.14 69.1281 mo
256.139 69.1246 256.138 69.121 256.137 69.1174 cv
256.138 69.1211 256.139 69.1245 256.14 69.1281 cv
256.133 69.1043 mo
256.132 69.1009 256.131 69.0979 256.13 69.0946 cv
256.131 69.098 256.132 69.1009 256.133 69.1043 cv
256.125 69.0787 mo
256.124 69.0764 256.124 69.0741 256.123 69.0718 cv
256.123 69.0739 256.124 69.0766 256.125 69.0787 cv
256.116 69.0492 mo
256.115 69.0471 256.114 69.0451 256.114 69.0431 cv
256.114 69.0452 256.115 69.0471 256.116 69.0492 cv
256.108 69.0258 mo
256.108 69.0233 256.107 69.0208 256.106 69.0183 cv
256.107 69.0207 256.108 69.0235 256.108 69.0258 cv
256.101 69.0017 mo
256.1 68.9994 256.099 68.9971 256.099 68.9948 cv
256.099 68.9972 256.1 68.9993 256.101 69.0017 cv
256.092 68.9736 mo
256.091 68.973 256.091 68.9723 256.091 68.9717 cv
256.091 68.9722 256.092 68.9731 256.092 68.9736 cv
256.083 68.9483 mo
256.083 68.9462 256.082 68.9446 256.082 68.9425 cv
256.082 68.9443 256.083 68.9465 256.083 68.9483 cv
256.076 68.925 mo
256.075 68.9227 256.074 68.92 256.073 68.9177 cv
256.074 68.9201 256.075 68.9226 256.076 68.925 cv
256.068 68.9008 mo
256.067 68.8985 256.066 68.8965 256.066 68.8942 cv
256.066 68.8966 256.067 68.8984 256.068 68.9008 cv
256.04 68.8202 mo
256.037 68.8113 256.034 68.8026 256.031 68.7937 cv
256.034 68.8026 256.037 68.8113 256.04 68.8202 cv
256.019 68.759 mo
254.857 65.4736 251.809 63.3791 248.507 63.2839 cv
251.809 63.3788 254.857 65.4733 256.019 68.759 cv
245.614 63.7242 mo
245.623 63.7211 245.632 63.7181 245.64 63.7151 cv
245.647 63.7128 245.654 63.7104 245.661 63.7081 cv
245.654 63.7104 245.647 63.7128 245.64 63.7151 cv
245.632 63.7181 245.623 63.7211 245.614 63.7242 cv
248.145 63.2814 mo
248.187 63.2808 248.23 63.2805 248.272 63.2805 cv
248.272 63.2805 li
248.23 63.2805 248.187 63.2808 248.145 63.2814 cv
.972549 .905882 .811765 rgb
f
249.054 71.6516 mo
247.696 71.6516 li
243.196 65.1284 li
243.507 64.926 243.834 64.7425 244.176 64.5811 cv
249.054 71.6516 li
247.387 71.6516 mo
247.349 71.6516 li
242.959 65.2882 li
242.968 65.2822 242.977 65.2762 242.985 65.2702 cv
247.387 71.6516 li
.956863 .886274 .796078 rgb
f
249.548 71.6516 mo
249.054 71.6516 li
244.176 64.5811 li
244.301 64.5225 244.427 64.4668 244.555 64.4142 cv
249.548 71.6516 li
.929412 .839216 .733333 rgb
f
247.696 71.6516 mo
247.387 71.6516 li
242.985 65.2702 li
243.054 65.222 243.125 65.1747 243.196 65.1284 cv
247.696 71.6516 li
f
256.171 69.2318 mo
256.171 69.2318 li
256.171 69.2318 li
256.165 69.2141 mo
256.165 69.2122 256.165 69.211 256.164 69.2092 cv
256.165 69.2108 256.165 69.2124 256.165 69.2141 cv
256.159 69.1934 mo
256.159 69.1913 256.158 69.1885 256.157 69.1864 cv
256.158 69.1887 256.159 69.1911 256.159 69.1934 cv
256.148 69.1553 mo
256.148 69.154 256.147 69.1527 256.147 69.1514 cv
256.147 69.1526 256.148 69.1541 256.148 69.1553 cv
256.144 69.1397 mo
256.142 69.1358 256.141 69.1321 256.14 69.1281 cv
256.141 69.1319 256.142 69.136 256.144 69.1397 cv
256.137 69.1174 mo
256.135 69.1132 256.134 69.1085 256.133 69.1043 cv
256.134 69.1087 256.135 69.113 256.137 69.1174 cv
256.13 69.0946 mo
256.128 69.0893 256.127 69.084 256.125 69.0787 cv
256.127 69.0839 256.128 69.0894 256.13 69.0946 cv
256.123 69.0718 mo
256.12 69.0642 256.118 69.0568 256.116 69.0492 cv
256.118 69.0567 256.12 69.0643 256.123 69.0718 cv
256.114 69.0431 mo
256.112 69.0373 256.11 69.0316 256.108 69.0258 cv
256.11 69.0317 256.112 69.0372 256.114 69.0431 cv
256.106 69.0183 mo
256.104 69.0128 256.102 69.0072 256.101 69.0017 cv
256.102 69.0071 256.104 69.0129 256.106 69.0183 cv
256.099 68.9948 mo
256.096 68.9877 256.094 68.9807 256.092 68.9736 cv
256.094 68.9807 256.096 68.9877 256.099 68.9948 cv
256.091 68.9717 mo
256.089 68.9638 256.086 68.9562 256.083 68.9483 cv
256.086 68.956 256.089 68.9639 256.091 68.9717 cv
256.082 68.9425 mo
256.08 68.9365 256.078 68.931 256.076 68.925 cv
256.078 68.9308 256.08 68.9367 256.082 68.9425 cv
256.073 68.9177 mo
256.072 68.9122 256.07 68.9063 256.068 68.9008 cv
256.07 68.9064 256.072 68.9121 256.073 68.9177 cv
256.066 68.8942 mo
256.063 68.8866 256.06 68.8787 256.058 68.8711 cv
256.06 68.8788 256.063 68.8865 256.066 68.8942 cv
256.058 68.8711 mo
256.052 68.854 256.046 68.8372 256.04 68.8202 cv
256.046 68.8372 256.052 68.854 256.058 68.8711 cv
256.031 68.7937 mo
256.027 68.7822 256.023 68.7704 256.019 68.759 cv
256.023 68.7704 256.027 68.7822 256.031 68.7937 cv
245.611 63.7249 mo
245.612 63.7247 245.613 63.7244 245.614 63.7242 cv
245.613 63.7244 245.612 63.7247 245.611 63.7249 cv
245.661 63.7081 mo
246.484 63.4323 247.321 63.2943 248.145 63.2814 cv
247.321 63.2943 246.484 63.4324 245.661 63.7081 cv
248.507 63.2839 mo
248.429 63.2816 248.351 63.2805 248.272 63.2805 cv
248.272 63.2805 li
248.351 63.2805 248.429 63.2816 248.507 63.2839 cv
.941176 .945098 .956863 rgb
f
256.49 71.6516 mo
255.87 71.6516 li
255.836 70.9007 255.698 70.1421 255.445 69.3939 cv
254.287 65.9653 251.088 63.8033 247.659 63.8033 cv
246.787 63.8033 245.9 63.9433 245.028 64.2379 cv
244.867 64.2921 244.71 64.3509 244.555 64.4142 cv
244.446 64.2556 li
244.162 64.4048 243.882 64.5655 243.612 64.752 cv
243.378 64.9137 243.158 65.0886 242.946 65.2695 cv
242.959 65.2882 li
242.852 65.3637 242.746 65.4415 242.642 65.5216 cv
243.469 64.7417 244.466 64.1166 245.611 63.7249 cv
245.612 63.7247 245.613 63.7244 245.614 63.7242 cv
245.623 63.7211 245.632 63.7181 245.64 63.7151 cv
245.647 63.7128 245.654 63.7104 245.661 63.7081 cv
246.484 63.4324 247.321 63.2943 248.145 63.2814 cv
248.187 63.2808 248.23 63.2805 248.272 63.2805 cv
248.351 63.2805 248.429 63.2816 248.507 63.2839 cv
251.809 63.3791 254.857 65.4736 256.019 68.759 cv
256.023 68.7704 256.027 68.7822 256.031 68.7937 cv
256.034 68.8026 256.037 68.8113 256.04 68.8202 cv
256.046 68.8372 256.052 68.854 256.058 68.8711 cv
256.058 68.8711 li
256.058 68.8711 li
256.06 68.8787 256.063 68.8866 256.066 68.8942 cv
256.066 68.8965 256.067 68.8985 256.068 68.9008 cv
256.07 68.9063 256.072 68.9122 256.073 68.9177 cv
256.074 68.92 256.075 68.9227 256.076 68.925 cv
256.078 68.931 256.08 68.9365 256.082 68.9425 cv
256.082 68.9446 256.083 68.9462 256.083 68.9483 cv
256.086 68.9562 256.089 68.9638 256.091 68.9717 cv
256.091 68.9723 256.091 68.973 256.092 68.9736 cv
256.094 68.9807 256.096 68.9877 256.099 68.9948 cv
256.099 68.9971 256.1 68.9994 256.101 69.0017 cv
256.102 69.0072 256.104 69.0128 256.106 69.0183 cv
256.107 69.0208 256.108 69.0233 256.108 69.0258 cv
256.11 69.0316 256.112 69.0373 256.114 69.0431 cv
256.114 69.0451 256.115 69.0471 256.116 69.0492 cv
256.118 69.0568 256.12 69.0642 256.123 69.0718 cv
256.124 69.0741 256.124 69.0764 256.125 69.0787 cv
256.127 69.084 256.128 69.0893 256.13 69.0946 cv
256.131 69.0979 256.132 69.1009 256.133 69.1043 cv
256.134 69.1085 256.135 69.1132 256.137 69.1174 cv
256.138 69.121 256.139 69.1246 256.14 69.1281 cv
256.141 69.1321 256.142 69.1358 256.144 69.1397 cv
256.145 69.1437 256.146 69.1474 256.147 69.1514 cv
256.147 69.1527 256.148 69.154 256.148 69.1553 cv
256.151 69.1658 256.154 69.176 256.157 69.1864 cv
256.158 69.1885 256.159 69.1913 256.159 69.1934 cv
256.161 69.1986 256.163 69.2039 256.164 69.2092 cv
256.165 69.211 256.165 69.2122 256.165 69.2141 cv
256.167 69.2199 256.169 69.226 256.171 69.2318 cv
256.171 69.2318 li
256.403 70.0373 256.505 70.8514 256.49 71.6516 cv
.972549 .968627 .964706 rgb
f
242.959 65.2882 mo
242.946 65.2695 li
243.158 65.0886 243.378 64.9137 243.612 64.752 cv
243.882 64.5655 244.162 64.4048 244.446 64.2556 cv
244.555 64.4142 li
244.555 64.4142 li
244.446 64.2556 li
244.326 64.3188 244.207 64.3856 244.089 64.4541 cv
244.176 64.5811 li
243.834 64.7425 243.507 64.926 243.196 65.1284 cv
243.177 65.1009 li
242.982 65.2655 li
242.985 65.2702 li
242.977 65.2762 242.968 65.2822 242.959 65.2882 cv
.972549 .964706 .960784 rgb
f
244.176 64.5811 mo
244.089 64.4541 li
244.207 64.3856 244.326 64.3188 244.446 64.2556 cv
244.555 64.4142 li
244.427 64.4668 244.301 64.5225 244.176 64.5811 cv
.968627 .960784 .952941 rgb
f
242.985 65.2702 mo
242.982 65.2655 li
243.177 65.1009 li
243.196 65.1284 li
243.125 65.1747 243.054 65.222 242.985 65.2702 cv
f
240.388 71.6516 mo
240.053 71.6516 li
240.013 69.3834 240.925 67.2058 242.525 65.6361 cv
241.052 67.2531 240.258 69.4215 240.388 71.6516 cv
.929412 .839216 .733333 rgb
f
218.343 80.0687 mo
218.039 78.5434 li
218.319 78.4804 218.598 78.4022 218.876 78.3083 cv
218.883 78.3059 218.891 78.3033 218.898 78.3008 cv
218.9 78.3002 218.902 78.2995 218.904 78.2989 cv
218.911 78.2965 218.918 78.2941 218.925 78.2916 cv
218.927 78.291 218.928 78.2905 218.93 78.2899 cv
218.936 78.2879 218.941 78.286 218.947 78.284 cv
218.949 78.2831 218.952 78.2824 218.954 78.2814 cv
218.96 78.2793 218.966 78.2772 218.973 78.275 cv
218.976 78.2737 218.98 78.2724 218.984 78.271 cv
218.987 78.27 218.989 78.2691 218.992 78.2681 cv
219.634 78.0408 220.23 77.7417 220.774 77.3827 cv
220.785 77.3954 li
221.017 77.2419 221.246 77.0795 221.466 76.8992 cv
221.72 76.6909 221.952 76.4662 222.174 76.235 cv
222.174 76.235 li
222.174 76.235 li
222.166 76.2252 li
222.704 75.6656 223.157 75.0349 223.516 74.3543 cv
223.95 76.529 li
222.815 77.9902 221.254 79.1455 219.374 79.7811 cv
219.033 79.8962 218.689 79.992 218.343 80.0687 cv
210.161 78.1736 mo
209.873 77.9433 209.595 77.695 209.329 77.4292 cv
208.261 76.3614 207.473 75.0893 206.986 73.6501 cv
206.15 71.1764 206.328 68.5259 207.486 66.1862 cv
207.551 66.0547 207.619 65.9252 207.689 65.7975 cv
207.942 67.0599 li
207.428 68.2897 207.2 69.5975 207.258 70.905 cv
207.516 70.905 207.775 70.905 208.033 70.905 cv
208.065 71.573 208.179 72.2475 208.382 72.9145 cv
208.383 72.9156 208.383 72.9166 208.383 72.9178 cv
208.385 72.9228 208.386 72.9279 208.388 72.9329 cv
208.389 72.9352 208.389 72.9374 208.39 72.9397 cv
208.392 72.946 208.394 72.9518 208.396 72.9581 cv
208.397 72.9629 208.399 72.9675 208.4 72.9722 cv
208.401 72.9757 208.402 72.9792 208.403 72.9827 cv
208.405 72.9868 208.406 72.9909 208.407 72.995 cv
208.408 72.9984 208.409 73.0015 208.41 73.0049 cv
208.412 73.0113 208.414 73.0176 208.417 73.024 cv
208.417 73.0261 208.418 73.028 208.418 73.0301 cv
208.42 73.0362 208.422 73.0421 208.424 73.0481 cv
208.425 73.0505 208.426 73.053 208.427 73.0554 cv
208.428 73.061 208.43 73.0667 208.432 73.0723 cv
208.433 73.0744 208.433 73.0763 208.434 73.0784 cv
208.437 73.0857 208.439 73.0931 208.441 73.1005 cv
208.442 73.102 208.442 73.1038 208.443 73.1054 cv
208.445 73.1114 208.447 73.1177 208.449 73.1237 cv
208.45 73.1255 208.45 73.1278 208.451 73.1296 cv
208.454 73.1371 208.456 73.1448 208.459 73.1523 cv
208.473 73.1949 208.488 73.2375 208.503 73.2796 cv
208.774 74.0413 209.146 74.7383 209.6 75.3615 cv
210.161 78.1736 li
221.257 63.046 mo
219.772 62.0448 218.038 61.5193 216.269 61.5193 cv
215.737 61.5193 215.201 61.5669 214.667 61.6635 cv
214.515 60.901 li
215.099 60.7941 215.687 60.7414 216.271 60.7414 cv
217.944 60.7414 219.587 61.1738 221.049 62.0031 cv
221.257 63.046 li
.447059 .517647 .607843 rgb
f
223.95 76.529 mo
223.516 74.3543 li
224.073 73.297 224.401 72.1197 224.458 70.905 cv
224.713 70.905 224.969 70.905 225.224 70.905 cv
225.272 69.8269 225.134 68.7241 224.769 67.642 cv
224.321 66.3169 223.596 65.1469 222.613 64.1638 cv
222.191 63.7426 221.737 63.3695 221.257 63.046 cv
221.049 62.0031 li
221.81 62.4345 222.521 62.9732 223.162 63.6144 cv
224.23 64.6822 225.018 65.9542 225.505 67.3933 cv
226.594 70.6183 225.898 74.0233 223.95 76.529 cv
.564706 .639216 .72549 rgb
f
216.221 80.3023 mo
214.038 80.3023 211.907 79.5667 210.161 78.1736 cv
209.6 75.3615 li
211.142 77.481 213.623 78.7409 216.238 78.7429 cv
216.24 78.7429 216.242 78.7429 216.244 78.7429 cv
216.244 78.7429 li
216.244 78.7429 li
216.245 78.7429 216.245 78.7429 216.246 78.7429 cv
216.84 78.7428 217.44 78.6778 218.039 78.5434 cv
218.343 80.0687 li
217.638 80.2254 216.927 80.3023 216.221 80.3023 cv
207.942 67.0599 mo
207.689 65.7975 li
208.87 63.6531 210.783 62.051 213.118 61.263 cv
213.579 61.107 214.046 60.9866 214.515 60.901 cv
214.667 61.6635 li
214.231 61.7425 213.796 61.8542 213.367 61.9995 cv
211.09 62.7677 209.249 64.3774 208.182 66.5311 cv
208.096 66.7055 208.016 66.8819 207.942 67.0599 cv
f
216.244 78.7429 mo
216.244 78.7429 li
216.245 78.7429 216.245 78.7429 216.246 78.7429 cv
216.245 78.7429 216.245 78.7429 216.244 78.7429 cv
216.238 78.7429 mo
213.623 78.7409 211.142 77.481 209.6 75.3615 cv
209.146 74.7383 208.774 74.0413 208.503 73.2796 cv
209.696 76.6318 212.854 78.7399 216.238 78.7429 cv
216.568 78.4167 mo
213.139 78.417 209.941 76.2547 208.782 72.8262 cv
208.567 72.1898 208.435 71.5456 208.379 70.905 cv
210.741 70.905 213.103 70.905 215.466 70.905 cv
220.703 77.2963 li
220.236 77.5704 219.734 77.8016 219.199 77.9821 cv
218.328 78.2767 217.44 78.4166 216.568 78.4167 cv
218.898 78.3008 mo
218.9 78.3002 218.902 78.2996 218.904 78.2989 cv
218.902 78.2995 218.9 78.3002 218.898 78.3008 cv
218.925 78.2916 mo
218.927 78.2911 218.928 78.2904 218.93 78.2899 cv
218.928 78.2905 218.927 78.291 218.925 78.2916 cv
218.947 78.284 mo
218.949 78.2832 218.952 78.2823 218.954 78.2814 cv
218.952 78.2824 218.949 78.2831 218.947 78.284 cv
218.973 78.275 mo
218.976 78.2737 218.98 78.2723 218.984 78.271 cv
218.98 78.2724 218.976 78.2737 218.973 78.275 cv
218.992 78.2681 mo
219.634 78.0408 220.229 77.7411 220.773 77.3816 cv
220.774 77.3827 li
220.23 77.7417 219.634 78.0408 218.992 78.2681 cv
222.166 76.2252 mo
222.164 76.2228 li
222.215 76.1696 222.265 76.1156 222.315 76.061 cv
222.294 76.0813 222.274 76.1014 222.253 76.1215 cv
223.572 74.7057 224.363 72.8544 224.456 70.905 cv
224.457 70.905 224.457 70.905 224.458 70.905 cv
224.401 72.1197 224.073 73.297 223.516 74.3543 cv
223.157 75.0349 222.704 75.6656 222.166 76.2252 cv
222.084 76.1255 mo
217.806 70.905 li
219.821 70.905 221.836 70.905 223.851 70.905 cv
223.883 72.8124 223.241 74.6552 222.084 76.1255 cv
208.451 73.1296 mo
208.45 73.1278 208.45 73.1255 208.449 73.1237 cv
208.45 73.1258 208.45 73.1275 208.451 73.1296 cv
208.443 73.1054 mo
208.442 73.1038 208.442 73.102 208.441 73.1005 cv
208.442 73.1022 208.442 73.1037 208.443 73.1054 cv
208.434 73.0784 mo
208.433 73.0763 208.433 73.0744 208.432 73.0723 cv
208.433 73.0742 208.433 73.0765 208.434 73.0784 cv
208.427 73.0554 mo
208.426 73.053 208.425 73.0505 208.424 73.0481 cv
208.425 73.0506 208.426 73.0529 208.427 73.0554 cv
208.418 73.0301 mo
208.418 73.028 208.417 73.0261 208.417 73.024 cv
208.417 73.0261 208.418 73.0281 208.418 73.0301 cv
208.41 73.0049 mo
208.409 73.0015 208.408 72.9984 208.407 72.995 cv
208.408 72.9982 208.409 73.0017 208.41 73.0049 cv
208.403 72.9827 mo
208.402 72.9792 208.401 72.9757 208.4 72.9722 cv
208.401 72.9756 208.402 72.9792 208.403 72.9827 cv
208.396 72.9581 mo
208.394 72.9518 208.392 72.946 208.39 72.9397 cv
208.392 72.9459 208.394 72.9519 208.396 72.9581 cv
208.388 72.9329 mo
208.386 72.9279 208.385 72.9228 208.383 72.9178 cv
208.385 72.9227 208.386 72.928 208.388 72.9329 cv
208.382 72.9145 mo
208.179 72.2475 208.065 71.573 208.033 70.905 cv
208.034 70.905 208.034 70.905 208.034 70.905 cv
208.065 71.5729 208.179 72.2472 208.382 72.9145 cv
.956863 .960784 .968627 rgb
f
220.785 77.3954 mo
220.774 77.3827 li
220.773 77.3816 li
220.841 77.3369 220.908 77.2912 220.974 77.2447 cv
221.01 77.2206 li
221.009 77.2197 li
221.315 77.0018 221.604 76.7645 221.873 76.5103 cv
221.884 76.5236 li
221.983 76.4287 222.08 76.333 222.174 76.235 cv
221.952 76.4662 221.72 76.6909 221.466 76.8992 cv
221.246 77.0795 221.017 77.2419 220.785 77.3954 cv
220.703 77.2963 mo
215.466 70.905 li
215.479 70.905 215.493 70.905 215.506 70.905 cv
220.731 77.2803 li
220.722 77.2856 220.712 77.291 220.703 77.2963 cv
220.949 77.1463 mo
215.835 70.905 li
216.316 70.905 216.798 70.905 217.28 70.905 cv
221.82 76.4447 li
221.747 76.5278 221.673 76.6096 221.597 76.69 cv
221.39 76.8515 221.174 77.004 220.949 77.1463 cv
.909804 .92549 .929412 rgb
f
221.884 76.5236 mo
221.873 76.5103 li
221.973 76.4167 222.069 76.3209 222.164 76.2228 cv
222.174 76.235 li
222.174 76.235 li
222.08 76.333 221.983 76.4287 221.884 76.5236 cv
221.82 76.4447 mo
217.28 70.905 li
217.455 70.905 217.63 70.905 217.806 70.905 cv
222.084 76.1255 li
221.999 76.2339 221.91 76.3405 221.82 76.4447 cv
.811765 .831372 .854902 rgb
f
220.731 77.2803 mo
215.506 70.905 li
215.616 70.905 215.725 70.905 215.835 70.905 cv
220.949 77.1463 li
220.877 77.192 220.804 77.2367 220.731 77.2803 cv
220.974 77.2447 mo
220.986 77.2363 220.997 77.2281 221.009 77.2197 cv
221.01 77.2206 li
220.974 77.2447 li
f
221.597 76.69 mo
221.673 76.6096 221.747 76.5278 221.82 76.4447 cv
221.851 76.4834 li
221.768 76.5538 221.683 76.6227 221.597 76.69 cv
.976471 .976471 .980392 rgb
f
222.156 76.2133 mo
222.084 76.1255 li
223.241 74.6552 223.883 72.8124 223.851 70.905 cv
224.053 70.905 224.255 70.905 224.456 70.905 cv
224.363 72.8544 223.572 74.7057 222.253 76.1215 cv
222.221 76.1523 222.188 76.1829 222.156 76.2133 cv
.980392 .980392 .984314 rgb
f
221.851 76.4834 mo
221.82 76.4447 li
221.91 76.3405 221.999 76.2339 222.084 76.1255 cv
222.156 76.2133 li
222.057 76.3056 221.955 76.3957 221.851 76.4834 cv
.964706 .968627 .972549 rgb
f
216.244 78.7429 mo
216.242 78.7429 216.24 78.7429 216.238 78.7429 cv
212.854 78.7399 209.696 76.6318 208.503 73.2796 cv
208.488 73.2375 208.473 73.1949 208.459 73.1523 cv
208.456 73.1448 208.454 73.1371 208.451 73.1296 cv
208.45 73.1275 208.45 73.1258 208.449 73.1237 cv
208.447 73.1177 208.445 73.1114 208.443 73.1054 cv
208.442 73.1037 208.442 73.1022 208.441 73.1005 cv
208.439 73.0931 208.437 73.0857 208.434 73.0784 cv
208.433 73.0765 208.433 73.0742 208.432 73.0723 cv
208.43 73.0667 208.428 73.061 208.427 73.0554 cv
208.426 73.0529 208.425 73.0506 208.424 73.0481 cv
208.422 73.0421 208.42 73.0362 208.418 73.0301 cv
208.418 73.0281 208.417 73.0261 208.417 73.024 cv
208.414 73.0176 208.412 73.0113 208.41 73.0049 cv
208.409 73.0017 208.408 72.9982 208.407 72.995 cv
208.406 72.9909 208.405 72.9868 208.403 72.9827 cv
208.402 72.9792 208.401 72.9756 208.4 72.9722 cv
208.399 72.9675 208.397 72.9629 208.396 72.9581 cv
208.394 72.9519 208.392 72.9459 208.39 72.9397 cv
208.389 72.9374 208.389 72.9352 208.388 72.9329 cv
208.386 72.928 208.385 72.9227 208.383 72.9178 cv
208.383 72.9166 208.383 72.9156 208.382 72.9145 cv
208.179 72.2472 208.065 71.5729 208.034 70.905 cv
208.149 70.905 208.264 70.905 208.379 70.905 cv
208.435 71.5456 208.567 72.1898 208.782 72.8262 cv
209.941 76.2547 213.139 78.417 216.568 78.4167 cv
217.44 78.4166 218.328 78.2767 219.199 77.9821 cv
219.734 77.8016 220.236 77.5704 220.703 77.2963 cv
220.712 77.291 220.722 77.2856 220.731 77.2803 cv
220.804 77.2367 220.877 77.192 220.949 77.1463 cv
221.174 77.004 221.39 76.8515 221.597 76.69 cv
221.683 76.6227 221.768 76.5538 221.851 76.4834 cv
221.955 76.3957 222.057 76.3056 222.156 76.2133 cv
222.156 76.2133 li
222.188 76.1829 222.221 76.1523 222.253 76.1215 cv
222.274 76.1014 222.294 76.0813 222.315 76.061 cv
222.265 76.1156 222.215 76.1696 222.164 76.2228 cv
222.164 76.2228 li
222.069 76.3209 221.973 76.4167 221.873 76.5103 cv
221.604 76.7645 221.315 77.0018 221.009 77.2197 cv
220.997 77.2281 220.986 77.2363 220.974 77.2447 cv
220.908 77.2912 220.841 77.3369 220.773 77.3816 cv
220.229 77.7411 219.634 78.0408 218.992 78.2681 cv
218.989 78.2691 218.987 78.27 218.984 78.271 cv
218.98 78.2723 218.976 78.2737 218.973 78.275 cv
218.966 78.2772 218.96 78.2793 218.954 78.2814 cv
218.952 78.2823 218.949 78.2832 218.947 78.284 cv
218.941 78.286 218.936 78.2879 218.93 78.2899 cv
218.928 78.2904 218.927 78.2911 218.925 78.2916 cv
218.918 78.2941 218.911 78.2965 218.904 78.2989 cv
218.902 78.2996 218.9 78.3002 218.898 78.3008 cv
218.891 78.3033 218.883 78.3059 218.876 78.3083 cv
218.598 78.4022 218.319 78.4804 218.039 78.5434 cv
217.44 78.6778 216.84 78.7428 216.246 78.7429 cv
216.245 78.7429 216.245 78.7429 216.244 78.7429 cv
216.244 78.7429 li
.811765 .831372 .854902 rgb
f
208.033 70.905 mo
207.775 70.905 207.516 70.905 207.258 70.905 cv
207.2 69.5975 207.428 68.2897 207.942 67.0599 cv
208.251 68.609 li
208.073 69.3518 207.996 70.1244 208.033 70.905 cv
221.485 64.188 mo
220.027 62.9838 218.177 62.3019 216.253 62.3004 cv
216.251 62.3004 216.249 62.3004 216.246 62.3004 cv
216.246 62.3004 li
216.246 62.3004 li
216.246 62.3004 216.245 62.3004 216.245 62.3004 cv
215.772 62.3005 215.296 62.3416 214.819 62.4261 cv
214.667 61.6635 li
215.201 61.5669 215.737 61.5193 216.269 61.5193 cv
218.038 61.5193 219.772 62.0448 221.257 63.046 cv
221.485 64.188 li
.65098 .694118 .752941 rgb
f
225.224 70.905 mo
224.969 70.905 224.713 70.905 224.458 70.905 cv
224.5 69.9975 224.392 69.0687 224.116 68.1533 cv
224.116 68.1524 224.115 68.1513 224.115 68.1505 cv
224.113 68.145 224.112 68.1396 224.11 68.1341 cv
224.109 68.1318 224.109 68.13 224.108 68.1277 cv
224.107 68.1227 224.105 68.1175 224.104 68.1125 cv
224.103 68.1102 224.102 68.1081 224.101 68.1058 cv
224.099 68.0969 224.096 68.088 224.093 68.079 cv
224.092 68.0761 224.091 68.0734 224.09 68.0705 cv
224.089 68.0666 224.088 68.0629 224.087 68.0589 cv
224.086 68.055 224.084 68.0512 224.083 68.0473 cv
224.082 68.0436 224.081 68.0399 224.08 68.0363 cv
224.078 68.0321 224.077 68.0279 224.076 68.0237 cv
224.075 68.0203 224.074 68.0171 224.072 68.0137 cv
224.071 68.0082 224.069 68.0028 224.067 67.9974 cv
224.066 67.995 224.066 67.9927 224.065 67.9904 cv
224.063 67.9831 224.06 67.9759 224.058 67.9687 cv
224.057 67.966 224.056 67.9636 224.055 67.961 cv
224.054 67.9558 224.052 67.9506 224.05 67.9454 cv
224.049 67.9425 224.048 67.9398 224.047 67.937 cv
224.046 67.9317 224.044 67.9265 224.042 67.9213 cv
224.041 67.9186 224.041 67.9164 224.04 67.9138 cv
224.037 67.9061 224.035 67.8986 224.032 67.8909 cv
224.032 67.8909 li
224.032 67.8909 li
224.026 67.8738 224.02 67.8564 224.014 67.8394 cv
224.012 67.8311 224.009 67.8234 224.006 67.8151 cv
224.002 67.8034 223.998 67.7913 223.994 67.7796 cv
223.48 66.326 222.596 65.1054 221.485 64.188 cv
221.257 63.046 li
221.737 63.3695 222.191 63.7426 222.613 64.1638 cv
223.596 65.1469 224.321 66.3169 224.769 67.642 cv
225.134 68.7241 225.272 69.8269 225.224 70.905 cv
.721569 .768627 .823529 rgb
f
208.251 68.609 mo
207.942 67.0599 li
208.016 66.8819 208.096 66.7055 208.182 66.5311 cv
209.249 64.3774 211.09 62.7677 213.367 61.9995 cv
213.796 61.8542 214.231 61.7425 214.667 61.6635 cv
214.819 62.4261 li
214.417 62.4976 214.014 62.6 213.615 62.735 cv
213.615 62.735 li
213.606 62.738 213.597 62.741 213.588 62.7441 cv
213.587 62.7444 213.586 62.7446 213.586 62.7449 cv
210.822 63.6897 208.887 65.9623 208.251 68.609 cv
f
224.458 70.905 mo
224.457 70.905 224.457 70.905 224.456 70.905 cv
224.5 69.9977 224.392 69.0692 224.116 68.1533 cv
224.392 69.0687 224.5 69.9975 224.458 70.905 cv
223.851 70.905 mo
221.836 70.905 219.821 70.905 217.806 70.905 cv
211.915 63.7166 li
212.261 63.5399 212.623 63.3859 213.002 63.2579 cv
213.874 62.9633 214.761 62.8233 215.633 62.8233 cv
219.062 62.8233 222.261 64.9854 223.419 68.4138 cv
223.698 69.2395 223.838 70.0784 223.851 70.905 cv
215.466 70.905 mo
213.103 70.905 210.741 70.905 208.379 70.905 cv
208.178 68.5933 208.975 66.3295 210.499 64.6559 cv
208.845 66.2794 207.925 68.5533 208.034 70.905 cv
208.034 70.905 208.034 70.905 208.033 70.905 cv
207.996 70.1244 208.073 69.3518 208.251 68.609 cv
208.887 65.9623 210.822 63.6897 213.586 62.7449 cv
212.441 63.1365 211.444 63.7616 210.616 64.5415 cv
210.664 64.5045 210.713 64.4679 210.762 64.4318 cv
210.646 64.5372 210.535 64.6453 210.426 64.7551 cv
215.466 70.905 li
224.115 68.1505 mo
224.113 68.1451 224.112 68.1395 224.11 68.1341 cv
224.112 68.1396 224.113 68.145 224.115 68.1505 cv
224.108 68.1277 mo
224.107 68.1227 224.105 68.1175 224.104 68.1125 cv
224.105 68.1175 224.107 68.1227 224.108 68.1277 cv
224.101 68.1058 mo
224.099 68.097 224.096 68.0878 224.093 68.079 cv
224.096 68.088 224.099 68.0969 224.101 68.1058 cv
224.09 68.0705 mo
224.089 68.0667 224.088 68.0627 224.087 68.0589 cv
224.088 68.0629 224.089 68.0666 224.09 68.0705 cv
224.083 68.0473 mo
224.082 68.0435 224.081 68.04 224.08 68.0363 cv
224.081 68.0399 224.082 68.0436 224.083 68.0473 cv
224.076 68.0237 mo
224.075 68.0204 224.074 68.017 224.072 68.0137 cv
224.074 68.0171 224.075 68.0203 224.076 68.0237 cv
224.067 67.9974 mo
224.066 67.9951 224.066 67.9927 224.065 67.9904 cv
224.066 67.9927 224.066 67.995 224.067 67.9974 cv
224.058 67.9687 mo
224.057 67.9661 224.056 67.9635 224.055 67.961 cv
224.056 67.9636 224.057 67.966 224.058 67.9687 cv
224.05 67.9454 mo
224.049 67.9427 224.048 67.9397 224.047 67.937 cv
224.048 67.9398 224.049 67.9425 224.05 67.9454 cv
224.042 67.9213 mo
224.041 67.9188 224.041 67.9163 224.04 67.9138 cv
224.041 67.9164 224.041 67.9186 224.042 67.9213 cv
224.014 67.8394 mo
224.012 67.8311 224.009 67.8234 224.006 67.8151 cv
224.009 67.8234 224.012 67.8311 224.014 67.8394 cv
223.994 67.7796 mo
222.805 64.4184 219.642 62.3034 216.253 62.3004 cv
218.177 62.3019 220.027 62.9838 221.485 64.188 cv
222.596 65.1054 223.48 66.326 223.994 67.7796 cv
213.588 62.7441 mo
213.597 62.741 213.606 62.738 213.615 62.735 cv
213.615 62.735 li
213.615 62.735 li
213.606 62.738 213.597 62.7411 213.588 62.7441 cv
216.245 62.3004 mo
216.245 62.3004 216.246 62.3004 216.246 62.3004 cv
216.246 62.3004 li
216.246 62.3004 216.245 62.3004 216.245 62.3004 cv
.956863 .960784 .968627 rgb
f
217.28 70.905 mo
216.798 70.905 216.316 70.905 215.835 70.905 cv
210.642 64.5683 li
210.461 64.7482 li
215.506 70.905 li
215.493 70.905 215.479 70.905 215.466 70.905 cv
210.426 64.7551 li
210.535 64.6453 210.646 64.5372 210.762 64.4318 cv
211.013 64.246 211.276 64.073 211.551 63.9144 cv
217.28 70.905 li
.929412 .941176 .945098 rgb
f
217.806 70.905 mo
217.63 70.905 217.455 70.905 217.28 70.905 cv
211.551 63.9144 li
211.67 63.8457 211.792 63.7797 211.915 63.7166 cv
217.806 70.905 li
.870588 .882353 .901961 rgb
f
215.835 70.905 mo
215.725 70.905 215.616 70.905 215.506 70.905 cv
210.461 64.7482 li
210.642 64.5683 li
215.835 70.905 li
f
224.116 68.1533 mo
224.116 68.1522 224.115 68.1516 224.115 68.1505 cv
224.115 68.1513 224.116 68.1524 224.116 68.1533 cv
224.11 68.1341 mo
224.109 68.132 224.109 68.1298 224.108 68.1277 cv
224.109 68.13 224.109 68.1318 224.11 68.1341 cv
224.104 68.1125 mo
224.103 68.1104 224.102 68.1079 224.101 68.1058 cv
224.102 68.1081 224.103 68.1102 224.104 68.1125 cv
224.093 68.079 mo
224.092 68.0761 224.091 68.0734 224.09 68.0705 cv
224.091 68.0734 224.092 68.0761 224.093 68.079 cv
224.087 68.0589 mo
224.086 68.055 224.084 68.0512 224.083 68.0473 cv
224.084 68.0512 224.086 68.055 224.087 68.0589 cv
224.08 68.0363 mo
224.078 68.0323 224.077 68.0276 224.076 68.0237 cv
224.077 68.0279 224.078 68.0321 224.08 68.0363 cv
224.072 68.0137 mo
224.071 68.0081 224.069 68.0029 224.067 67.9974 cv
224.069 68.0028 224.071 68.0082 224.072 68.0137 cv
224.065 67.9904 mo
224.063 67.9833 224.06 67.9757 224.058 67.9687 cv
224.06 67.9759 224.063 67.9831 224.065 67.9904 cv
224.055 67.961 mo
224.054 67.9557 224.052 67.9507 224.05 67.9454 cv
224.052 67.9506 224.054 67.9558 224.055 67.961 cv
224.047 67.937 mo
224.046 67.932 224.044 67.9262 224.042 67.9213 cv
224.044 67.9265 224.046 67.9317 224.047 67.937 cv
224.04 67.9138 mo
224.037 67.9062 224.035 67.8985 224.032 67.8909 cv
224.035 67.8986 224.037 67.9061 224.04 67.9138 cv
224.032 67.8909 mo
224.026 67.8738 224.02 67.8564 224.014 67.8394 cv
224.02 67.8564 224.026 67.8738 224.032 67.8909 cv
224.006 67.8151 mo
224.002 67.8034 223.998 67.7913 223.994 67.7796 cv
223.998 67.7913 224.002 67.8034 224.006 67.8151 cv
.94902 .952941 .964706 rgb
f
213.586 62.7449 mo
213.586 62.7446 213.587 62.7444 213.588 62.7441 cv
213.587 62.7444 213.586 62.7446 213.586 62.7449 cv
f
214.819 62.4261 mo
214.819 62.4261 li
215.296 62.3416 215.772 62.3005 216.245 62.3004 cv
215.772 62.3005 215.296 62.3416 214.819 62.4261 cv
.941176 .945098 .956863 rgb
f
213.615 62.735 mo
214.014 62.6 214.417 62.4976 214.819 62.4261 cv
214.819 62.4261 li
214.417 62.4976 214.014 62.6001 213.615 62.735 cv
.94902 .952941 .964706 rgb
f
224.456 70.905 mo
224.255 70.905 224.053 70.905 223.851 70.905 cv
223.838 70.0784 223.698 69.2395 223.419 68.4138 cv
222.261 64.9854 219.062 62.8233 215.633 62.8233 cv
214.761 62.8233 213.874 62.9633 213.002 63.2579 cv
212.623 63.3859 212.261 63.5399 211.915 63.7166 cv
211.837 63.621 li
211.566 63.7931 211.3 63.9764 211.046 64.1846 cv
210.949 64.2648 210.854 64.3475 210.762 64.4318 cv
210.713 64.4679 210.664 64.5045 210.616 64.5415 cv
211.444 63.7616 212.441 63.1365 213.586 62.7449 cv
213.586 62.7446 213.587 62.7444 213.588 62.7441 cv
213.597 62.7411 213.606 62.738 213.615 62.735 cv
213.615 62.735 li
214.014 62.6001 214.417 62.4976 214.819 62.4261 cv
215.296 62.3416 215.772 62.3005 216.245 62.3004 cv
216.245 62.3004 216.246 62.3004 216.246 62.3004 cv
216.249 62.3004 216.251 62.3004 216.253 62.3004 cv
219.642 62.3034 222.805 64.4184 223.994 67.7796 cv
223.998 67.7913 224.002 67.8034 224.006 67.8151 cv
224.009 67.8234 224.012 67.8311 224.014 67.8394 cv
224.02 67.8564 224.026 67.8738 224.032 67.8909 cv
224.032 67.8909 li
224.032 67.8909 li
224.035 67.8985 224.037 67.9062 224.04 67.9138 cv
224.041 67.9163 224.041 67.9188 224.042 67.9213 cv
224.044 67.9262 224.046 67.932 224.047 67.937 cv
224.048 67.9397 224.049 67.9427 224.05 67.9454 cv
224.052 67.9507 224.054 67.9557 224.055 67.961 cv
224.056 67.9635 224.057 67.9661 224.058 67.9687 cv
224.06 67.9757 224.063 67.9833 224.065 67.9904 cv
224.066 67.9927 224.066 67.9951 224.067 67.9974 cv
224.069 68.0029 224.071 68.0081 224.072 68.0137 cv
224.074 68.017 224.075 68.0204 224.076 68.0237 cv
224.077 68.0276 224.078 68.0323 224.08 68.0363 cv
224.081 68.04 224.082 68.0435 224.083 68.0473 cv
224.084 68.0512 224.086 68.055 224.087 68.0589 cv
224.088 68.0627 224.089 68.0667 224.09 68.0705 cv
224.091 68.0734 224.092 68.0761 224.093 68.079 cv
224.096 68.0878 224.099 68.097 224.101 68.1058 cv
224.102 68.1079 224.103 68.1104 224.104 68.1125 cv
224.105 68.1175 224.107 68.1227 224.108 68.1277 cv
224.109 68.1298 224.109 68.132 224.11 68.1341 cv
224.112 68.1395 224.113 68.1451 224.115 68.1505 cv
224.115 68.1516 224.116 68.1522 224.116 68.1533 cv
224.392 69.0692 224.5 69.9977 224.456 70.905 cv
.972549 .972549 .976471 rgb
f
210.762 64.4318 mo
210.854 64.3475 210.949 64.2648 211.046 64.1846 cv
211.3 63.9764 211.566 63.7931 211.837 63.621 cv
211.915 63.7166 li
211.915 63.7166 li
211.837 63.621 li
211.722 63.6939 211.609 63.7703 211.497 63.8481 cv
211.551 63.9144 li
211.276 64.073 211.013 64.246 210.762 64.4318 cv
.968627 .968627 .976471 rgb
f
211.551 63.9144 mo
211.497 63.8481 li
211.609 63.7703 211.722 63.6939 211.837 63.621 cv
211.915 63.7166 li
211.792 63.7797 211.67 63.8457 211.551 63.9144 cv
.960784 .964706 .972549 rgb
f
208.379 70.905 mo
208.264 70.905 208.149 70.905 208.034 70.905 cv
207.925 68.5533 208.845 66.2794 210.499 64.6559 cv
208.975 66.3295 208.178 68.5933 208.379 70.905 cv
.870588 .882353 .901961 rgb
f
227.722 95.413 mo
227.045 95.005 226.41 94.5101 225.832 93.9318 cv
224.764 92.864 223.975 91.5919 223.489 90.1528 cv
222.429 87.0152 223.06 83.7072 224.888 81.2226 cv
225.104 82.303 li
224.222 83.7401 223.745 85.4175 223.766 87.1419 cv
224.528 87.1419 li
224.539 87.8966 224.655 88.6617 224.885 89.4174 cv
224.886 89.4185 224.886 89.4195 224.886 89.4206 cv
224.888 89.4256 224.889 89.4307 224.891 89.4357 cv
224.892 89.4381 224.892 89.4403 224.893 89.4428 cv
224.895 89.4485 224.897 89.4549 224.899 89.4607 cv
224.9 89.4656 224.902 89.47 224.903 89.4749 cv
224.904 89.4786 224.905 89.4822 224.906 89.4859 cv
224.908 89.4898 224.909 89.4937 224.91 89.4976 cv
224.911 89.501 224.912 89.5044 224.913 89.5079 cv
224.915 89.5139 224.917 89.5201 224.919 89.5261 cv
224.92 89.5287 224.921 89.5308 224.922 89.5335 cv
224.923 89.5393 224.925 89.545 224.927 89.5508 cv
224.928 89.5532 224.929 89.5561 224.93 89.5585 cv
224.931 89.5639 224.933 89.5696 224.935 89.575 cv
224.936 89.5771 224.936 89.5791 224.937 89.5812 cv
224.939 89.5886 224.942 89.5959 224.944 89.6032 cv
224.945 89.6051 224.945 89.6067 224.946 89.6085 cv
224.948 89.6145 224.95 89.6202 224.952 89.6263 cv
224.953 89.6283 224.953 89.6305 224.954 89.6326 cv
224.957 89.6402 224.959 89.6476 224.962 89.6552 cv
225.031 89.8615 225.108 90.0629 225.192 90.2598 cv
225.195 90.2661 225.198 90.2729 225.201 90.2792 cv
225.201 90.2804 225.202 90.2817 225.202 90.2829 cv
225.203 90.2839 225.203 90.2845 225.203 90.2855 cv
225.207 90.293 225.21 90.301 225.213 90.3084 cv
225.698 91.4245 226.408 92.385 227.271 93.1546 cv
227.722 95.413 li
.447059 .517647 .607843 rgb
f
232.723 96.8048 mo
230.964 96.8048 229.239 96.3271 227.722 95.413 cv
227.271 93.1546 li
228.447 94.2033 229.907 94.8971 231.466 95.1446 cv
231.887 95.2115 232.315 95.2458 232.747 95.2458 cv
233.62 95.2458 234.507 95.1059 235.379 94.8112 cv
235.386 94.8087 235.394 94.8061 235.401 94.8036 cv
235.403 94.803 235.405 94.8025 235.407 94.8018 cv
235.414 94.7994 235.421 94.7969 235.428 94.7944 cv
235.43 94.7939 235.431 94.7934 235.433 94.7929 cv
235.438 94.7908 235.444 94.7888 235.45 94.7868 cv
235.452 94.786 235.455 94.7852 235.457 94.7844 cv
235.463 94.7822 235.47 94.78 235.476 94.7778 cv
235.48 94.7765 235.483 94.7754 235.486 94.7741 cv
235.49 94.7729 235.493 94.7717 235.496 94.7705 cv
235.505 94.7675 235.514 94.7644 235.522 94.7613 cv
235.522 94.7613 235.522 94.7613 235.522 94.7612 cv
238.829 93.577 240.921 90.4783 240.969 87.1419 cv
241.733 87.1419 li
241.747 86.1364 241.603 85.1257 241.271 84.1447 cv
240.824 82.8196 240.098 81.6495 239.115 80.6665 cv
237.39 78.9415 235.112 78.0216 232.771 78.0216 cv
231.803 78.0216 230.824 78.1788 229.869 78.5013 cv
227.805 79.199 226.162 80.5778 225.104 82.303 cv
224.888 81.2226 li
226.035 79.6644 227.652 78.4301 229.62 77.765 cv
230.658 77.4146 231.721 77.2438 232.772 77.2438 cv
235.316 77.2438 237.791 78.2431 239.665 80.117 cv
240.732 81.1848 241.521 82.4569 242.007 83.8959 cv
242.843 86.3697 242.665 89.0203 241.507 91.3598 cv
240.349 93.6994 238.349 95.4482 235.876 96.2832 cv
234.838 96.6338 233.774 96.8048 232.723 96.8048 cv
.564706 .639216 .72549 rgb
f
231.466 95.1446 mo
229.907 94.8971 228.447 94.2033 227.271 93.1546 cv
226.408 92.385 225.698 91.4245 225.213 90.3084 cv
226.359 92.9452 228.763 94.7153 231.466 95.1446 cv
233.071 94.9196 mo
229.642 94.9199 226.443 92.7576 225.285 89.329 cv
225.04 88.6046 224.903 87.8697 224.863 87.1419 cv
231.9 87.1419 li
234.486 94.796 li
234.013 94.8791 233.539 94.9195 233.071 94.9196 cv
235.401 94.8036 mo
235.403 94.803 235.405 94.8024 235.407 94.8018 cv
235.405 94.8025 235.403 94.803 235.401 94.8036 cv
235.428 94.7944 mo
235.43 94.7939 235.431 94.7934 235.433 94.7929 cv
235.431 94.7934 235.43 94.7939 235.428 94.7944 cv
235.45 94.7868 mo
235.452 94.786 235.455 94.7852 235.457 94.7844 cv
235.455 94.7852 235.452 94.786 235.45 94.7868 cv
235.476 94.7778 mo
235.479 94.7766 235.483 94.7754 235.486 94.7741 cv
235.483 94.7754 235.48 94.7765 235.476 94.7778 cv
235.496 94.7705 mo
235.505 94.7675 235.514 94.7644 235.522 94.7613 cv
235.514 94.7644 235.505 94.7675 235.496 94.7705 cv
235.522 94.7612 mo
236.828 94.2935 237.942 93.5255 238.818 92.564 cv
238.797 92.5845 238.776 92.6049 238.755 92.6253 cv
240.134 91.1452 240.937 89.1887 240.968 87.1419 cv
240.969 87.1419 li
240.921 90.4783 238.829 93.577 235.522 94.7612 cv
236.225 94.2884 mo
233.81 87.1419 li
240.346 87.1419 li
240.457 89.3968 239.622 91.5823 238.1 93.1929 cv
237.537 93.6315 236.91 94.003 236.225 94.2884 cv
225.203 90.2855 mo
225.203 90.2845 225.203 90.2839 225.202 90.2829 cv
225.203 90.2839 225.203 90.2845 225.203 90.2855 cv
225.201 90.2792 mo
225.198 90.2729 225.195 90.2661 225.192 90.2598 cv
225.195 90.2661 225.198 90.2729 225.201 90.2792 cv
224.954 89.6326 mo
224.953 89.6305 224.953 89.6283 224.952 89.6263 cv
224.953 89.6283 224.953 89.6305 224.954 89.6326 cv
224.946 89.6085 mo
224.945 89.6067 224.945 89.6051 224.944 89.6032 cv
224.945 89.6049 224.945 89.6068 224.946 89.6085 cv
224.937 89.5812 mo
224.936 89.5791 224.936 89.5771 224.935 89.575 cv
224.936 89.5771 224.936 89.5791 224.937 89.5812 cv
224.93 89.5585 mo
224.929 89.5561 224.928 89.5532 224.927 89.5508 cv
224.928 89.5533 224.929 89.556 224.93 89.5585 cv
224.922 89.5335 mo
224.921 89.5308 224.92 89.5287 224.919 89.5261 cv
224.92 89.5285 224.921 89.531 224.922 89.5335 cv
224.913 89.5079 mo
224.912 89.5044 224.911 89.501 224.91 89.4976 cv
224.911 89.501 224.912 89.5045 224.913 89.5079 cv
224.906 89.4859 mo
224.905 89.4822 224.904 89.4786 224.903 89.4749 cv
224.904 89.4785 224.905 89.4823 224.906 89.4859 cv
224.899 89.4607 mo
224.897 89.4549 224.895 89.4485 224.893 89.4428 cv
224.895 89.4486 224.897 89.4549 224.899 89.4607 cv
224.891 89.4357 mo
224.889 89.4307 224.888 89.4256 224.886 89.4206 cv
224.888 89.4255 224.889 89.4308 224.891 89.4357 cv
224.885 89.4174 mo
224.655 88.6617 224.539 87.8966 224.528 87.1419 cv
224.529 87.1419 li
224.539 87.8965 224.655 88.6612 224.885 89.4174 cv
.980392 .870588 .709804 rgb
f
234.486 94.796 mo
231.9 87.1419 li
231.933 87.1419 li
234.517 94.7904 li
234.506 94.7923 234.496 94.7941 234.486 94.796 cv
234.768 94.7411 mo
232.201 87.1419 li
233.381 87.1419 li
235.845 94.4354 li
235.798 94.4523 235.75 94.4688 235.702 94.4849 cv
235.392 94.5897 235.081 94.6748 234.768 94.7411 cv
.956863 .839216 .682353 rgb
f
235.845 94.4354 mo
233.381 87.1419 li
233.81 87.1419 li
236.225 94.2884 li
236.1 94.3402 235.973 94.3893 235.845 94.4354 cv
.909804 .756863 .576471 rgb
f
234.517 94.7904 mo
231.933 87.1419 li
232.201 87.1419 li
234.768 94.7411 li
234.685 94.7589 234.6 94.7753 234.517 94.7904 cv
f
238.1 93.1929 mo
239.622 91.5823 240.457 89.3968 240.346 87.1419 cv
240.968 87.1419 li
240.937 89.1887 240.134 91.1452 238.755 92.6253 cv
238.547 92.8247 238.329 93.0144 238.1 93.1929 cv
.984314 .972549 .960784 rgb
f
232.747 95.2458 mo
232.315 95.2458 231.887 95.2115 231.466 95.1446 cv
228.763 94.7153 226.359 92.9452 225.213 90.3084 cv
225.21 90.301 225.207 90.293 225.203 90.2855 cv
225.203 90.2845 225.203 90.2839 225.202 90.2829 cv
225.202 90.2817 225.201 90.2804 225.201 90.2792 cv
225.198 90.2729 225.195 90.2661 225.192 90.2598 cv
225.108 90.0629 225.031 89.8615 224.962 89.6552 cv
224.959 89.6476 224.957 89.6402 224.954 89.6326 cv
224.953 89.6305 224.953 89.6283 224.952 89.6263 cv
224.95 89.6202 224.948 89.6145 224.946 89.6085 cv
224.945 89.6068 224.945 89.6049 224.944 89.6032 cv
224.942 89.5959 224.939 89.5886 224.937 89.5812 cv
224.936 89.5791 224.936 89.5771 224.935 89.575 cv
224.933 89.5696 224.931 89.5639 224.93 89.5585 cv
224.929 89.556 224.928 89.5533 224.927 89.5508 cv
224.925 89.545 224.923 89.5393 224.922 89.5335 cv
224.921 89.531 224.92 89.5285 224.919 89.5261 cv
224.917 89.5201 224.915 89.5139 224.913 89.5079 cv
224.912 89.5045 224.911 89.501 224.91 89.4976 cv
224.909 89.4937 224.908 89.4898 224.906 89.4859 cv
224.905 89.4823 224.904 89.4785 224.903 89.4749 cv
224.902 89.47 224.9 89.4656 224.899 89.4607 cv
224.897 89.4549 224.895 89.4486 224.893 89.4428 cv
224.892 89.4403 224.892 89.4381 224.891 89.4357 cv
224.889 89.4308 224.888 89.4255 224.886 89.4206 cv
224.886 89.4195 224.886 89.4185 224.885 89.4174 cv
224.655 88.6612 224.539 87.8965 224.529 87.1419 cv
224.863 87.1419 li
224.903 87.8697 225.04 88.6046 225.285 89.329 cv
226.443 92.7576 229.642 94.9199 233.071 94.9196 cv
233.539 94.9195 234.013 94.8791 234.486 94.796 cv
234.496 94.7941 234.506 94.7923 234.517 94.7904 cv
234.6 94.7753 234.685 94.7589 234.768 94.7411 cv
235.081 94.6748 235.392 94.5897 235.702 94.4849 cv
235.75 94.4688 235.798 94.4523 235.845 94.4354 cv
235.973 94.3893 236.1 94.3402 236.225 94.2884 cv
236.225 94.2884 li
236.91 94.003 237.537 93.6315 238.1 93.1929 cv
238.329 93.0144 238.547 92.8247 238.755 92.6253 cv
238.776 92.6049 238.797 92.5845 238.818 92.564 cv
237.942 93.5255 236.828 94.2935 235.522 94.7612 cv
235.522 94.7613 235.522 94.7613 235.522 94.7613 cv
235.514 94.7644 235.505 94.7675 235.496 94.7705 cv
235.493 94.7717 235.49 94.7729 235.486 94.7741 cv
235.483 94.7754 235.479 94.7766 235.476 94.7778 cv
235.47 94.78 235.463 94.7822 235.457 94.7844 cv
235.455 94.7852 235.452 94.786 235.45 94.7868 cv
235.444 94.7888 235.438 94.7908 235.433 94.7929 cv
235.431 94.7934 235.43 94.7939 235.428 94.7944 cv
235.421 94.7969 235.414 94.7994 235.407 94.8018 cv
235.405 94.8024 235.403 94.803 235.401 94.8036 cv
235.394 94.8061 235.386 94.8087 235.379 94.8112 cv
234.507 95.1059 233.62 95.2458 232.747 95.2458 cv
.909804 .756863 .576471 rgb
f
224.528 87.1419 mo
223.766 87.1419 li
223.745 85.4175 224.222 83.7401 225.104 82.303 cv
225.337 83.4713 li
224.795 84.6023 224.509 85.8577 224.528 87.1419 cv
.65098 .694118 .752941 rgb
f
241.733 87.1419 mo
240.969 87.1419 li
240.98 86.3203 240.868 85.4842 240.62 84.6588 cv
240.619 84.6567 240.618 84.6545 240.618 84.6524 cv
240.616 84.6476 240.615 84.6431 240.613 84.6384 cv
240.612 84.6353 240.612 84.6323 240.611 84.6292 cv
240.609 84.625 240.608 84.6203 240.607 84.6161 cv
240.606 84.6128 240.604 84.6091 240.603 84.6058 cv
240.602 84.601 240.6 84.5963 240.599 84.5915 cv
240.597 84.5853 240.595 84.579 240.593 84.5727 cv
240.592 84.5698 240.591 84.5667 240.59 84.5638 cv
240.589 84.559 240.587 84.5543 240.586 84.5495 cv
240.585 84.5466 240.584 84.543 240.583 84.5401 cv
240.581 84.5353 240.58 84.5304 240.578 84.5256 cv
240.577 84.5228 240.576 84.5199 240.575 84.517 cv
240.573 84.5108 240.572 84.5049 240.57 84.4986 cv
240.569 84.497 240.569 84.4957 240.568 84.4941 cv
240.566 84.4866 240.563 84.4789 240.561 84.4714 cv
240.56 84.4693 240.559 84.4666 240.558 84.4645 cv
240.557 84.4591 240.555 84.4534 240.553 84.448 cv
240.552 84.4454 240.551 84.4428 240.55 84.4402 cv
240.549 84.4348 240.547 84.4292 240.545 84.4238 cv
240.544 84.4215 240.543 84.4193 240.543 84.4169 cv
240.54 84.4092 240.538 84.4016 240.535 84.3938 cv
240.535 84.3938 li
240.529 84.3776 240.524 84.3614 240.518 84.3451 cv
240.516 84.3389 240.514 84.3325 240.512 84.3262 cv
239.335 80.9393 236.16 78.806 232.756 78.8033 cv
232.754 78.8033 232.752 78.8033 232.749 78.8033 cv
232.749 78.8033 li
232.749 78.8033 li
232.749 78.8033 232.748 78.8033 232.748 78.8033 cv
231.881 78.8035 231 78.9418 230.133 79.2327 cv
230.128 79.2344 230.123 79.2362 230.118 79.2379 cv
230.118 79.2379 li
230.109 79.241 230.1 79.244 230.091 79.2471 cv
230.09 79.2473 230.09 79.2475 230.089 79.2477 cv
227.917 79.99 226.257 81.552 225.337 83.4713 cv
225.104 82.303 li
226.162 80.5778 227.805 79.199 229.869 78.5013 cv
230.824 78.1788 231.803 78.0216 232.771 78.0216 cv
235.112 78.0216 237.39 78.9415 239.115 80.6665 cv
240.098 81.6495 240.824 82.8196 241.271 84.1447 cv
241.603 85.1257 241.747 86.1364 241.733 87.1419 cv
.721569 .768627 .823529 rgb
f
240.969 87.1419 mo
240.968 87.1419 li
240.98 86.3203 240.868 85.4846 240.62 84.6588 cv
240.868 85.4842 240.98 86.3203 240.969 87.1419 cv
240.346 87.1419 mo
233.81 87.1419 li
231.188 79.3815 li
231.505 79.3444 231.822 79.3262 232.136 79.3262 cv
235.565 79.3262 238.764 81.4882 239.922 84.9167 cv
240.171 85.6539 240.309 86.4017 240.346 87.1419 cv
231.9 87.1419 mo
224.863 87.1419 li
224.743 84.9232 225.536 82.7682 227.002 81.1589 cv
225.41 82.721 224.499 84.8855 224.529 87.1419 cv
224.528 87.1419 li
224.509 85.8577 224.795 84.6023 225.337 83.4713 cv
226.257 81.552 227.917 79.99 230.089 79.2477 cv
228.944 79.6394 227.947 80.2644 227.119 81.0443 cv
227.798 80.5209 228.565 80.09 229.416 79.7912 cv
231.9 87.1419 li
240.618 84.6524 mo
240.616 84.6478 240.615 84.643 240.613 84.6384 cv
240.615 84.6431 240.616 84.6476 240.618 84.6524 cv
240.611 84.6292 mo
240.609 84.6248 240.608 84.6205 240.607 84.6161 cv
240.608 84.6203 240.609 84.625 240.611 84.6292 cv
240.603 84.6058 mo
240.602 84.601 240.6 84.5963 240.599 84.5915 cv
240.6 84.5963 240.602 84.601 240.603 84.6058 cv
240.593 84.5727 mo
240.592 84.5698 240.591 84.5667 240.59 84.5638 cv
240.591 84.5667 240.592 84.5698 240.593 84.5727 cv
240.586 84.5495 mo
240.585 84.5463 240.584 84.5432 240.583 84.5401 cv
240.584 84.543 240.585 84.5466 240.586 84.5495 cv
240.578 84.5256 mo
240.577 84.5227 240.576 84.52 240.575 84.517 cv
240.576 84.5199 240.577 84.5228 240.578 84.5256 cv
240.57 84.4986 mo
240.569 84.4971 240.569 84.4956 240.568 84.4941 cv
240.569 84.4957 240.569 84.497 240.57 84.4986 cv
240.561 84.4714 mo
240.56 84.4691 240.559 84.4668 240.558 84.4645 cv
240.559 84.4666 240.56 84.4693 240.561 84.4714 cv
240.553 84.448 mo
240.552 84.4453 240.551 84.4429 240.55 84.4402 cv
240.551 84.4428 240.552 84.4454 240.553 84.448 cv
240.545 84.4238 mo
240.544 84.4215 240.543 84.4192 240.543 84.4169 cv
240.543 84.4193 240.544 84.4215 240.545 84.4238 cv
240.535 84.3938 mo
240.535 84.3938 li
240.529 84.3776 240.524 84.3614 240.518 84.3451 cv
240.524 84.3614 240.529 84.3776 240.535 84.3938 cv
240.535 84.3938 li
240.512 84.3262 mo
239.335 80.9395 236.159 78.8063 232.756 78.8033 cv
236.16 78.806 239.335 80.9393 240.512 84.3262 cv
230.091 79.2471 mo
230.1 79.244 230.109 79.241 230.118 79.2379 cv
230.118 79.2379 li
230.118 79.2379 li
230.118 79.2379 li
230.109 79.241 230.1 79.244 230.091 79.2471 cv
232.748 78.8033 mo
232.748 78.8033 232.749 78.8033 232.749 78.8033 cv
232.749 78.8033 li
232.749 78.8033 232.748 78.8033 232.748 78.8033 cv
.972549 .905882 .811765 rgb
f
233.381 87.1419 mo
232.201 87.1419 li
229.687 79.7014 li
230.049 79.5882 230.414 79.5014 230.779 79.4399 cv
233.381 87.1419 li
231.933 87.1419 mo
231.9 87.1419 li
229.416 79.7912 li
229.426 79.7877 229.436 79.7843 229.446 79.7808 cv
231.933 87.1419 li
230.118 79.2379 mo
230.118 79.2379 li
230.118 79.2379 li
230.123 79.2362 230.128 79.2344 230.133 79.2327 cv
230.128 79.2344 230.123 79.2362 230.118 79.2379 cv
230.118 79.2379 li
.956863 .886274 .796078 rgb
f
233.81 87.1419 mo
233.381 87.1419 li
230.779 79.4399 li
230.915 79.4169 231.052 79.3974 231.188 79.3815 cv
233.81 87.1419 li
.929412 .839216 .733333 rgb
f
232.201 87.1419 mo
231.933 87.1419 li
229.446 79.7808 li
229.466 79.7741 229.485 79.7674 229.505 79.7608 cv
229.565 79.7403 229.626 79.7204 229.687 79.7014 cv
232.201 87.1419 li
f
240.62 84.6588 mo
240.619 84.6567 240.618 84.6545 240.618 84.6524 cv
240.618 84.6545 240.619 84.6567 240.62 84.6588 cv
240.613 84.6384 mo
240.612 84.6352 240.612 84.6323 240.611 84.6292 cv
240.612 84.6323 240.612 84.6353 240.613 84.6384 cv
240.607 84.6161 mo
240.606 84.6127 240.604 84.6092 240.603 84.6058 cv
240.604 84.6091 240.606 84.6128 240.607 84.6161 cv
240.599 84.5915 mo
240.597 84.5852 240.595 84.579 240.593 84.5727 cv
240.595 84.579 240.597 84.5853 240.599 84.5915 cv
240.59 84.5638 mo
240.589 84.5588 240.587 84.5544 240.586 84.5495 cv
240.587 84.5543 240.589 84.559 240.59 84.5638 cv
240.583 84.5401 mo
240.581 84.5351 240.58 84.5306 240.578 84.5256 cv
240.58 84.5304 240.581 84.5353 240.583 84.5401 cv
240.575 84.517 mo
240.574 84.511 240.571 84.5046 240.57 84.4986 cv
240.572 84.5049 240.573 84.5108 240.575 84.517 cv
240.568 84.4941 mo
240.566 84.4865 240.563 84.479 240.561 84.4714 cv
240.563 84.4789 240.566 84.4866 240.568 84.4941 cv
240.558 84.4645 mo
240.557 84.459 240.555 84.4535 240.553 84.448 cv
240.555 84.4534 240.557 84.4591 240.558 84.4645 cv
240.55 84.4402 mo
240.549 84.4347 240.547 84.4293 240.545 84.4238 cv
240.547 84.4292 240.549 84.4348 240.55 84.4402 cv
240.543 84.4169 mo
240.54 84.4093 240.537 84.4015 240.535 84.3938 cv
240.538 84.4016 240.54 84.4092 240.543 84.4169 cv
240.518 84.3451 mo
240.516 84.3389 240.514 84.3325 240.512 84.3262 cv
240.514 84.3325 240.516 84.3389 240.518 84.3451 cv
230.089 79.2477 mo
230.09 79.2475 230.09 79.2473 230.091 79.2471 cv
230.09 79.2472 230.09 79.2475 230.089 79.2477 cv
230.133 79.2327 mo
231 78.9418 231.881 78.8035 232.748 78.8033 cv
231.881 78.8036 231 78.9419 230.133 79.2327 cv
230.133 79.2327 230.133 79.2327 230.133 79.2327 cv
232.756 78.8033 mo
232.754 78.8033 232.752 78.8033 232.749 78.8033 cv
232.749 78.8033 li
232.752 78.8033 232.754 78.8033 232.756 78.8033 cv
.94902 .952941 .964706 rgb
f
240.968 87.1419 mo
240.346 87.1419 li
240.309 86.4017 240.171 85.6539 239.922 84.9167 cv
238.764 81.4882 235.565 79.3262 232.136 79.3262 cv
231.822 79.3262 231.505 79.3444 231.188 79.3815 cv
231.056 78.9894 li
230.748 79.054 230.439 79.1301 230.133 79.2327 cv
231 78.9419 231.881 78.8036 232.748 78.8033 cv
232.748 78.8033 232.749 78.8033 232.749 78.8033 cv
232.752 78.8033 232.754 78.8033 232.756 78.8033 cv
236.159 78.8063 239.335 80.9395 240.512 84.3262 cv
240.514 84.3325 240.516 84.3389 240.518 84.3451 cv
240.524 84.3614 240.529 84.3776 240.535 84.3938 cv
240.535 84.3938 li
240.537 84.4015 240.54 84.4093 240.543 84.4169 cv
240.543 84.4192 240.544 84.4215 240.545 84.4238 cv
240.547 84.4293 240.549 84.4347 240.55 84.4402 cv
240.551 84.4429 240.552 84.4453 240.553 84.448 cv
240.555 84.4535 240.557 84.459 240.558 84.4645 cv
240.559 84.4668 240.56 84.4691 240.561 84.4714 cv
240.563 84.479 240.566 84.4865 240.568 84.4941 cv
240.569 84.4956 240.569 84.4971 240.57 84.4986 cv
240.571 84.5046 240.574 84.511 240.575 84.517 cv
240.576 84.52 240.577 84.5227 240.578 84.5256 cv
240.58 84.5306 240.581 84.5351 240.583 84.5401 cv
240.584 84.5432 240.585 84.5463 240.586 84.5495 cv
240.587 84.5544 240.589 84.5588 240.59 84.5638 cv
240.591 84.5667 240.592 84.5698 240.593 84.5727 cv
240.595 84.579 240.597 84.5852 240.599 84.5915 cv
240.6 84.5963 240.602 84.601 240.603 84.6058 cv
240.604 84.6092 240.606 84.6127 240.607 84.6161 cv
240.608 84.6205 240.609 84.6248 240.611 84.6292 cv
240.612 84.6323 240.612 84.6352 240.613 84.6384 cv
240.615 84.643 240.616 84.6478 240.618 84.6524 cv
240.618 84.6545 240.619 84.6567 240.62 84.6588 cv
240.868 85.4846 240.98 86.3203 240.968 87.1419 cv
227.119 81.0443 mo
227.947 80.2644 228.944 79.6394 230.089 79.2477 cv
230.09 79.2475 230.09 79.2472 230.091 79.2471 cv
230.1 79.244 230.109 79.241 230.118 79.2379 cv
229.848 79.329 229.589 79.437 229.336 79.5527 cv
229.416 79.7912 li
228.565 80.09 227.798 80.5209 227.119 81.0443 cv
.972549 .968627 .964706 rgb
f
229.416 79.7912 mo
229.336 79.5527 li
229.589 79.437 229.848 79.329 230.118 79.2379 cv
230.118 79.2379 li
230.123 79.2362 230.128 79.2344 230.133 79.2327 cv
230.133 79.2327 230.133 79.2327 230.133 79.2327 cv
230.439 79.1301 230.748 79.054 231.056 78.9894 cv
231.188 79.3815 li
231.188 79.3815 li
231.056 78.9894 li
230.923 79.0173 230.79 79.0489 230.658 79.0822 cv
230.779 79.4399 li
230.414 79.5014 230.049 79.5882 229.687 79.7014 cv
229.604 79.4541 li
229.371 79.5587 li
229.446 79.7808 li
229.436 79.7843 229.426 79.7877 229.416 79.7912 cv
.972549 .964706 .960784 rgb
f
230.779 79.4399 mo
230.658 79.0822 li
230.79 79.0489 230.923 79.0173 231.056 78.9894 cv
231.188 79.3815 li
231.052 79.3974 230.915 79.4169 230.779 79.4399 cv
.968627 .960784 .952941 rgb
f
229.446 79.7808 mo
229.371 79.5587 li
229.604 79.4541 li
229.687 79.7014 li
229.626 79.7204 229.565 79.7403 229.505 79.7608 cv
229.485 79.7674 229.466 79.7741 229.446 79.7808 cv
f
224.863 87.1419 mo
224.529 87.1419 li
224.499 84.8855 225.41 82.721 227.002 81.1589 cv
225.536 82.7682 224.743 84.9232 224.863 87.1419 cv
.929412 .839216 .733333 rgb
f
200.698 95.8251 mo
198.155 95.8251 195.68 94.826 193.806 92.952 cv
192.738 91.8841 191.95 90.6122 191.464 89.173 cv
190.628 86.6993 190.806 84.0487 191.964 81.7091 cv
193.122 79.3695 195.121 77.6207 197.595 76.7858 cv
198.633 76.4352 199.697 76.2642 200.748 76.2642 cv
203.292 76.2642 205.765 77.2633 207.639 79.1371 cv
208.707 80.205 209.496 81.477 209.982 82.9162 cv
211.706 88.0216 208.956 93.5784 203.851 95.3039 cv
202.813 95.6543 201.75 95.8251 200.698 95.8251 cv
192.936 88.6751 mo
194.094 92.1037 197.293 94.2658 200.722 94.2658 cv
201.594 94.2658 202.481 94.1257 203.353 93.8311 cv
203.353 93.8311 li
203.361 93.8286 203.368 93.8261 203.376 93.8235 cv
203.377 93.8229 203.379 93.8224 203.381 93.8217 cv
203.388 93.8193 203.395 93.8168 203.402 93.8144 cv
203.404 93.8138 203.405 93.8133 203.407 93.8128 cv
203.413 93.8108 203.419 93.8087 203.424 93.8067 cv
203.427 93.8059 203.429 93.8051 203.431 93.8043 cv
203.438 93.8021 203.444 93.7999 203.45 93.7977 cv
203.454 93.7965 203.457 93.7953 203.46 93.7941 cv
203.464 93.7929 203.467 93.7916 203.471 93.7904 cv
203.479 93.7875 203.487 93.7845 203.495 93.7816 cv
203.496 93.7815 203.496 93.7813 203.497 93.7811 cv
206.942 92.5474 209.068 89.2356 208.938 85.7422 cv
209.19 85.7422 209.442 85.7422 209.694 85.7422 cv
209.669 84.8849 209.534 84.0189 209.246 83.1649 cv
208.798 81.8398 208.073 80.6698 207.09 79.6866 cv
205.365 77.9618 203.087 77.0421 200.746 77.0421 cv
199.778 77.0421 198.799 77.1994 197.844 77.5222 cv
195.567 78.2904 193.726 79.9002 192.66 82.0539 cv
192.081 83.2229 191.777 84.4766 191.735 85.7423 cv
191.993 85.7423 192.25 85.7423 192.507 85.7423 cv
192.474 86.6322 192.586 87.5416 192.86 88.4379 cv
192.86 88.4387 192.86 88.4395 192.861 88.4402 cv
192.862 88.4455 192.864 88.4505 192.865 88.4558 cv
192.866 88.4579 192.867 88.4601 192.867 88.4622 cv
192.869 88.469 192.871 88.4757 192.874 88.4826 cv
192.875 88.4867 192.876 88.4907 192.877 88.4949 cv
192.879 88.4985 192.88 88.5021 192.881 88.5057 cv
192.882 88.5097 192.883 88.5135 192.885 88.5175 cv
192.886 88.5209 192.887 88.5244 192.888 88.5278 cv
192.89 88.5337 192.892 88.5398 192.893 88.5457 cv
192.894 88.5483 192.895 88.5509 192.896 88.5536 cv
192.898 88.5592 192.9 88.565 192.902 88.5707 cv
192.902 88.5731 192.903 88.576 192.904 88.5784 cv
192.906 88.5838 192.908 88.5893 192.909 88.5948 cv
192.91 88.5969 192.911 88.5992 192.911 88.6013 cv
192.914 88.6086 192.916 88.6157 192.919 88.623 cv
192.919 88.6249 192.92 88.6268 192.921 88.6286 cv
192.922 88.6345 192.924 88.6405 192.926 88.6463 cv
192.927 88.6484 192.928 88.6503 192.928 88.6524 cv
192.931 88.66 192.934 88.6676 192.936 88.6751 cv
192.936 88.6751 li
.447059 .517647 .607843 rgb
f
200.722 94.2658 mo
197.293 94.2658 194.094 92.1037 192.936 88.6751 cv
194.094 92.1034 197.293 94.2656 200.722 94.2657 cv
201.594 94.2657 202.481 94.1258 203.353 93.8311 cv
202.481 94.1257 201.594 94.2658 200.722 94.2658 cv
201.045 93.9395 mo
197.893 93.9397 194.936 92.1123 193.579 89.1541 cv
204.831 85.7422 li
205.983 85.7422 207.136 85.7422 208.288 85.7422 cv
208.531 88.144 207.691 90.5027 206.074 92.213 cv
205.371 92.7607 204.569 93.2036 203.677 93.505 cv
202.805 93.7995 201.917 93.9395 201.045 93.9395 cv
203.376 93.8235 mo
203.377 93.8229 203.379 93.8223 203.381 93.8217 cv
203.379 93.8224 203.377 93.8229 203.376 93.8235 cv
203.402 93.8144 mo
203.404 93.8138 203.405 93.8133 203.407 93.8128 cv
203.405 93.8133 203.404 93.8138 203.402 93.8144 cv
203.424 93.8067 mo
203.427 93.8059 203.429 93.8051 203.431 93.8043 cv
203.429 93.8051 203.427 93.8059 203.424 93.8067 cv
203.45 93.7977 mo
203.454 93.7965 203.457 93.7953 203.46 93.7941 cv
203.457 93.7953 203.454 93.7965 203.45 93.7977 cv
203.471 93.7904 mo
203.479 93.7875 203.487 93.7846 203.495 93.7816 cv
203.487 93.7845 203.479 93.7875 203.471 93.7904 cv
203.497 93.7811 mo
204.802 93.3134 205.916 92.5454 206.792 91.5839 cv
206.771 91.6045 206.75 91.6249 206.729 91.6452 cv
208.203 90.0641 209.018 87.94 208.937 85.7422 cv
208.938 85.7422 208.938 85.7422 208.938 85.7422 cv
209.068 89.2356 206.942 92.5474 203.497 93.7811 cv
192.928 88.6524 mo
192.928 88.6503 192.927 88.6484 192.926 88.6463 cv
192.927 88.6484 192.928 88.6503 192.928 88.6524 cv
192.921 88.6286 mo
192.92 88.6268 192.919 88.6249 192.919 88.623 cv
192.919 88.6249 192.92 88.6267 192.921 88.6286 cv
192.911 88.6013 mo
192.911 88.5992 192.91 88.5969 192.909 88.5948 cv
192.91 88.5968 192.911 88.5992 192.911 88.6013 cv
192.904 88.5784 mo
192.903 88.576 192.902 88.5731 192.902 88.5707 cv
192.902 88.5733 192.903 88.5757 192.904 88.5784 cv
192.896 88.5536 mo
192.895 88.5509 192.894 88.5483 192.893 88.5457 cv
192.894 88.5483 192.895 88.5509 192.896 88.5536 cv
192.888 88.5278 mo
192.887 88.5244 192.886 88.5209 192.885 88.5175 cv
192.886 88.5209 192.887 88.5244 192.888 88.5278 cv
192.881 88.5057 mo
192.88 88.5021 192.879 88.4985 192.877 88.4949 cv
192.879 88.4984 192.88 88.5022 192.881 88.5057 cv
192.874 88.4826 mo
192.871 88.4757 192.869 88.469 192.867 88.4622 cv
192.869 88.469 192.871 88.4758 192.874 88.4826 cv
192.865 88.4558 mo
192.864 88.4505 192.862 88.4455 192.861 88.4402 cv
192.862 88.4455 192.864 88.4505 192.865 88.4558 cv
192.86 88.4379 mo
192.586 87.5416 192.474 86.6322 192.507 85.7423 cv
192.508 85.7423 192.508 85.7423 192.509 85.7423 cv
192.475 86.6319 192.586 87.5411 192.86 88.4379 cv
193.008 87.4361 mo
192.886 86.8706 192.827 86.3036 192.825 85.7423 cv
194.748 85.7423 196.672 85.7423 198.594 85.7423 cv
193.008 87.4361 li
.956863 .960784 .968627 rgb
f
193.579 89.1541 mo
193.575 89.1444 193.57 89.1349 193.566 89.1253 cv
204.723 85.7422 li
204.759 85.7422 204.795 85.7422 204.831 85.7422 cv
193.579 89.1541 li
193.464 88.8908 mo
193.39 88.714 193.322 88.5331 193.259 88.3489 cv
193.201 88.1772 193.149 88.0048 193.103 87.8322 cv
199.996 85.7422 li
201.28 85.7422 202.564 85.7422 203.848 85.7422 cv
193.464 88.8908 li
.909804 .92549 .929412 rgb
f
193.103 87.8322 mo
193.068 87.7003 193.036 87.5683 193.008 87.4361 cv
198.594 85.7423 li
199.061 85.7423 199.529 85.7422 199.996 85.7422 cv
193.103 87.8322 li
.811765 .831372 .854902 rgb
f
193.566 89.1253 mo
193.531 89.0477 193.497 88.9699 193.464 88.8908 cv
203.848 85.7422 li
204.139 85.7422 204.431 85.7422 204.723 85.7422 cv
193.566 89.1253 li
f
206.074 92.213 mo
207.691 90.5027 208.531 88.144 208.288 85.7422 cv
208.505 85.7422 208.721 85.7422 208.937 85.7422 cv
209.018 87.94 208.203 90.0641 206.729 91.6452 cv
206.521 91.8447 206.303 92.0345 206.074 92.213 cv
.980392 .980392 .984314 rgb
f
200.722 94.2657 mo
197.293 94.2656 194.094 92.1034 192.936 88.6751 cv
192.936 88.6751 li
192.934 88.6676 192.931 88.66 192.928 88.6524 cv
192.928 88.6503 192.927 88.6484 192.926 88.6463 cv
192.924 88.6405 192.922 88.6345 192.921 88.6286 cv
192.92 88.6267 192.919 88.6249 192.919 88.623 cv
192.916 88.6157 192.914 88.6086 192.911 88.6013 cv
192.911 88.5992 192.91 88.5968 192.909 88.5948 cv
192.908 88.5893 192.906 88.5838 192.904 88.5784 cv
192.903 88.5757 192.902 88.5733 192.902 88.5707 cv
192.9 88.565 192.898 88.5592 192.896 88.5536 cv
192.895 88.5509 192.894 88.5483 192.893 88.5457 cv
192.892 88.5398 192.89 88.5337 192.888 88.5278 cv
192.887 88.5244 192.886 88.5209 192.885 88.5175 cv
192.883 88.5135 192.882 88.5097 192.881 88.5057 cv
192.88 88.5022 192.879 88.4984 192.877 88.4949 cv
192.876 88.4907 192.875 88.4867 192.874 88.4826 cv
192.871 88.4758 192.869 88.469 192.867 88.4622 cv
192.867 88.4601 192.866 88.4579 192.865 88.4558 cv
192.864 88.4505 192.862 88.4455 192.861 88.4402 cv
192.86 88.4395 192.86 88.4387 192.86 88.4379 cv
192.586 87.5411 192.475 86.6319 192.509 85.7423 cv
192.614 85.7423 192.72 85.7423 192.825 85.7423 cv
192.827 86.3036 192.886 86.8706 193.008 87.4361 cv
193.008 87.4361 li
193.036 87.5683 193.068 87.7003 193.103 87.8322 cv
193.149 88.0048 193.201 88.1772 193.259 88.3489 cv
193.322 88.5331 193.39 88.714 193.464 88.8908 cv
193.497 88.9699 193.531 89.0477 193.566 89.1253 cv
193.57 89.1349 193.575 89.1444 193.579 89.1541 cv
194.936 92.1123 197.893 93.9397 201.045 93.9395 cv
201.917 93.9395 202.805 93.7995 203.677 93.505 cv
204.569 93.2036 205.371 92.7607 206.074 92.213 cv
206.303 92.0345 206.521 91.8447 206.729 91.6452 cv
206.75 91.6249 206.771 91.6045 206.792 91.5839 cv
205.916 92.5454 204.802 93.3134 203.497 93.7811 cv
203.496 93.7813 203.496 93.7815 203.495 93.7816 cv
203.487 93.7846 203.479 93.7875 203.471 93.7904 cv
203.467 93.7916 203.464 93.7929 203.46 93.7941 cv
203.457 93.7953 203.454 93.7965 203.45 93.7977 cv
203.444 93.7999 203.438 93.8021 203.431 93.8043 cv
203.429 93.8051 203.427 93.8059 203.424 93.8067 cv
203.419 93.8087 203.413 93.8108 203.407 93.8128 cv
203.405 93.8133 203.404 93.8138 203.402 93.8144 cv
203.395 93.8168 203.388 93.8193 203.381 93.8217 cv
203.379 93.8223 203.377 93.8229 203.376 93.8235 cv
203.368 93.8261 203.361 93.8286 203.353 93.8311 cv
203.353 93.8311 li
202.481 94.1258 201.594 94.2657 200.722 94.2657 cv
.811765 .831372 .854902 rgb
f
191.735 85.7423 mo
191.777 84.4766 192.081 83.2229 192.66 82.0539 cv
193.726 79.9002 195.567 78.2904 197.844 77.5222 cv
198.799 77.1994 199.778 77.0421 200.746 77.0421 cv
203.087 77.0421 205.365 77.9618 207.09 79.6866 cv
208.073 80.6698 208.798 81.8398 209.246 83.1649 cv
209.534 84.0189 209.669 84.8849 209.694 85.7422 cv
209.442 85.7422 209.19 85.7422 208.938 85.7422 cv
208.923 85.3421 208.879 84.9398 208.803 84.5377 cv
208.865 84.5191 li
208.812 84.2458 208.749 83.9724 208.666 83.7 cv
208.571 83.3857 208.452 83.0857 208.323 82.7923 cv
208.277 82.8062 li
206.964 79.7339 203.949 77.8257 200.73 77.8232 cv
200.728 77.8232 200.726 77.8232 200.724 77.8232 cv
200.724 77.8232 li
200.724 77.8232 li
200.723 77.8232 200.723 77.8232 200.722 77.8232 cv
199.85 77.8233 198.964 77.9633 198.092 78.2578 cv
198.092 78.2578 li
198.083 78.2608 198.074 78.2638 198.065 78.2668 cv
198.064 78.2672 198.063 78.2675 198.062 78.2679 cv
194.752 79.4003 192.629 82.4388 192.507 85.7423 cv
192.25 85.7423 191.993 85.7423 191.735 85.7423 cv
.65098 .694118 .752941 rgb
f
192.507 85.7423 mo
192.629 82.4388 194.752 79.4003 198.062 78.2679 cv
196.918 78.6596 195.921 79.2847 195.094 80.0643 cv
195.796 79.5227 196.592 79.0805 197.479 78.7806 cv
198.351 78.486 199.238 78.346 200.111 78.346 cv
203.227 78.346 206.154 80.1324 207.531 83.0326 cv
198.594 85.7423 li
196.672 85.7423 194.748 85.7423 192.825 85.7423 cv
192.82 83.6732 193.603 81.6863 194.977 80.1788 cv
193.483 81.6439 192.589 83.6386 192.509 85.7423 cv
192.508 85.7423 192.508 85.7423 192.507 85.7423 cv
204.831 85.7422 mo
208.124 84.7436 li
208.2 85.0763 208.255 85.4096 208.288 85.7422 cv
207.136 85.7422 205.983 85.7422 204.831 85.7422 cv
208.937 85.7422 mo
208.923 85.3422 208.879 84.9398 208.803 84.5378 cv
208.803 84.5377 li
208.879 84.9398 208.923 85.3421 208.938 85.7422 cv
208.938 85.7422 208.938 85.7422 208.937 85.7422 cv
208.277 82.8062 mo
206.965 79.7341 203.949 77.826 200.73 77.8232 cv
203.949 77.8257 206.964 79.7339 208.277 82.8062 cv
208.277 82.8062 li
198.065 78.2668 mo
198.074 78.2638 198.083 78.2608 198.092 78.2578 cv
198.092 78.2578 li
198.092 78.2578 li
198.083 78.2608 198.074 78.2638 198.065 78.2668 cv
200.722 77.8232 mo
200.723 77.8232 200.723 77.8232 200.724 77.8232 cv
200.724 77.8232 li
200.723 77.8232 200.723 77.8232 200.722 77.8232 cv
.956863 .960784 .968627 rgb
f
199.996 85.7422 mo
207.697 83.4071 li
207.769 83.58 207.836 83.7566 207.896 83.9367 cv
207.956 84.1128 208.009 84.2892 208.056 84.4663 cv
203.848 85.7422 li
202.564 85.7422 201.28 85.7422 199.996 85.7422 cv
204.723 85.7422 mo
208.117 84.7129 li
208.12 84.7231 208.122 84.7334 208.124 84.7436 cv
204.831 85.7422 li
204.795 85.7422 204.759 85.7422 204.723 85.7422 cv
208.803 84.5378 mo
208.801 84.5275 208.799 84.517 208.797 84.5067 cv
208.839 84.494 li
208.789 84.2439 li
208.745 84.2572 li
208.682 83.9752 208.604 83.6938 208.509 83.4138 cv
208.483 83.3371 208.456 83.2608 208.428 83.1854 cv
208.479 83.17 li
208.429 83.0429 208.378 82.9165 208.323 82.7923 cv
208.277 82.8062 li
208.277 82.8062 li
208.323 82.7923 li
208.452 83.0857 208.571 83.3857 208.666 83.7 cv
208.749 83.9724 208.812 84.2458 208.865 84.5191 cv
208.803 84.5377 li
208.803 84.5378 li
.929412 .941176 .945098 rgb
f
198.594 85.7423 mo
207.531 83.0326 li
207.589 83.1554 207.645 83.2803 207.697 83.4071 cv
199.996 85.7422 li
199.529 85.7422 199.061 85.7423 198.594 85.7423 cv
208.428 83.1854 mo
208.381 83.0571 208.33 82.9307 208.277 82.8062 cv
208.323 82.7923 li
208.378 82.9165 208.429 83.0429 208.479 83.17 cv
208.428 83.1854 li
.870588 .882353 .901961 rgb
f
203.848 85.7422 mo
208.056 84.4663 li
208.078 84.5483 208.098 84.6308 208.117 84.7129 cv
204.723 85.7422 li
204.431 85.7422 204.139 85.7422 203.848 85.7422 cv
208.797 84.5067 mo
208.781 84.4236 208.764 84.3403 208.745 84.2572 cv
208.789 84.2439 li
208.839 84.494 li
208.797 84.5067 li
f
208.288 85.7422 mo
208.255 85.4096 208.2 85.0763 208.124 84.7436 cv
208.803 84.5378 li
208.879 84.9398 208.923 85.3422 208.937 85.7422 cv
208.721 85.7422 208.505 85.7422 208.288 85.7422 cv
.972549 .972549 .976471 rgb
f
208.124 84.7436 mo
208.122 84.7334 208.12 84.7231 208.117 84.7129 cv
208.797 84.5067 li
208.799 84.517 208.801 84.5275 208.803 84.5378 cv
208.124 84.7436 li
208.056 84.4663 mo
208.009 84.2892 207.956 84.1128 207.896 83.9367 cv
207.836 83.7566 207.769 83.58 207.697 83.4071 cv
208.428 83.1854 li
208.456 83.2608 208.483 83.3371 208.509 83.4138 cv
208.604 83.6938 208.682 83.9752 208.745 84.2572 cv
208.056 84.4663 li
.968627 .968627 .976471 rgb
f
198.062 78.2679 mo
198.063 78.2675 198.064 78.2672 198.065 78.2668 cv
198.064 78.2672 198.063 78.2675 198.062 78.2679 cv
198.092 78.2578 mo
198.964 77.9633 199.85 77.8233 200.722 77.8232 cv
199.85 77.8234 198.963 77.9633 198.092 78.2578 cv
200.73 77.8232 mo
200.728 77.8232 200.726 77.8232 200.724 77.8232 cv
200.724 77.8232 li
200.726 77.8232 200.728 77.8232 200.73 77.8232 cv
.941176 .945098 .956863 rgb
f
207.531 83.0326 mo
206.154 80.1324 203.227 78.346 200.111 78.346 cv
199.238 78.346 198.351 78.486 197.479 78.7806 cv
196.592 79.0805 195.796 79.5227 195.094 80.0643 cv
195.921 79.2847 196.918 78.6596 198.062 78.2679 cv
198.063 78.2675 198.064 78.2672 198.065 78.2668 cv
198.074 78.2638 198.083 78.2608 198.092 78.2578 cv
198.092 78.2578 li
198.963 77.9633 199.85 77.8234 200.722 77.8232 cv
200.723 77.8232 200.723 77.8232 200.724 77.8232 cv
200.726 77.8232 200.728 77.8232 200.73 77.8232 cv
203.949 77.826 206.965 79.7341 208.277 82.8062 cv
207.531 83.0326 li
.972549 .972549 .976471 rgb
f
207.697 83.4071 mo
207.645 83.2803 207.589 83.1554 207.531 83.0326 cv
208.277 82.8062 li
208.33 82.9307 208.381 83.0571 208.428 83.1854 cv
207.697 83.4071 li
.960784 .964706 .972549 rgb
f
208.117 84.7129 mo
208.098 84.6308 208.078 84.5483 208.056 84.4663 cv
208.745 84.2572 li
208.764 84.3403 208.781 84.4236 208.797 84.5067 cv
208.117 84.7129 li
f
192.509 85.7423 mo
192.589 83.6386 193.483 81.6439 194.977 80.1788 cv
193.603 81.6863 192.82 83.6732 192.825 85.7423 cv
192.72 85.7423 192.614 85.7423 192.509 85.7423 cv
.870588 .882353 .901961 rgb
f
216.983 112.325 mo
214.516 112.27 212.129 111.275 210.309 109.455 cv
209.241 108.387 208.453 107.115 207.966 105.676 cv
206.34 100.861 208.693 95.6461 213.247 93.62 cv
213.403 94.4031 li
209.75 96.1158 207.701 100.084 208.363 104.032 cv
208.622 104.032 208.882 104.032 209.141 104.032 cv
209.198 104.342 209.274 104.652 209.369 104.96 cv
209.369 104.961 209.369 104.962 209.369 104.962 cv
209.373 104.974 209.376 104.985 209.38 104.997 cv
209.38 104.997 li
209.381 105.001 209.383 105.006 209.384 105.01 cv
209.385 105.013 209.386 105.016 209.387 105.019 cv
209.388 105.023 209.39 105.027 209.391 105.032 cv
209.392 105.036 209.394 105.04 209.395 105.044 cv
209.396 105.049 209.398 105.054 209.4 105.059 cv
209.401 105.063 209.403 105.068 209.404 105.073 cv
209.405 105.076 209.406 105.079 209.407 105.082 cv
209.409 105.087 209.41 105.092 209.412 105.097 cv
209.413 105.1 209.414 105.102 209.414 105.104 cv
209.417 105.112 209.419 105.119 209.421 105.126 cv
209.422 105.128 209.423 105.13 209.423 105.132 cv
209.425 105.138 209.427 105.143 209.429 105.149 cv
209.43 105.151 209.431 105.153 209.431 105.156 cv
209.434 105.163 209.436 105.171 209.439 105.178 cv
209.453 105.221 209.468 105.263 209.483 105.305 cv
210.611 108.475 213.496 110.533 216.668 110.75 cv
216.983 112.325 li
224.202 109.399 mo
223.815 107.461 li
224.567 106.451 225.081 105.276 225.311 104.032 cv
225.575 104.032 225.838 104.032 226.102 104.032 cv
226.346 102.587 226.231 101.095 225.748 99.6675 cv
225.301 98.3424 224.576 97.1724 223.592 96.1894 cv
222.884 95.4811 222.082 94.9085 221.222 94.4797 cv
221.033 93.5367 li
222.171 94.02 223.228 94.7259 224.142 95.6397 cv
225.21 96.7076 225.998 97.9797 226.484 99.4188 cv
227.321 101.893 227.143 104.543 225.985 106.883 cv
225.519 107.824 224.916 108.67 224.202 109.399 cv
.447059 .517647 .607843 rgb
f
217.2 112.328 mo
217.127 112.328 217.055 112.327 216.983 112.325 cv
216.668 110.75 li
216.85 110.762 217.034 110.768 217.218 110.769 cv
217.22 110.769 217.222 110.769 217.225 110.769 cv
217.225 110.769 li
217.225 110.769 li
217.225 110.769 217.226 110.769 217.226 110.769 cv
218.098 110.768 218.984 110.628 219.856 110.334 cv
219.864 110.331 219.872 110.329 219.88 110.326 cv
219.881 110.326 219.881 110.325 219.882 110.325 cv
219.94 110.305 219.998 110.285 220.055 110.264 cv
220.056 110.264 220.057 110.263 220.057 110.263 cv
220.065 110.26 220.073 110.257 220.081 110.255 cv
220.081 110.254 220.082 110.254 220.082 110.254 cv
220.089 110.251 220.096 110.249 220.102 110.246 cv
220.104 110.246 220.106 110.245 220.108 110.244 cv
220.114 110.242 220.121 110.24 220.127 110.237 cv
220.131 110.236 220.134 110.234 220.138 110.233 cv
220.14 110.232 220.143 110.231 220.145 110.23 cv
220.714 110.014 221.247 109.741 221.738 109.419 cv
221.98 109.267 222.219 109.105 222.448 108.923 cv
222.671 108.745 222.878 108.556 223.077 108.361 cv
223.059 108.339 li
223.333 108.064 223.585 107.77 223.815 107.461 cv
224.202 109.399 li
223.14 110.482 221.831 111.307 220.353 111.806 cv
219.315 112.157 218.252 112.328 217.2 112.328 cv
221.222 94.4797 mo
219.986 93.864 218.628 93.5445 217.248 93.5445 cv
216.28 93.5445 215.301 93.7017 214.346 94.0242 cv
214.021 94.134 213.707 94.2608 213.403 94.4031 cv
213.247 93.62 li
213.522 93.4974 213.806 93.3864 214.097 93.2879 cv
215.135 92.9375 216.198 92.7667 217.25 92.7667 cv
218.553 92.7667 219.838 93.0289 221.033 93.5367 cv
221.222 94.4797 li
.564706 .639216 .72549 rgb
f
217.225 110.769 mo
217.225 110.769 li
217.225 110.769 217.226 110.769 217.226 110.769 cv
217.226 110.769 217.225 110.769 217.225 110.769 cv
217.218 110.769 mo
217.034 110.768 216.85 110.762 216.668 110.75 cv
213.496 110.533 210.611 108.475 209.483 105.305 cv
210.676 108.658 213.835 110.766 217.218 110.769 cv
217.548 110.442 mo
214.119 110.443 210.921 108.28 209.762 104.852 cv
209.671 104.58 209.594 104.306 209.531 104.032 cv
212.13 104.032 214.727 104.032 217.325 104.032 cv
221.577 109.383 li
221.14 109.631 220.674 109.841 220.18 110.008 cv
219.308 110.302 218.42 110.442 217.548 110.442 cv
219.88 110.326 mo
219.881 110.326 219.882 110.325 219.882 110.325 cv
219.881 110.325 219.881 110.326 219.88 110.326 cv
220.055 110.264 mo
220.056 110.264 220.057 110.263 220.057 110.263 cv
220.057 110.263 220.056 110.264 220.055 110.264 cv
220.081 110.255 mo
220.081 110.254 220.082 110.254 220.082 110.254 cv
220.082 110.254 220.081 110.254 220.081 110.255 cv
220.102 110.246 mo
220.104 110.246 220.106 110.245 220.108 110.244 cv
220.106 110.245 220.104 110.246 220.102 110.246 cv
220.127 110.237 mo
220.131 110.236 220.134 110.234 220.138 110.233 cv
220.134 110.234 220.131 110.236 220.127 110.237 cv
220.145 110.23 mo
220.692 110.023 221.205 109.762 221.679 109.456 cv
221.699 109.444 221.718 109.431 221.738 109.419 cv
221.247 109.741 220.714 110.014 220.145 110.23 cv
223.059 108.339 mo
223.058 108.337 li
223.139 108.255 223.218 108.172 223.295 108.087 cv
223.275 108.107 223.254 108.127 223.233 108.147 cv
224.301 107.001 225.023 105.57 225.308 104.032 cv
225.309 104.032 225.31 104.032 225.311 104.032 cv
225.081 105.276 224.567 106.451 223.815 107.461 cv
223.585 107.77 223.333 108.064 223.059 108.339 cv
222.987 108.248 mo
219.637 104.032 li
221.35 104.032 223.062 104.032 224.775 104.032 cv
224.589 105.581 223.964 107.044 222.987 108.248 cv
209.431 105.156 mo
209.431 105.153 209.43 105.151 209.429 105.149 cv
209.43 105.151 209.431 105.153 209.431 105.156 cv
209.423 105.132 mo
209.423 105.13 209.422 105.128 209.421 105.126 cv
209.422 105.128 209.423 105.13 209.423 105.132 cv
209.414 105.104 mo
209.414 105.102 209.413 105.1 209.412 105.097 cv
209.413 105.099 209.414 105.102 209.414 105.104 cv
209.407 105.082 mo
209.406 105.079 209.405 105.076 209.404 105.073 cv
209.405 105.076 209.406 105.079 209.407 105.082 cv
209.4 105.059 mo
209.398 105.054 209.396 105.049 209.395 105.044 cv
209.396 105.049 209.398 105.054 209.4 105.059 cv
209.391 105.032 mo
209.39 105.027 209.388 105.023 209.387 105.019 cv
209.388 105.023 209.39 105.027 209.391 105.032 cv
209.384 105.01 mo
209.383 105.006 209.381 105.001 209.38 104.997 cv
209.381 105.001 209.383 105.006 209.384 105.01 cv
209.38 104.997 mo
209.376 104.985 209.373 104.974 209.369 104.962 cv
209.373 104.974 209.376 104.985 209.38 104.997 cv
209.369 104.96 mo
209.274 104.652 209.198 104.342 209.141 104.032 cv
209.141 104.032 li
209.198 104.342 209.274 104.652 209.369 104.96 cv
.980392 .870588 .709804 rgb
f
221.679 109.456 mo
221.68 109.455 221.681 109.455 221.682 109.454 cv
221.786 109.389 221.89 109.321 221.992 109.252 cv
221.988 109.246 li
222.294 109.029 222.582 108.791 222.852 108.537 cv
222.858 108.545 li
223.042 108.368 li
223.035 108.359 li
223.043 108.352 223.05 108.344 223.058 108.337 cv
223.059 108.339 li
223.077 108.361 li
222.878 108.556 222.671 108.745 222.448 108.923 cv
222.219 109.105 221.98 109.267 221.738 109.419 cv
221.718 109.431 221.699 109.444 221.679 109.456 cv
221.929 109.172 mo
217.845 104.032 li
218.321 104.032 218.797 104.032 219.273 104.032 cv
222.799 108.471 li
222.727 108.554 222.653 108.635 222.577 108.716 cv
222.37 108.877 222.154 109.03 221.929 109.172 cv
222.967 108.273 mo
219.597 104.032 li
219.61 104.032 219.624 104.032 219.637 104.032 cv
222.987 108.248 li
222.98 108.256 222.973 108.265 222.967 108.273 cv
.956863 .839216 .682353 rgb
f
221.682 109.454 mo
221.786 109.387 221.888 109.318 221.988 109.246 cv
221.992 109.252 li
221.89 109.321 221.786 109.389 221.682 109.454 cv
221.577 109.383 mo
217.325 104.032 li
217.499 104.032 217.672 104.032 217.845 104.032 cv
221.929 109.172 li
221.814 109.245 221.697 109.316 221.577 109.383 cv
.909804 .756863 .576471 rgb
f
222.858 108.545 mo
222.852 108.537 li
222.914 108.479 222.975 108.42 223.035 108.359 cv
223.042 108.368 li
222.858 108.545 li
222.799 108.471 mo
219.273 104.032 li
219.381 104.032 219.489 104.032 219.597 104.032 cv
222.967 108.273 li
222.912 108.34 222.856 108.406 222.799 108.471 cv
f
222.577 108.716 mo
222.653 108.635 222.727 108.554 222.799 108.471 cv
222.83 108.51 li
222.747 108.58 222.663 108.649 222.577 108.716 cv
.980392 .968627 .956863 rgb
f
223.046 108.322 mo
222.987 108.248 li
223.964 107.044 224.589 105.581 224.775 104.032 cv
224.953 104.032 225.13 104.032 225.308 104.032 cv
225.023 105.57 224.301 107.001 223.233 108.147 cv
223.172 108.206 223.109 108.265 223.046 108.322 cv
.984314 .972549 .960784 rgb
f
223.022 108.343 mo
222.967 108.273 li
222.973 108.265 222.98 108.256 222.987 108.248 cv
223.046 108.322 li
223.038 108.329 223.03 108.336 223.022 108.343 cv
.980392 .968627 .956863 rgb
f
222.83 108.51 mo
222.799 108.471 li
222.856 108.406 222.912 108.34 222.967 108.273 cv
223.022 108.343 li
222.959 108.4 222.895 108.455 222.83 108.51 cv
.976471 .960784 .945098 rgb
f
217.225 110.769 mo
217.222 110.769 217.22 110.769 217.218 110.769 cv
213.835 110.766 210.676 108.658 209.483 105.305 cv
209.468 105.263 209.453 105.221 209.439 105.178 cv
209.436 105.171 209.434 105.163 209.431 105.156 cv
209.431 105.153 209.43 105.151 209.429 105.149 cv
209.427 105.143 209.425 105.138 209.423 105.132 cv
209.423 105.13 209.422 105.128 209.421 105.126 cv
209.419 105.119 209.417 105.112 209.414 105.104 cv
209.414 105.102 209.413 105.099 209.412 105.097 cv
209.41 105.092 209.409 105.087 209.407 105.082 cv
209.406 105.079 209.405 105.076 209.404 105.073 cv
209.403 105.068 209.401 105.063 209.4 105.059 cv
209.398 105.054 209.396 105.049 209.395 105.044 cv
209.394 105.04 209.392 105.036 209.391 105.032 cv
209.39 105.027 209.388 105.023 209.387 105.019 cv
209.386 105.016 209.385 105.013 209.384 105.01 cv
209.383 105.006 209.381 105.001 209.38 104.997 cv
209.38 104.997 li
209.376 104.985 209.373 104.974 209.369 104.962 cv
209.369 104.962 209.369 104.961 209.369 104.96 cv
209.274 104.652 209.198 104.342 209.141 104.032 cv
209.271 104.032 209.401 104.032 209.531 104.032 cv
209.594 104.306 209.671 104.58 209.762 104.852 cv
210.921 108.28 214.119 110.443 217.548 110.442 cv
218.42 110.442 219.308 110.302 220.18 110.008 cv
220.674 109.841 221.14 109.631 221.577 109.383 cv
221.697 109.316 221.814 109.245 221.929 109.172 cv
222.154 109.03 222.37 108.877 222.577 108.716 cv
222.663 108.649 222.747 108.58 222.83 108.51 cv
222.895 108.455 222.959 108.4 223.022 108.343 cv
223.03 108.336 223.038 108.329 223.046 108.322 cv
223.109 108.265 223.172 108.206 223.233 108.147 cv
223.254 108.127 223.275 108.107 223.295 108.087 cv
223.218 108.172 223.139 108.255 223.058 108.337 cv
223.05 108.344 223.043 108.352 223.035 108.359 cv
222.975 108.42 222.914 108.479 222.852 108.537 cv
222.582 108.791 222.294 109.029 221.988 109.246 cv
221.888 109.318 221.786 109.387 221.682 109.454 cv
221.681 109.455 221.68 109.455 221.679 109.456 cv
221.205 109.762 220.692 110.023 220.145 110.23 cv
220.143 110.231 220.14 110.232 220.138 110.233 cv
220.134 110.234 220.131 110.236 220.127 110.237 cv
220.121 110.24 220.114 110.242 220.108 110.244 cv
220.106 110.245 220.104 110.246 220.102 110.246 cv
220.096 110.249 220.089 110.251 220.082 110.254 cv
220.082 110.254 220.081 110.254 220.081 110.255 cv
220.073 110.257 220.065 110.26 220.057 110.263 cv
220.057 110.263 220.056 110.264 220.055 110.264 cv
219.998 110.285 219.94 110.305 219.882 110.325 cv
219.882 110.325 219.881 110.326 219.88 110.326 cv
219.872 110.329 219.864 110.331 219.856 110.334 cv
218.984 110.628 218.098 110.768 217.226 110.769 cv
217.226 110.769 217.225 110.769 217.225 110.769 cv
217.225 110.769 li
.909804 .756863 .576471 rgb
f
226.102 104.032 mo
225.838 104.032 225.575 104.032 225.311 104.032 cv
225.537 102.804 225.487 101.509 225.113 100.237 cv
225.113 100.237 li
225.108 100.219 225.102 100.2 225.097 100.182 cv
225.096 100.179 225.095 100.177 225.095 100.175 cv
225.093 100.171 225.092 100.166 225.091 100.161 cv
225.09 100.158 225.089 100.155 225.088 100.152 cv
225.087 100.148 225.085 100.143 225.084 100.139 cv
225.083 100.136 225.082 100.132 225.081 100.129 cv
225.079 100.124 225.078 100.119 225.076 100.114 cv
225.074 100.108 225.072 100.102 225.07 100.096 cv
225.069 100.093 225.068 100.09 225.068 100.087 cv
225.066 100.082 225.065 100.077 225.063 100.072 cv
225.062 100.069 225.061 100.066 225.06 100.063 cv
225.059 100.058 225.057 100.053 225.055 100.049 cv
225.055 100.046 225.054 100.043 225.053 100.04 cv
225.051 100.034 225.049 100.028 225.047 100.021 cv
225.046 100.02 225.046 100.019 225.045 100.017 cv
225.043 100.009 225.04 100.002 225.038 99.9943 cv
225.037 99.9922 225.036 99.9895 225.036 99.9874 cv
225.034 99.982 225.032 99.9763 225.03 99.9709 cv
225.029 99.9683 225.029 99.9657 225.028 99.9631 cv
225.026 99.9577 225.024 99.9521 225.022 99.9467 cv
225.021 99.9443 225.021 99.9422 225.02 99.9398 cv
225.017 99.9321 225.015 99.9244 225.012 99.9167 cv
225.012 99.9167 li
225.012 99.9167 li
224.927 99.665 224.831 99.4198 224.725 99.1821 cv
224.013 97.5905 222.84 96.3213 221.421 95.4799 cv
221.222 94.4797 li
222.082 94.9085 222.884 95.4811 223.592 96.1894 cv
224.576 97.1724 225.301 98.3424 225.748 99.6675 cv
226.231 101.095 226.346 102.587 226.102 104.032 cv
209.141 104.032 mo
208.882 104.032 208.622 104.032 208.363 104.032 cv
207.701 100.084 209.75 96.1158 213.403 94.4031 cv
213.56 95.1899 li
210.285 96.8166 208.477 100.441 209.141 104.032 cv
.65098 .694118 .752941 rgb
f
221.421 95.4799 mo
220.661 95.0287 219.829 94.7007 218.96 94.5122 cv
218.395 94.3897 217.814 94.3261 217.227 94.3261 cv
216.361 94.3261 215.481 94.4638 214.616 94.7538 cv
214.609 94.7561 214.602 94.7584 214.595 94.7607 cv
214.586 94.7637 214.577 94.7667 214.568 94.7698 cv
214.567 94.7701 214.566 94.7706 214.565 94.7709 cv
214.557 94.7737 214.549 94.7764 214.541 94.7792 cv
214.541 94.7792 li
214.201 94.8966 213.874 95.0342 213.56 95.1899 cv
213.403 94.4031 li
213.707 94.2608 214.021 94.134 214.346 94.0242 cv
215.301 93.7017 216.28 93.5445 217.248 93.5445 cv
218.628 93.5445 219.986 93.864 221.222 94.4797 cv
221.421 95.4799 li
.721569 .768627 .823529 rgb
f
225.311 104.032 mo
225.31 104.032 225.309 104.032 225.308 104.032 cv
225.536 102.805 225.487 101.509 225.113 100.237 cv
225.487 101.509 225.537 102.804 225.311 104.032 cv
224.775 104.032 mo
223.062 104.032 221.35 104.032 219.637 104.032 cv
213.006 95.6866 li
213.318 95.5331 213.644 95.3979 213.982 95.2835 cv
214.854 94.989 215.742 94.8489 216.614 94.8489 cv
220.042 94.8489 223.241 97.0111 224.399 100.44 cv
224.803 101.635 224.915 102.858 224.775 104.032 cv
217.325 104.032 mo
214.727 104.032 212.13 104.032 209.531 104.032 cv
208.923 101.352 209.713 98.6205 211.479 96.6817 cv
209.567 98.5579 208.637 101.302 209.141 104.032 cv
209.141 104.032 li
208.477 100.441 210.285 96.8166 213.56 95.1899 cv
213.874 95.0342 214.201 94.8966 214.541 94.7792 cv
213.406 95.1714 212.418 95.7931 211.597 96.5672 cv
211.67 96.5107 211.744 96.4554 211.819 96.4011 cv
211.712 96.5009 211.607 96.6031 211.505 96.7066 cv
211.505 96.7066 li
211.505 96.7066 li
217.325 104.032 li
225.113 100.237 mo
225.108 100.219 225.102 100.2 225.097 100.182 cv
225.102 100.2 225.108 100.219 225.113 100.237 cv
225.095 100.175 mo
225.093 100.171 225.092 100.166 225.091 100.161 cv
225.092 100.166 225.093 100.171 225.095 100.175 cv
225.088 100.152 mo
225.086 100.148 225.085 100.143 225.084 100.139 cv
225.085 100.143 225.087 100.148 225.088 100.152 cv
225.081 100.129 mo
225.079 100.124 225.078 100.119 225.076 100.114 cv
225.078 100.119 225.079 100.124 225.081 100.129 cv
225.07 100.096 mo
225.069 100.093 225.068 100.09 225.068 100.087 cv
225.068 100.09 225.069 100.093 225.07 100.096 cv
225.063 100.072 mo
225.062 100.069 225.061 100.066 225.06 100.063 cv
225.061 100.066 225.062 100.069 225.063 100.072 cv
225.055 100.049 mo
225.055 100.046 225.054 100.043 225.053 100.04 cv
225.054 100.043 225.055 100.046 225.055 100.049 cv
225.047 100.021 mo
225.046 100.02 225.046 100.018 225.045 100.017 cv
225.046 100.019 225.046 100.02 225.047 100.021 cv
225.038 99.9943 mo
225.037 99.992 225.036 99.9897 225.036 99.9874 cv
225.036 99.9895 225.037 99.9922 225.038 99.9943 cv
225.03 99.9709 mo
225.029 99.9682 225.029 99.9658 225.028 99.9631 cv
225.029 99.9657 225.029 99.9683 225.03 99.9709 cv
225.022 99.9467 mo
225.021 99.9444 225.021 99.9421 225.02 99.9398 cv
225.021 99.9422 225.021 99.9443 225.022 99.9467 cv
224.725 99.1821 mo
223.631 96.7373 221.45 95.0522 218.96 94.5122 cv
219.829 94.7007 220.661 95.0287 221.421 95.4799 cv
222.84 96.3213 224.013 97.5905 224.725 99.1821 cv
214.541 94.7792 mo
214.549 94.7764 214.557 94.7737 214.565 94.7709 cv
214.557 94.7737 214.549 94.7764 214.541 94.7792 cv
214.568 94.7698 mo
214.577 94.7667 214.586 94.7637 214.595 94.7607 cv
214.602 94.7584 214.609 94.7561 214.616 94.7538 cv
214.609 94.7561 214.602 94.7584 214.595 94.7607 cv
214.586 94.7637 214.577 94.7667 214.568 94.7698 cv
.972549 .905882 .811765 rgb
f
219.637 104.032 mo
219.624 104.032 219.61 104.032 219.597 104.032 cv
212.978 95.7008 li
212.987 95.6961 212.997 95.6913 213.006 95.6866 cv
219.637 104.032 li
219.273 104.032 mo
218.797 104.032 218.321 104.032 217.845 104.032 cv
211.799 96.4223 li
211.699 96.5156 211.6 96.61 211.505 96.7066 cv
211.505 96.7066 li
211.607 96.6031 211.712 96.5009 211.819 96.4011 cv
212.113 96.1891 212.423 95.9943 212.748 95.8197 cv
219.273 104.032 li
.956863 .886274 .796078 rgb
f
217.845 104.032 mo
217.672 104.032 217.499 104.032 217.325 104.032 cv
211.505 96.7066 li
211.505 96.7066 li
211.6 96.61 211.699 96.5156 211.799 96.4223 cv
217.845 104.032 li
.929412 .839216 .733333 rgb
f
219.597 104.032 mo
219.489 104.032 219.381 104.032 219.273 104.032 cv
212.748 95.8197 li
212.824 95.779 212.9 95.7393 212.978 95.7008 cv
219.597 104.032 li
f
225.113 100.237 mo
225.113 100.237 li
225.113 100.237 li
225.097 100.182 mo
225.096 100.179 225.095 100.177 225.095 100.175 cv
225.095 100.177 225.096 100.179 225.097 100.182 cv
225.091 100.161 mo
225.09 100.158 225.089 100.155 225.088 100.152 cv
225.089 100.155 225.09 100.158 225.091 100.161 cv
225.084 100.139 mo
225.083 100.136 225.082 100.132 225.081 100.129 cv
225.082 100.132 225.083 100.136 225.084 100.139 cv
225.076 100.114 mo
225.074 100.108 225.072 100.102 225.07 100.096 cv
225.072 100.102 225.074 100.108 225.076 100.114 cv
225.068 100.087 mo
225.066 100.082 225.065 100.077 225.063 100.072 cv
225.065 100.077 225.066 100.082 225.068 100.087 cv
225.06 100.063 mo
225.058 100.058 225.057 100.054 225.055 100.049 cv
225.057 100.053 225.059 100.058 225.06 100.063 cv
225.053 100.04 mo
225.051 100.034 225.049 100.028 225.047 100.021 cv
225.049 100.028 225.051 100.034 225.053 100.04 cv
225.045 100.017 mo
225.043 100.009 225.04 100.002 225.038 99.9943 cv
225.04 100.002 225.043 100.009 225.045 100.017 cv
225.036 99.9874 mo
225.034 99.9819 225.032 99.9764 225.03 99.9709 cv
225.032 99.9763 225.034 99.982 225.036 99.9874 cv
225.028 99.9631 mo
225.026 99.9576 225.024 99.9522 225.022 99.9467 cv
225.024 99.9521 225.026 99.9577 225.028 99.9631 cv
225.02 99.9398 mo
225.017 99.9322 225.015 99.9243 225.012 99.9167 cv
225.015 99.9244 225.017 99.9321 225.02 99.9398 cv
225.012 99.9167 mo
224.927 99.665 224.831 99.4198 224.725 99.1821 cv
224.831 99.4198 224.927 99.665 225.012 99.9167 cv
.941176 .945098 .956863 rgb
f
214.541 94.7792 mo
214.541 94.7792 li
214.541 94.7792 li
214.565 94.7709 mo
214.566 94.7706 214.567 94.7701 214.568 94.7698 cv
214.567 94.7701 214.566 94.7706 214.565 94.7709 cv
214.616 94.7538 mo
215.481 94.4638 216.361 94.3261 217.227 94.3261 cv
217.814 94.3261 218.395 94.3897 218.96 94.5122 cv
218.395 94.3897 217.814 94.3261 217.226 94.3261 cv
216.361 94.3261 215.481 94.4639 214.616 94.7538 cv
.94902 .952941 .964706 rgb
f
225.308 104.032 mo
225.13 104.032 224.953 104.032 224.775 104.032 cv
224.915 102.858 224.803 101.635 224.399 100.44 cv
223.241 97.0111 220.042 94.8489 216.614 94.8489 cv
215.742 94.8489 214.854 94.989 213.982 95.2835 cv
213.644 95.3979 213.318 95.5331 213.006 95.6866 cv
212.911 95.5671 li
212.677 95.717 212.445 95.876 212.223 96.053 cv
212.082 96.1646 211.948 96.2811 211.819 96.4011 cv
211.744 96.4554 211.67 96.5107 211.597 96.5672 cv
212.418 95.7931 213.406 95.1714 214.541 94.7792 cv
214.541 94.7792 li
214.549 94.7764 214.557 94.7737 214.565 94.7709 cv
214.566 94.7706 214.567 94.7701 214.568 94.7698 cv
214.577 94.7667 214.586 94.7637 214.595 94.7607 cv
214.602 94.7584 214.609 94.7561 214.616 94.7538 cv
215.481 94.4639 216.361 94.3261 217.226 94.3261 cv
217.814 94.3261 218.395 94.3897 218.96 94.5122 cv
221.45 95.0522 223.631 96.7373 224.725 99.1821 cv
224.831 99.4198 224.927 99.665 225.012 99.9167 cv
225.012 99.9167 li
225.012 99.9167 li
225.015 99.9243 225.017 99.9322 225.02 99.9398 cv
225.021 99.9421 225.021 99.9444 225.022 99.9467 cv
225.024 99.9522 225.026 99.9576 225.028 99.9631 cv
225.029 99.9658 225.029 99.9682 225.03 99.9709 cv
225.032 99.9764 225.034 99.9819 225.036 99.9874 cv
225.036 99.9897 225.037 99.992 225.038 99.9943 cv
225.04 100.002 225.043 100.009 225.045 100.017 cv
225.046 100.018 225.046 100.02 225.047 100.021 cv
225.049 100.028 225.051 100.034 225.053 100.04 cv
225.054 100.043 225.055 100.046 225.055 100.049 cv
225.057 100.054 225.058 100.058 225.06 100.063 cv
225.061 100.066 225.062 100.069 225.063 100.072 cv
225.065 100.077 225.066 100.082 225.068 100.087 cv
225.068 100.09 225.069 100.093 225.07 100.096 cv
225.072 100.102 225.074 100.108 225.076 100.114 cv
225.078 100.119 225.079 100.124 225.081 100.129 cv
225.082 100.132 225.083 100.136 225.084 100.139 cv
225.085 100.143 225.086 100.148 225.088 100.152 cv
225.089 100.155 225.09 100.158 225.091 100.161 cv
225.092 100.166 225.093 100.171 225.095 100.175 cv
225.095 100.177 225.096 100.179 225.097 100.182 cv
225.102 100.2 225.108 100.219 225.113 100.237 cv
225.113 100.237 li
225.487 101.509 225.536 102.805 225.308 104.032 cv
.972549 .968627 .964706 rgb
f
211.819 96.4011 mo
211.948 96.2811 212.082 96.1646 212.223 96.053 cv
212.445 95.876 212.677 95.717 212.911 95.5671 cv
213.006 95.6866 li
212.997 95.6913 212.987 95.6961 212.978 95.7008 cv
212.897 95.6 li
212.683 95.7385 li
212.748 95.8197 li
212.423 95.9943 212.113 96.1891 211.819 96.4011 cv
.972549 .964706 .960784 rgb
f
212.748 95.8197 mo
212.683 95.7385 li
212.897 95.6 li
212.978 95.7008 li
212.9 95.7393 212.824 95.779 212.748 95.8197 cv
.968627 .960784 .952941 rgb
f
209.531 104.032 mo
209.401 104.032 209.271 104.032 209.141 104.032 cv
208.637 101.302 209.567 98.5579 211.479 96.6817 cv
209.713 98.6205 208.923 101.352 209.531 104.032 cv
.929412 .839216 .733333 rgb
f
185.176 111.348 mo
182.632 111.348 180.157 110.349 178.283 108.475 cv
177.216 107.407 176.427 106.135 175.941 104.696 cv
175.105 102.222 175.283 99.5716 176.441 97.232 cv
177.599 94.8923 179.599 93.1436 182.072 92.3087 cv
183.11 91.9581 184.174 91.7871 185.225 91.7871 cv
187.769 91.7871 190.243 92.7862 192.116 94.66 cv
193.184 95.7278 193.973 96.9998 194.459 98.4391 cv
196.183 103.544 193.433 109.101 188.328 110.827 cv
187.291 111.177 186.227 111.348 185.176 111.348 cv
185.199 109.788 mo
185.199 109.788 li
185.199 109.788 185.2 109.788 185.2 109.788 cv
186.072 109.788 186.959 109.648 187.83 109.354 cv
187.838 109.351 187.845 109.349 187.853 109.346 cv
187.854 109.346 187.856 109.345 187.858 109.344 cv
187.865 109.342 187.872 109.34 187.88 109.337 cv
187.881 109.337 187.882 109.336 187.884 109.336 cv
187.89 109.334 187.896 109.331 187.902 109.329 cv
187.904 109.329 187.906 109.328 187.908 109.327 cv
187.915 109.325 187.921 109.323 187.927 109.32 cv
187.931 109.319 187.934 109.318 187.937 109.317 cv
187.941 109.316 187.944 109.314 187.948 109.313 cv
187.956 109.31 187.963 109.308 187.971 109.305 cv
187.972 109.305 187.973 109.304 187.974 109.304 cv
187.979 109.302 187.984 109.3 187.989 109.298 cv
187.99 109.298 187.99 109.298 187.99 109.298 cv
189.562 108.731 190.859 107.732 191.79 106.479 cv
191.822 106.499 li
191.988 106.275 192.148 106.044 192.293 105.8 cv
192.461 105.517 192.602 105.227 192.732 104.934 cv
192.732 104.934 li
192.732 104.934 li
192.705 104.918 li
193.153 103.914 193.402 102.82 193.42 101.699 cv
193.675 101.699 193.93 101.699 194.185 101.699 cv
194.201 100.701 194.06 99.6858 193.723 98.6878 cv
193.275 97.3625 192.55 96.1925 191.567 95.2094 cv
189.842 93.4847 187.564 92.5649 185.223 92.5649 cv
184.255 92.5649 183.276 92.7222 182.321 93.045 cv
180.044 93.8132 178.204 95.4231 177.137 97.5768 cv
176.492 98.8794 176.184 100.287 176.206 101.699 cv
176.464 101.699 176.722 101.699 176.98 101.699 cv
176.992 102.473 177.115 103.257 177.359 104.031 cv
177.36 104.034 177.36 104.036 177.361 104.038 cv
177.363 104.043 177.364 104.047 177.365 104.052 cv
177.366 104.055 177.367 104.058 177.368 104.061 cv
177.37 104.067 177.372 104.074 177.374 104.08 cv
177.376 104.084 177.377 104.088 177.378 104.093 cv
177.379 104.096 177.38 104.099 177.381 104.102 cv
177.383 104.107 177.385 104.112 177.386 104.116 cv
177.387 104.119 177.388 104.122 177.389 104.125 cv
177.391 104.132 177.393 104.139 177.396 104.146 cv
177.396 104.148 177.397 104.15 177.398 104.152 cv
177.4 104.158 177.402 104.163 177.403 104.169 cv
177.404 104.171 177.405 104.173 177.406 104.175 cv
177.408 104.183 177.411 104.19 177.413 104.198 cv
177.428 104.241 177.442 104.283 177.457 104.325 cv
178.65 107.678 181.808 109.786 185.192 109.788 cv
185.194 109.788 185.196 109.788 185.199 109.788 cv
185.199 109.788 li
.447059 .517647 .607843 rgb
f
185.199 109.788 mo
185.199 109.788 li
185.199 109.788 185.2 109.788 185.2 109.788 cv
185.2 109.788 185.199 109.788 185.199 109.788 cv
185.192 109.788 mo
181.808 109.786 178.65 107.678 177.457 104.325 cv
178.65 107.678 181.809 109.786 185.192 109.788 cv
185.522 109.462 mo
182.094 109.463 178.895 107.3 177.737 103.872 cv
177.494 103.152 177.356 102.422 177.315 101.699 cv
178.943 101.699 180.571 101.699 182.199 101.699 cv
182.714 101.699 183.229 101.699 183.744 101.699 cv
191.598 106.365 li
191.299 106.856 190.948 107.316 190.55 107.736 cv
189.848 108.284 189.046 108.726 188.154 109.028 cv
187.282 109.322 186.395 109.462 185.522 109.462 cv
187.853 109.346 mo
187.854 109.346 187.856 109.345 187.858 109.344 cv
187.856 109.345 187.854 109.346 187.853 109.346 cv
187.88 109.337 mo
187.881 109.337 187.882 109.336 187.884 109.336 cv
187.882 109.336 187.881 109.337 187.88 109.337 cv
187.902 109.329 mo
187.904 109.329 187.906 109.328 187.908 109.327 cv
187.906 109.328 187.904 109.329 187.902 109.329 cv
187.927 109.32 mo
187.931 109.319 187.934 109.318 187.937 109.317 cv
187.934 109.318 187.931 109.319 187.927 109.32 cv
187.948 109.313 mo
187.956 109.31 187.963 109.308 187.971 109.305 cv
187.963 109.308 187.956 109.31 187.948 109.313 cv
187.974 109.304 mo
187.979 109.302 187.984 109.3 187.989 109.298 cv
187.984 109.3 187.979 109.302 187.974 109.304 cv
187.99 109.298 mo
189.289 108.83 190.397 108.064 191.269 107.107 cv
191.248 107.128 191.227 107.148 191.206 107.169 cv
191.411 106.948 191.605 106.716 191.784 106.476 cv
191.79 106.479 li
190.859 107.732 189.562 108.731 187.99 109.298 cv
192.705 104.918 mo
192.701 104.915 li
193.15 103.913 193.4 102.82 193.419 101.699 cv
193.419 101.699 193.42 101.699 193.42 101.699 cv
193.402 102.82 193.153 103.914 192.705 104.918 cv
192.37 104.719 mo
187.288 101.699 li
189.125 101.699 190.961 101.699 192.798 101.699 cv
192.847 102.737 192.696 103.76 192.37 104.719 cv
177.406 104.175 mo
177.405 104.173 177.404 104.171 177.403 104.169 cv
177.404 104.171 177.405 104.173 177.406 104.175 cv
177.398 104.152 mo
177.397 104.15 177.396 104.148 177.396 104.146 cv
177.396 104.148 177.397 104.15 177.398 104.152 cv
177.389 104.125 mo
177.388 104.122 177.387 104.119 177.386 104.116 cv
177.387 104.119 177.388 104.122 177.389 104.125 cv
177.381 104.102 mo
177.38 104.099 177.379 104.096 177.378 104.093 cv
177.379 104.096 177.38 104.099 177.381 104.102 cv
177.374 104.08 mo
177.372 104.074 177.37 104.067 177.368 104.061 cv
177.37 104.068 177.372 104.073 177.374 104.08 cv
177.365 104.052 mo
177.364 104.047 177.363 104.043 177.361 104.038 cv
177.362 104.043 177.364 104.047 177.365 104.052 cv
177.359 104.031 mo
177.115 103.257 176.992 102.473 176.98 101.699 cv
176.98 101.699 176.981 101.699 176.981 101.699 cv
176.993 102.473 177.115 103.257 177.359 104.031 cv
.956863 .960784 .968627 rgb
f
191.822 106.499 mo
191.79 106.479 li
191.784 106.476 li
191.79 106.467 191.796 106.459 191.803 106.45 cv
191.824 106.463 li
191.975 106.257 li
191.951 106.243 li
192.164 105.936 192.355 105.616 192.524 105.284 cv
192.558 105.304 li
192.619 105.181 192.677 105.058 192.732 104.934 cv
192.602 105.227 192.461 105.517 192.293 105.8 cv
192.148 106.044 191.988 106.275 191.822 106.499 cv
191.598 106.365 mo
183.744 101.699 li
183.765 101.699 183.785 101.699 183.806 101.699 cv
191.615 106.339 li
191.609 106.348 191.604 106.357 191.598 106.365 cv
191.743 106.12 mo
184.303 101.699 li
185.033 101.699 185.762 101.699 186.491 101.699 cv
192.227 105.107 li
192.089 105.455 191.927 105.793 191.743 106.12 cv
.909804 .92549 .929412 rgb
f
192.558 105.304 mo
192.524 105.284 li
192.586 105.162 192.645 105.039 192.701 104.915 cv
192.732 104.934 li
192.732 104.934 li
192.677 105.058 192.619 105.181 192.558 105.304 cv
192.227 105.107 mo
186.491 101.699 li
186.757 101.699 187.023 101.699 187.288 101.699 cv
192.37 104.719 li
192.325 104.849 192.278 104.979 192.227 105.107 cv
.811765 .831372 .854902 rgb
f
191.824 106.463 mo
191.803 106.45 li
191.853 106.382 191.903 106.313 191.951 106.243 cv
191.975 106.257 li
191.824 106.463 li
191.615 106.339 mo
183.806 101.699 li
183.972 101.699 184.137 101.699 184.303 101.699 cv
191.743 106.12 li
191.701 106.193 191.659 106.266 191.615 106.339 cv
f
190.55 107.736 mo
190.948 107.316 191.299 106.856 191.598 106.365 cv
191.784 106.476 li
191.605 106.716 191.411 106.948 191.206 107.169 cv
190.998 107.368 190.779 107.558 190.55 107.736 cv
.980392 .980392 .984314 rgb
f
191.784 106.476 mo
191.598 106.365 li
191.604 106.357 191.609 106.348 191.615 106.339 cv
191.803 106.45 li
191.796 106.459 191.79 106.467 191.784 106.476 cv
191.951 106.243 mo
191.743 106.12 li
191.927 105.793 192.089 105.455 192.227 105.107 cv
192.524 105.284 li
192.355 105.616 192.164 105.936 191.951 106.243 cv
.976471 .976471 .980392 rgb
f
192.701 104.915 mo
192.37 104.719 li
192.696 103.76 192.847 102.737 192.798 101.699 cv
193.005 101.699 193.212 101.699 193.419 101.699 cv
193.4 102.82 193.15 103.913 192.701 104.915 cv
.980392 .980392 .984314 rgb
f
192.524 105.284 mo
192.227 105.107 li
192.278 104.979 192.325 104.849 192.37 104.719 cv
192.701 104.915 li
192.645 105.039 192.586 105.162 192.524 105.284 cv
.964706 .968627 .972549 rgb
f
191.803 106.45 mo
191.615 106.339 li
191.659 106.266 191.701 106.193 191.743 106.12 cv
191.951 106.243 li
191.903 106.313 191.853 106.382 191.803 106.45 cv
f
185.199 109.788 mo
185.196 109.788 185.194 109.788 185.192 109.788 cv
181.809 109.786 178.65 107.678 177.457 104.325 cv
177.442 104.283 177.428 104.241 177.413 104.198 cv
177.411 104.19 177.408 104.183 177.406 104.175 cv
177.405 104.173 177.404 104.171 177.403 104.169 cv
177.402 104.163 177.4 104.158 177.398 104.152 cv
177.397 104.15 177.396 104.148 177.396 104.146 cv
177.393 104.139 177.391 104.132 177.389 104.125 cv
177.388 104.122 177.387 104.119 177.386 104.116 cv
177.385 104.112 177.383 104.107 177.381 104.102 cv
177.38 104.099 177.379 104.096 177.378 104.093 cv
177.377 104.088 177.376 104.084 177.374 104.08 cv
177.372 104.073 177.37 104.068 177.368 104.061 cv
177.367 104.058 177.366 104.055 177.365 104.052 cv
177.364 104.047 177.362 104.043 177.361 104.038 cv
177.36 104.036 177.36 104.034 177.359 104.031 cv
177.115 103.257 176.993 102.473 176.981 101.699 cv
177.093 101.699 177.204 101.699 177.315 101.699 cv
177.356 102.422 177.494 103.152 177.737 103.872 cv
178.895 107.3 182.094 109.463 185.522 109.462 cv
186.395 109.462 187.282 109.322 188.154 109.028 cv
189.046 108.726 189.848 108.284 190.55 107.736 cv
190.779 107.558 190.998 107.368 191.206 107.169 cv
191.227 107.148 191.248 107.128 191.269 107.107 cv
190.397 108.064 189.289 108.83 187.99 109.298 cv
187.99 109.298 187.99 109.298 187.989 109.298 cv
187.984 109.3 187.979 109.302 187.974 109.304 cv
187.973 109.304 187.972 109.305 187.971 109.305 cv
187.963 109.308 187.956 109.31 187.948 109.313 cv
187.944 109.314 187.941 109.316 187.937 109.317 cv
187.934 109.318 187.931 109.319 187.927 109.32 cv
187.921 109.323 187.915 109.325 187.908 109.327 cv
187.906 109.328 187.904 109.329 187.902 109.329 cv
187.896 109.331 187.89 109.334 187.884 109.336 cv
187.882 109.336 187.881 109.337 187.88 109.337 cv
187.872 109.34 187.865 109.342 187.858 109.344 cv
187.856 109.345 187.854 109.346 187.853 109.346 cv
187.845 109.349 187.838 109.351 187.83 109.354 cv
186.959 109.648 186.072 109.788 185.2 109.788 cv
185.2 109.788 185.199 109.788 185.199 109.788 cv
185.199 109.788 li
.811765 .831372 .854902 rgb
f
176.98 101.699 mo
176.722 101.699 176.464 101.699 176.206 101.699 cv
176.184 100.287 176.492 98.8794 177.137 97.5768 cv
178.204 95.4231 180.044 93.8132 182.321 93.045 cv
183.276 92.7222 184.255 92.5649 185.223 92.5649 cv
187.564 92.5649 189.842 93.4847 191.567 95.2094 cv
192.55 96.1925 193.275 97.3625 193.723 98.6878 cv
194.06 99.6858 194.201 100.701 194.185 101.699 cv
193.93 101.699 193.675 101.699 193.42 101.699 cv
193.433 100.898 193.328 100.083 193.094 99.2779 cv
193.094 99.2775 193.093 99.2771 193.093 99.2766 cv
193.092 99.2703 193.09 99.2642 193.088 99.2578 cv
193.088 99.257 193.087 99.2562 193.087 99.2553 cv
193.082 99.238 193.077 99.2203 193.072 99.2029 cv
193.071 99.2002 193.07 99.1974 193.069 99.1947 cv
193.068 99.1905 193.066 99.1859 193.065 99.1817 cv
193.064 99.1781 193.063 99.1748 193.062 99.1713 cv
193.061 99.1673 193.06 99.1634 193.058 99.1594 cv
193.057 99.1553 193.056 99.151 193.054 99.1468 cv
193.053 99.1434 193.052 99.1404 193.051 99.1369 cv
193.049 99.1298 193.047 99.1225 193.045 99.1154 cv
193.044 99.1125 193.043 99.1099 193.042 99.107 cv
193.04 99.102 193.039 99.097 193.037 99.092 cv
193.036 99.0891 193.035 99.0861 193.035 99.0832 cv
193.033 99.0782 193.031 99.073 193.03 99.0679 cv
193.029 99.0653 193.028 99.0627 193.027 99.0601 cv
193.025 99.0536 193.023 99.0467 193.021 99.0402 cv
193.02 99.0392 193.02 99.0381 193.02 99.0371 cv
193.017 99.0294 193.015 99.0218 193.012 99.014 cv
193.012 99.0119 193.011 99.0098 193.01 99.0077 cv
193.008 99.002 193.006 98.9964 193.005 98.9908 cv
193.004 98.9882 193.003 98.9857 193.002 98.9831 cv
193 98.9777 192.998 98.9719 192.997 98.9665 cv
192.996 98.9641 192.995 98.9621 192.994 98.9598 cv
192.992 98.952 192.989 98.9444 192.987 98.9366 cv
192.987 98.9366 li
192.966 98.8773 192.946 98.8186 192.925 98.7601 cv
192.923 98.7552 192.921 98.7502 192.919 98.7453 cv
191.709 95.4303 188.569 93.3487 185.207 93.346 cv
185.205 93.346 185.203 93.346 185.201 93.346 cv
185.201 93.346 li
185.201 93.346 li
185.2 93.346 185.2 93.346 185.199 93.346 cv
184.327 93.3462 183.441 93.4861 182.569 93.7806 cv
182.569 93.7806 li
182.56 93.7837 182.551 93.7867 182.542 93.7897 cv
182.542 93.79 182.541 93.7902 182.54 93.7905 cv
179.085 94.9721 176.923 98.2303 176.98 101.699 cv
.65098 .694118 .752941 rgb
f
182.199 101.699 mo
180.571 101.699 178.943 101.699 177.315 101.699 cv
177.248 100.494 177.45 99.3078 177.883 98.2169 cv
183.744 101.699 li
183.229 101.699 182.714 101.699 182.199 101.699 cv
187.288 101.699 mo
178.732 96.616 li
178.95 96.2956 179.191 95.9898 179.454 95.7017 cv
177.858 97.2672 176.947 99.4376 176.981 101.699 cv
176.981 101.699 176.98 101.699 176.98 101.699 cv
176.923 98.2303 179.085 94.9721 182.54 93.7905 cv
181.395 94.1822 180.398 94.8073 179.571 95.5871 cv
180.273 95.0455 181.069 94.6031 181.956 94.3035 cv
182.828 94.0089 183.716 93.8688 184.588 93.8688 cv
188.017 93.8688 191.215 96.0309 192.374 99.4595 cv
192.624 100.202 192.763 100.954 192.798 101.699 cv
190.961 101.699 189.125 101.699 187.288 101.699 cv
193.419 101.699 mo
193.433 100.898 193.328 100.084 193.094 99.2779 cv
193.328 100.083 193.433 100.898 193.42 101.699 cv
193.42 101.699 193.419 101.699 193.419 101.699 cv
193.093 99.2766 mo
193.092 99.2704 193.09 99.2641 193.088 99.2578 cv
193.09 99.2642 193.092 99.2703 193.093 99.2766 cv
193.087 99.2553 mo
193.082 99.2378 193.077 99.2205 193.072 99.2029 cv
193.077 99.2203 193.082 99.238 193.087 99.2553 cv
193.069 99.1947 mo
193.068 99.1905 193.066 99.1859 193.065 99.1817 cv
193.066 99.1859 193.068 99.1905 193.069 99.1947 cv
193.062 99.1713 mo
193.061 99.1673 193.06 99.1634 193.058 99.1594 cv
193.06 99.1634 193.061 99.1673 193.062 99.1713 cv
193.054 99.1468 mo
193.053 99.1435 193.052 99.1403 193.051 99.1369 cv
193.052 99.1404 193.053 99.1434 193.054 99.1468 cv
193.045 99.1154 mo
193.044 99.1125 193.043 99.1099 193.042 99.107 cv
193.043 99.1099 193.044 99.1125 193.045 99.1154 cv
193.037 99.092 mo
193.036 99.0891 193.035 99.0861 193.035 99.0832 cv
193.035 99.0861 193.036 99.0891 193.037 99.092 cv
193.03 99.0679 mo
193.029 99.0652 193.028 99.0628 193.027 99.0601 cv
193.028 99.0627 193.029 99.0653 193.03 99.0679 cv
193.021 99.0402 mo
193.02 99.0392 193.02 99.0381 193.02 99.0371 cv
193.02 99.0381 193.02 99.0392 193.021 99.0402 cv
193.012 99.014 mo
193.012 99.0119 193.011 99.0097 193.01 99.0077 cv
193.011 99.0098 193.012 99.0119 193.012 99.014 cv
193.005 98.9908 mo
193.004 98.9881 193.003 98.9858 193.002 98.9831 cv
193.003 98.9857 193.004 98.9882 193.005 98.9908 cv
192.997 98.9665 mo
192.996 98.9642 192.995 98.962 192.994 98.9598 cv
192.995 98.9621 192.996 98.9641 192.997 98.9665 cv
192.987 98.9366 mo
192.987 98.9366 li
192.966 98.8773 192.946 98.8186 192.925 98.7601 cv
192.946 98.8186 192.966 98.8773 192.987 98.9366 cv
192.987 98.9366 li
192.919 98.7453 mo
191.709 95.4305 188.569 93.349 185.207 93.346 cv
188.569 93.3487 191.709 95.4303 192.919 98.7453 cv
182.542 93.7897 mo
182.551 93.7867 182.56 93.7837 182.569 93.7806 cv
182.569 93.7806 li
182.569 93.7806 li
182.56 93.7836 182.551 93.7867 182.542 93.7897 cv
185.199 93.346 mo
185.2 93.346 185.2 93.346 185.201 93.346 cv
185.201 93.346 li
185.2 93.346 185.2 93.346 185.199 93.346 cv
.956863 .960784 .968627 rgb
f
183.744 101.699 mo
177.883 98.2169 li
177.887 98.207 177.891 98.1973 177.895 98.1874 cv
183.806 101.699 li
183.785 101.699 183.765 101.699 183.744 101.699 cv
184.303 101.699 mo
177.994 97.9509 li
178.144 97.6089 178.317 97.277 178.512 96.9582 cv
186.491 101.699 li
185.762 101.699 185.033 101.699 184.303 101.699 cv
.929412 .941176 .945098 rgb
f
186.491 101.699 mo
178.512 96.9582 li
178.582 96.8422 178.656 96.7284 178.732 96.616 cv
187.288 101.699 li
187.023 101.699 186.757 101.699 186.491 101.699 cv
.870588 .882353 .901961 rgb
f
183.806 101.699 mo
177.895 98.1874 li
177.927 98.108 177.96 98.0292 177.994 97.9509 cv
184.303 101.699 li
184.137 101.699 183.972 101.699 183.806 101.699 cv
f
193.094 99.2779 mo
193.094 99.2774 193.094 99.2772 193.093 99.2766 cv
193.093 99.2771 193.094 99.2775 193.094 99.2779 cv
193.088 99.2578 mo
193.088 99.257 193.087 99.2561 193.087 99.2553 cv
193.087 99.2562 193.088 99.257 193.088 99.2578 cv
193.072 99.2029 mo
193.071 99.2 193.07 99.1976 193.069 99.1947 cv
193.07 99.1974 193.071 99.2002 193.072 99.2029 cv
193.065 99.1817 mo
193.064 99.1783 193.063 99.1747 193.062 99.1713 cv
193.063 99.1748 193.064 99.1781 193.065 99.1817 cv
193.058 99.1594 mo
193.057 99.1552 193.056 99.151 193.054 99.1468 cv
193.056 99.151 193.057 99.1553 193.058 99.1594 cv
193.051 99.1369 mo
193.049 99.1298 193.047 99.1225 193.045 99.1154 cv
193.047 99.1225 193.049 99.1298 193.051 99.1369 cv
193.042 99.107 mo
193.04 99.102 193.039 99.097 193.037 99.092 cv
193.039 99.097 193.04 99.102 193.042 99.107 cv
193.035 99.0832 mo
193.033 99.0782 193.031 99.0729 193.03 99.0679 cv
193.031 99.073 193.033 99.0782 193.035 99.0832 cv
193.027 99.0601 mo
193.025 99.0533 193.023 99.0471 193.021 99.0402 cv
193.023 99.0467 193.025 99.0536 193.027 99.0601 cv
193.02 99.0371 mo
193.017 99.0294 193.015 99.0217 193.012 99.014 cv
193.015 99.0218 193.017 99.0294 193.02 99.0371 cv
193.01 99.0077 mo
193.008 99.0021 193.006 98.9963 193.005 98.9908 cv
193.006 98.9964 193.008 99.002 193.01 99.0077 cv
193.002 98.9831 mo
193 98.9776 192.998 98.972 192.997 98.9665 cv
192.998 98.9719 193 98.9777 193.002 98.9831 cv
192.994 98.9598 mo
192.992 98.9521 192.989 98.9443 192.987 98.9366 cv
192.989 98.9444 192.992 98.952 192.994 98.9598 cv
192.925 98.7601 mo
192.923 98.7552 192.921 98.7502 192.919 98.7453 cv
192.921 98.7502 192.923 98.7552 192.925 98.7601 cv
182.54 93.7905 mo
182.541 93.7902 182.542 93.79 182.542 93.7897 cv
182.542 93.79 182.541 93.7902 182.54 93.7905 cv
182.569 93.7806 mo
183.441 93.4861 184.327 93.3462 185.199 93.346 cv
184.328 93.3463 183.441 93.4862 182.569 93.7806 cv
185.207 93.346 mo
185.205 93.346 185.203 93.346 185.201 93.346 cv
185.201 93.346 li
185.203 93.346 185.205 93.346 185.207 93.346 cv
.941176 .945098 .956863 rgb
f
192.798 101.699 mo
192.763 100.954 192.624 100.202 192.374 99.4595 cv
191.215 96.0309 188.017 93.8688 184.588 93.8688 cv
183.716 93.8688 182.828 94.0089 181.956 94.3035 cv
181.069 94.6031 180.273 95.0455 179.571 95.5871 cv
180.398 94.8073 181.395 94.1822 182.54 93.7905 cv
182.541 93.7902 182.542 93.79 182.542 93.7897 cv
182.551 93.7867 182.56 93.7836 182.569 93.7806 cv
182.569 93.7806 li
183.441 93.4862 184.328 93.3463 185.199 93.346 cv
185.2 93.346 185.2 93.346 185.201 93.346 cv
185.203 93.346 185.205 93.346 185.207 93.346 cv
188.569 93.349 191.709 95.4305 192.919 98.7453 cv
192.921 98.7502 192.923 98.7552 192.925 98.7601 cv
192.946 98.8186 192.966 98.8773 192.987 98.9366 cv
192.987 98.9366 li
192.989 98.9443 192.992 98.9521 192.994 98.9598 cv
192.995 98.962 192.996 98.9642 192.997 98.9665 cv
192.998 98.972 193 98.9776 193.002 98.9831 cv
193.003 98.9858 193.004 98.9881 193.005 98.9908 cv
193.006 98.9963 193.008 99.0021 193.01 99.0077 cv
193.011 99.0097 193.012 99.0119 193.012 99.014 cv
193.015 99.0217 193.017 99.0294 193.02 99.0371 cv
193.02 99.0381 193.02 99.0392 193.021 99.0402 cv
193.023 99.0471 193.025 99.0533 193.027 99.0601 cv
193.028 99.0628 193.029 99.0652 193.03 99.0679 cv
193.031 99.0729 193.033 99.0782 193.035 99.0832 cv
193.035 99.0861 193.036 99.0891 193.037 99.092 cv
193.039 99.097 193.04 99.102 193.042 99.107 cv
193.043 99.1099 193.044 99.1125 193.045 99.1154 cv
193.047 99.1225 193.049 99.1298 193.051 99.1369 cv
193.052 99.1403 193.053 99.1435 193.054 99.1468 cv
193.056 99.151 193.057 99.1552 193.058 99.1594 cv
193.06 99.1634 193.061 99.1673 193.062 99.1713 cv
193.063 99.1747 193.064 99.1783 193.065 99.1817 cv
193.066 99.1859 193.068 99.1905 193.069 99.1947 cv
193.07 99.1976 193.071 99.2 193.072 99.2029 cv
193.077 99.2205 193.082 99.2378 193.087 99.2553 cv
193.087 99.2561 193.088 99.257 193.088 99.2578 cv
193.09 99.2641 193.092 99.2704 193.093 99.2766 cv
193.094 99.2772 193.094 99.2774 193.094 99.2779 cv
193.328 100.084 193.433 100.898 193.419 101.699 cv
193.212 101.699 193.005 101.699 192.798 101.699 cv
.972549 .972549 .976471 rgb
f
177.315 101.699 mo
177.204 101.699 177.093 101.699 176.981 101.699 cv
176.947 99.4376 177.858 97.2672 179.454 95.7017 cv
179.191 95.9898 178.95 96.2956 178.732 96.616 cv
178.732 96.616 li
178.656 96.7284 178.582 96.8422 178.512 96.9582 cv
178.317 97.277 178.144 97.6089 177.994 97.9509 cv
177.96 98.0292 177.927 98.108 177.895 98.1874 cv
177.891 98.1973 177.887 98.207 177.883 98.2169 cv
177.45 99.3078 177.248 100.494 177.315 101.699 cv
.870588 .882353 .901961 rgb
f
201.677 127.85 mo
199.134 127.85 196.66 126.851 194.786 124.977 cv
193.718 123.91 192.93 122.638 192.444 121.198 cv
190.719 116.093 193.469 110.536 198.574 108.811 cv
199.612 108.46 200.675 108.289 201.727 108.289 cv
204.271 108.289 206.745 109.289 208.619 111.163 cv
209.687 112.23 210.476 113.502 210.962 114.942 cv
211.798 117.415 211.62 120.066 210.462 122.405 cv
209.304 124.745 207.304 126.494 204.83 127.329 cv
203.793 127.679 202.729 127.85 201.677 127.85 cv
201.702 126.291 mo
201.702 126.291 li
201.702 126.291 201.703 126.291 201.703 126.291 cv
202.575 126.291 203.462 126.151 204.333 125.857 cv
204.341 125.854 204.348 125.852 204.356 125.849 cv
204.358 125.849 204.359 125.848 204.361 125.847 cv
204.368 125.845 204.375 125.843 204.382 125.84 cv
204.384 125.84 204.385 125.839 204.387 125.839 cv
204.393 125.836 204.399 125.834 204.404 125.832 cv
204.407 125.832 204.409 125.831 204.411 125.83 cv
204.418 125.828 204.424 125.826 204.43 125.823 cv
204.434 125.822 204.437 125.821 204.441 125.82 cv
204.444 125.819 204.447 125.817 204.451 125.816 cv
204.459 125.813 204.467 125.81 204.476 125.807 cv
204.476 125.807 204.477 125.807 204.477 125.807 cv
207.959 124.56 210.094 121.191 209.913 117.656 cv
210.688 117.656 li
210.648 116.827 210.499 115.998 210.226 115.19 cv
209.778 113.865 209.053 112.695 208.07 111.712 cv
206.345 109.987 204.066 109.067 201.725 109.067 cv
200.757 109.067 199.779 109.224 198.823 109.547 cv
195.216 110.766 192.895 114.064 192.725 117.656 cv
193.492 117.656 li
193.444 118.606 193.561 119.58 193.863 120.538 cv
193.863 120.538 li
193.868 120.555 193.873 120.571 193.879 120.588 cv
193.879 120.59 193.88 120.592 193.881 120.594 cv
193.882 120.598 193.884 120.602 193.885 120.607 cv
193.886 120.61 193.887 120.614 193.888 120.617 cv
193.89 120.621 193.891 120.625 193.892 120.628 cv
193.894 120.635 193.896 120.641 193.898 120.648 cv
193.899 120.651 193.9 120.653 193.901 120.656 cv
193.903 120.661 193.904 120.666 193.906 120.671 cv
193.907 120.674 193.908 120.676 193.909 120.679 cv
193.911 120.686 193.914 120.694 193.916 120.701 cv
193.93 120.743 193.945 120.786 193.96 120.828 cv
195.153 124.181 198.311 126.289 201.695 126.291 cv
201.697 126.291 201.699 126.291 201.702 126.291 cv
201.702 126.291 li
.447059 .517647 .607843 rgb
f
201.702 126.291 mo
201.702 126.291 li
201.702 126.291 201.703 126.291 201.703 126.291 cv
201.703 126.291 201.702 126.291 201.702 126.291 cv
201.695 126.291 mo
198.311 126.289 195.153 124.181 193.96 120.828 cv
195.153 124.18 198.312 126.288 201.695 126.291 cv
202.025 125.965 mo
200.418 125.965 198.862 125.49 197.542 124.633 cv
203.254 117.656 li
209.257 117.656 li
209.538 120.097 208.696 122.502 207.054 124.239 cv
206.351 124.786 205.549 125.229 204.657 125.531 cv
203.785 125.825 202.897 125.965 202.025 125.965 cv
204.356 125.849 mo
204.357 125.849 204.359 125.848 204.361 125.847 cv
204.359 125.848 204.358 125.849 204.356 125.849 cv
204.382 125.84 mo
204.384 125.84 204.385 125.839 204.387 125.839 cv
204.385 125.839 204.384 125.84 204.382 125.84 cv
204.404 125.832 mo
204.407 125.832 204.409 125.831 204.411 125.83 cv
204.409 125.831 204.407 125.832 204.404 125.832 cv
204.43 125.823 mo
204.434 125.822 204.437 125.821 204.441 125.82 cv
204.437 125.821 204.434 125.822 204.43 125.823 cv
204.451 125.816 mo
204.459 125.813 204.467 125.81 204.476 125.807 cv
204.467 125.81 204.459 125.813 204.451 125.816 cv
204.477 125.807 mo
205.782 125.339 206.896 124.571 207.772 123.61 cv
207.751 123.63 207.73 123.651 207.709 123.671 cv
209.208 122.063 210.025 119.893 209.913 117.656 cv
209.913 117.656 li
210.094 121.191 207.959 124.56 204.477 125.807 cv
196.142 123.485 mo
195.308 122.631 194.647 121.582 194.24 120.375 cv
193.935 119.473 193.796 118.556 193.806 117.656 cv
200.915 117.656 li
196.142 123.485 li
193.909 120.679 mo
193.908 120.676 193.907 120.674 193.906 120.671 cv
193.907 120.674 193.908 120.676 193.909 120.679 cv
193.901 120.656 mo
193.9 120.653 193.899 120.651 193.898 120.648 cv
193.899 120.651 193.9 120.653 193.901 120.656 cv
193.892 120.628 mo
193.891 120.625 193.89 120.621 193.888 120.617 cv
193.89 120.621 193.891 120.625 193.892 120.628 cv
193.885 120.607 mo
193.884 120.602 193.882 120.598 193.881 120.594 cv
193.882 120.598 193.884 120.603 193.885 120.607 cv
193.879 120.588 mo
193.873 120.571 193.868 120.555 193.863 120.538 cv
193.868 120.555 193.873 120.571 193.879 120.588 cv
193.863 120.538 mo
193.561 119.58 193.444 118.606 193.492 117.656 cv
193.494 117.656 li
193.445 118.606 193.561 119.579 193.863 120.538 cv
.980392 .870588 .709804 rgb
f
197.205 124.402 mo
196.904 124.184 196.617 123.945 196.346 123.687 cv
201.284 117.656 li
202.728 117.656 li
197.205 124.402 li
196.164 123.508 mo
196.157 123.501 196.15 123.493 196.142 123.485 cv
200.915 117.656 li
200.955 117.656 li
196.164 123.508 li
.956863 .839216 .682353 rgb
f
197.542 124.633 mo
197.428 124.559 197.316 124.481 197.205 124.402 cv
202.728 117.656 li
203.254 117.656 li
197.542 124.633 li
.909804 .756863 .576471 rgb
f
196.346 123.687 mo
196.285 123.628 196.224 123.569 196.164 123.508 cv
200.955 117.656 li
201.284 117.656 li
196.346 123.687 li
f
207.054 124.239 mo
208.696 122.502 209.538 120.097 209.257 117.656 cv
209.913 117.656 li
210.025 119.893 209.208 122.063 207.709 123.671 cv
207.501 123.871 207.283 124.06 207.054 124.239 cv
.984314 .972549 .960784 rgb
f
201.702 126.291 mo
201.699 126.291 201.697 126.291 201.695 126.291 cv
198.312 126.288 195.153 124.18 193.96 120.828 cv
193.945 120.786 193.93 120.743 193.916 120.701 cv
193.914 120.694 193.911 120.686 193.909 120.679 cv
193.908 120.676 193.907 120.674 193.906 120.671 cv
193.904 120.666 193.903 120.661 193.901 120.656 cv
193.9 120.653 193.899 120.651 193.898 120.648 cv
193.896 120.641 193.894 120.635 193.892 120.628 cv
193.891 120.625 193.89 120.621 193.888 120.617 cv
193.887 120.614 193.886 120.61 193.885 120.607 cv
193.884 120.603 193.882 120.598 193.881 120.594 cv
193.88 120.592 193.879 120.59 193.879 120.588 cv
193.873 120.571 193.868 120.555 193.863 120.538 cv
193.863 120.538 li
193.561 119.579 193.445 118.606 193.494 117.656 cv
193.806 117.656 li
193.796 118.556 193.935 119.473 194.24 120.375 cv
194.647 121.582 195.308 122.631 196.142 123.485 cv
196.15 123.493 196.157 123.501 196.164 123.508 cv
196.224 123.569 196.285 123.628 196.346 123.687 cv
196.617 123.945 196.904 124.184 197.205 124.402 cv
197.316 124.481 197.428 124.559 197.542 124.633 cv
198.862 125.49 200.418 125.965 202.025 125.965 cv
202.897 125.965 203.785 125.825 204.657 125.531 cv
205.549 125.229 206.351 124.786 207.054 124.239 cv
207.283 124.06 207.501 123.871 207.709 123.671 cv
207.73 123.651 207.751 123.63 207.772 123.61 cv
206.896 124.571 205.782 125.339 204.477 125.807 cv
204.477 125.807 204.476 125.807 204.476 125.807 cv
204.467 125.81 204.459 125.813 204.451 125.816 cv
204.447 125.817 204.444 125.819 204.441 125.82 cv
204.437 125.821 204.434 125.822 204.43 125.823 cv
204.424 125.826 204.418 125.828 204.411 125.83 cv
204.409 125.831 204.407 125.832 204.404 125.832 cv
204.399 125.834 204.393 125.836 204.387 125.839 cv
204.385 125.839 204.384 125.84 204.382 125.84 cv
204.375 125.843 204.368 125.845 204.361 125.847 cv
204.359 125.848 204.357 125.849 204.356 125.849 cv
204.348 125.852 204.341 125.854 204.333 125.857 cv
203.462 126.151 202.575 126.291 201.703 126.291 cv
201.703 126.291 201.702 126.291 201.702 126.291 cv
201.702 126.291 li
.909804 .756863 .576471 rgb
f
210.688 117.656 mo
209.913 117.656 li
209.882 117.033 209.778 116.405 209.597 115.782 cv
209.597 115.781 209.596 115.779 209.596 115.778 cv
209.594 115.773 209.593 115.767 209.591 115.762 cv
209.59 115.76 209.59 115.758 209.589 115.756 cv
209.585 115.74 209.58 115.724 209.575 115.708 cv
209.574 115.704 209.573 115.7 209.572 115.697 cv
209.571 115.693 209.569 115.689 209.568 115.686 cv
209.567 115.682 209.566 115.677 209.564 115.673 cv
209.563 115.67 209.562 115.666 209.561 115.663 cv
209.56 115.658 209.558 115.653 209.557 115.647 cv
209.556 115.645 209.555 115.643 209.554 115.64 cv
209.552 115.633 209.55 115.625 209.547 115.618 cv
209.547 115.616 209.546 115.614 209.545 115.612 cv
209.544 115.606 209.542 115.6 209.54 115.594 cv
209.539 115.592 209.538 115.589 209.538 115.587 cv
209.536 115.581 209.534 115.576 209.532 115.57 cv
209.532 115.568 209.531 115.566 209.53 115.563 cv
209.528 115.556 209.526 115.549 209.523 115.542 cv
209.523 115.542 209.523 115.541 209.523 115.54 cv
209.52 115.532 209.518 115.525 209.515 115.517 cv
209.514 115.515 209.514 115.513 209.513 115.511 cv
209.511 115.505 209.509 115.499 209.507 115.493 cv
209.507 115.491 209.506 115.489 209.505 115.486 cv
209.503 115.481 209.501 115.475 209.499 115.469 cv
209.499 115.467 209.498 115.465 209.497 115.463 cv
209.495 115.455 209.492 115.447 209.489 115.44 cv
209.489 115.44 li
209.489 115.44 li
209.483 115.42 209.476 115.401 209.469 115.381 cv
209.469 115.379 209.468 115.377 209.467 115.375 cv
209.461 115.357 209.455 115.339 209.448 115.321 cv
209.04 114.171 208.402 113.168 207.603 112.345 cv
207.628 112.314 li
207.628 112.314 li
207.406 112.082 207.174 111.858 206.92 111.65 cv
206.7 111.47 206.471 111.307 206.238 111.154 cv
206.206 111.194 li
204.884 110.33 203.322 109.85 201.71 109.849 cv
201.708 109.849 201.706 109.849 201.704 109.849 cv
201.704 109.849 li
201.704 109.849 li
201.703 109.849 201.703 109.849 201.702 109.849 cv
200.864 109.849 200.013 109.978 199.174 110.25 cv
199.155 110.256 199.137 110.262 199.118 110.268 cv
199.116 110.269 199.115 110.269 199.113 110.27 cv
199.113 110.27 li
199.099 110.274 199.086 110.279 199.072 110.283 cv
199.072 110.283 li
199.063 110.286 199.054 110.29 199.045 110.293 cv
199.045 110.293 199.044 110.293 199.043 110.293 cv
195.77 111.413 193.657 114.396 193.492 117.656 cv
192.725 117.656 li
192.895 114.064 195.216 110.766 198.823 109.547 cv
199.779 109.224 200.757 109.067 201.725 109.067 cv
204.066 109.067 206.345 109.987 208.07 111.712 cv
209.053 112.695 209.778 113.865 210.226 115.19 cv
210.499 115.998 210.648 116.827 210.688 117.656 cv
.65098 .694118 .752941 rgb
f
209.913 117.656 mo
209.913 117.656 li
209.881 117.033 209.778 116.405 209.597 115.782 cv
209.778 116.405 209.882 117.033 209.913 117.656 cv
209.257 117.656 mo
203.254 117.656 li
207.089 112.972 li
207.869 113.804 208.488 114.812 208.876 115.962 cv
209.066 116.523 209.191 117.091 209.257 117.656 cv
200.915 117.656 mo
193.806 117.656 li
193.829 115.627 194.608 113.685 195.957 112.205 cv
194.49 113.644 193.601 115.594 193.494 117.656 cv
193.492 117.656 li
193.657 114.396 195.77 111.413 199.043 110.293 cv
197.898 110.685 196.901 111.31 196.074 112.09 cv
196.776 111.549 197.572 111.106 198.459 110.806 cv
199.331 110.512 200.219 110.372 201.091 110.372 cv
202.755 110.372 204.364 110.881 205.712 111.796 cv
200.915 117.656 li
209.596 115.778 mo
209.594 115.772 209.593 115.767 209.591 115.762 cv
209.593 115.767 209.594 115.773 209.596 115.778 cv
209.589 115.756 mo
209.585 115.74 209.58 115.724 209.575 115.708 cv
209.58 115.724 209.585 115.74 209.589 115.756 cv
209.572 115.697 mo
209.571 115.693 209.569 115.689 209.568 115.686 cv
209.569 115.689 209.571 115.693 209.572 115.697 cv
209.564 115.673 mo
209.563 115.67 209.562 115.666 209.561 115.663 cv
209.562 115.666 209.563 115.67 209.564 115.673 cv
209.557 115.647 mo
209.556 115.645 209.555 115.643 209.554 115.64 cv
209.555 115.643 209.556 115.645 209.557 115.647 cv
209.547 115.618 mo
209.547 115.616 209.546 115.614 209.545 115.612 cv
209.546 115.614 209.547 115.616 209.547 115.618 cv
209.54 115.594 mo
209.539 115.592 209.538 115.589 209.538 115.587 cv
209.538 115.589 209.539 115.592 209.54 115.594 cv
209.532 115.57 mo
209.532 115.568 209.531 115.566 209.53 115.563 cv
209.531 115.566 209.532 115.568 209.532 115.57 cv
209.523 115.542 mo
209.523 115.542 209.523 115.541 209.523 115.54 cv
209.523 115.541 209.523 115.542 209.523 115.542 cv
209.515 115.517 mo
209.514 115.515 209.514 115.513 209.513 115.511 cv
209.514 115.513 209.514 115.515 209.515 115.517 cv
209.507 115.493 mo
209.507 115.491 209.506 115.489 209.505 115.486 cv
209.506 115.489 209.507 115.491 209.507 115.493 cv
209.499 115.469 mo
209.499 115.467 209.498 115.465 209.497 115.463 cv
209.498 115.465 209.499 115.467 209.499 115.469 cv
209.469 115.381 mo
209.469 115.379 209.468 115.377 209.467 115.375 cv
209.468 115.377 209.469 115.379 209.469 115.381 cv
209.448 115.321 mo
209.041 114.171 208.402 113.168 207.603 112.345 cv
207.603 112.345 li
208.402 113.168 209.04 114.171 209.448 115.321 cv
206.206 111.194 mo
204.884 110.33 203.322 109.85 201.71 109.849 cv
203.322 109.85 204.884 110.33 206.206 111.194 cv
206.206 111.194 li
199.045 110.293 mo
199.054 110.29 199.063 110.286 199.072 110.283 cv
199.072 110.283 li
199.072 110.283 li
199.063 110.286 199.054 110.29 199.045 110.293 cv
199.113 110.27 mo
199.113 110.27 li
199.113 110.27 li
199.118 110.268 mo
199.137 110.262 199.155 110.256 199.174 110.25 cv
199.155 110.256 199.137 110.262 199.118 110.268 cv
201.702 109.849 mo
201.703 109.849 201.703 109.849 201.704 109.849 cv
201.704 109.849 li
201.703 109.849 201.703 109.849 201.702 109.849 cv
.972549 .905882 .811765 rgb
f
202.728 117.656 mo
201.284 117.656 li
205.946 111.961 li
206.246 112.181 206.532 112.421 206.802 112.681 cv
202.728 117.656 li
200.955 117.656 mo
200.915 117.656 li
205.712 111.796 li
205.721 111.802 205.73 111.808 205.738 111.814 cv
200.955 117.656 li
207.628 112.314 mo
207.534 112.216 207.437 112.12 207.338 112.025 cv
207.311 112.059 li
207.037 111.804 206.747 111.569 206.443 111.355 cv
206.464 111.329 li
206.252 111.187 li
206.232 111.211 li
206.223 111.206 206.214 111.2 206.206 111.194 cv
206.206 111.194 li
206.238 111.154 li
206.471 111.307 206.7 111.47 206.92 111.65 cv
207.174 111.858 207.406 112.082 207.628 112.314 cv
207.628 112.314 li
.956863 .886274 .796078 rgb
f
203.254 117.656 mo
202.728 117.656 li
206.802 112.681 li
206.9 112.775 206.996 112.872 207.089 112.972 cv
203.254 117.656 li
207.603 112.345 mo
207.507 112.247 207.41 112.152 207.311 112.059 cv
207.338 112.025 li
207.437 112.12 207.534 112.216 207.628 112.314 cv
207.628 112.314 li
207.603 112.345 li
207.603 112.345 li
.929412 .839216 .733333 rgb
f
201.284 117.656 mo
200.955 117.656 li
205.738 111.814 li
205.808 111.862 205.878 111.911 205.946 111.961 cv
201.284 117.656 li
206.443 111.355 mo
206.373 111.306 206.303 111.258 206.232 111.211 cv
206.252 111.187 li
206.464 111.329 li
206.443 111.355 li
f
209.597 115.782 mo
209.597 115.781 209.596 115.779 209.596 115.778 cv
209.596 115.779 209.597 115.781 209.597 115.782 cv
209.591 115.762 mo
209.59 115.76 209.59 115.758 209.589 115.756 cv
209.59 115.758 209.59 115.76 209.591 115.762 cv
209.575 115.708 mo
209.574 115.704 209.573 115.701 209.572 115.697 cv
209.573 115.7 209.574 115.704 209.575 115.708 cv
209.568 115.686 mo
209.567 115.681 209.566 115.677 209.564 115.673 cv
209.566 115.677 209.567 115.682 209.568 115.686 cv
209.561 115.663 mo
209.56 115.658 209.558 115.652 209.557 115.647 cv
209.558 115.653 209.56 115.658 209.561 115.663 cv
209.554 115.64 mo
209.552 115.633 209.55 115.625 209.547 115.618 cv
209.55 115.625 209.552 115.633 209.554 115.64 cv
209.545 115.612 mo
209.544 115.606 209.542 115.6 209.54 115.594 cv
209.542 115.6 209.544 115.606 209.545 115.612 cv
209.538 115.587 mo
209.536 115.581 209.534 115.576 209.532 115.57 cv
209.534 115.576 209.536 115.581 209.538 115.587 cv
209.53 115.563 mo
209.528 115.556 209.526 115.549 209.523 115.542 cv
209.526 115.549 209.528 115.556 209.53 115.563 cv
209.523 115.54 mo
209.52 115.532 209.518 115.525 209.515 115.517 cv
209.518 115.525 209.52 115.532 209.523 115.54 cv
209.513 115.511 mo
209.511 115.505 209.509 115.5 209.507 115.493 cv
209.509 115.499 209.511 115.505 209.513 115.511 cv
209.505 115.486 mo
209.503 115.481 209.501 115.475 209.499 115.469 cv
209.501 115.475 209.503 115.481 209.505 115.486 cv
209.497 115.463 mo
209.495 115.455 209.492 115.447 209.489 115.44 cv
209.492 115.447 209.495 115.455 209.497 115.463 cv
209.489 115.44 mo
209.483 115.42 209.476 115.401 209.469 115.381 cv
209.476 115.401 209.483 115.42 209.489 115.44 cv
209.467 115.375 mo
209.461 115.357 209.455 115.339 209.448 115.321 cv
209.455 115.339 209.461 115.357 209.467 115.375 cv
.941176 .945098 .956863 rgb
f
209.913 117.656 mo
209.257 117.656 li
209.191 117.091 209.066 116.523 208.876 115.962 cv
208.488 114.812 207.869 113.804 207.089 112.972 cv
207.603 112.345 li
208.402 113.168 209.041 114.171 209.448 115.321 cv
209.455 115.339 209.461 115.357 209.467 115.375 cv
209.468 115.377 209.469 115.379 209.469 115.381 cv
209.476 115.401 209.483 115.42 209.489 115.44 cv
209.489 115.44 li
209.489 115.44 li
209.492 115.447 209.495 115.455 209.497 115.463 cv
209.498 115.465 209.499 115.467 209.499 115.469 cv
209.501 115.475 209.503 115.481 209.505 115.486 cv
209.506 115.489 209.507 115.491 209.507 115.493 cv
209.509 115.5 209.511 115.505 209.513 115.511 cv
209.514 115.513 209.514 115.515 209.515 115.517 cv
209.518 115.525 209.52 115.532 209.523 115.54 cv
209.523 115.541 209.523 115.542 209.523 115.542 cv
209.526 115.549 209.528 115.556 209.53 115.563 cv
209.531 115.566 209.532 115.568 209.532 115.57 cv
209.534 115.576 209.536 115.581 209.538 115.587 cv
209.538 115.589 209.539 115.592 209.54 115.594 cv
209.542 115.6 209.544 115.606 209.545 115.612 cv
209.546 115.614 209.547 115.616 209.547 115.618 cv
209.55 115.625 209.552 115.633 209.554 115.64 cv
209.555 115.643 209.556 115.645 209.557 115.647 cv
209.558 115.652 209.56 115.658 209.561 115.663 cv
209.562 115.666 209.563 115.67 209.564 115.673 cv
209.566 115.677 209.567 115.681 209.568 115.686 cv
209.569 115.689 209.571 115.693 209.572 115.697 cv
209.573 115.701 209.574 115.704 209.575 115.708 cv
209.58 115.724 209.585 115.74 209.589 115.756 cv
209.59 115.758 209.59 115.76 209.591 115.762 cv
209.593 115.767 209.594 115.772 209.596 115.778 cv
209.596 115.779 209.597 115.781 209.597 115.782 cv
209.778 116.405 209.881 117.033 209.913 117.656 cv
.972549 .968627 .964706 rgb
f
206.802 112.681 mo
206.532 112.421 206.246 112.181 205.946 111.961 cv
206.443 111.355 li
206.747 111.569 207.037 111.804 207.311 112.059 cv
206.802 112.681 li
.972549 .964706 .960784 rgb
f
199.043 110.293 mo
199.044 110.293 199.045 110.293 199.045 110.293 cv
199.045 110.293 199.044 110.293 199.043 110.293 cv
199.072 110.283 mo
199.086 110.279 199.099 110.274 199.113 110.27 cv
199.099 110.274 199.086 110.279 199.072 110.283 cv
199.113 110.27 mo
199.115 110.269 199.116 110.269 199.118 110.268 cv
199.116 110.269 199.115 110.269 199.113 110.27 cv
199.174 110.25 mo
200.013 109.978 200.864 109.849 201.702 109.849 cv
200.865 109.849 200.013 109.978 199.174 110.25 cv
201.71 109.849 mo
201.708 109.849 201.706 109.849 201.704 109.849 cv
201.704 109.849 li
201.706 109.849 201.708 109.849 201.71 109.849 cv
.941176 .945098 .956863 rgb
f
196.074 112.09 mo
196.901 111.31 197.898 110.685 199.043 110.293 cv
199.044 110.293 199.045 110.293 199.045 110.293 cv
199.054 110.29 199.063 110.286 199.072 110.283 cv
199.072 110.283 li
199.086 110.279 199.099 110.274 199.113 110.27 cv
199.113 110.27 li
199.115 110.269 199.116 110.269 199.118 110.268 cv
199.137 110.262 199.155 110.256 199.174 110.25 cv
200.013 109.978 200.865 109.849 201.702 109.849 cv
201.703 109.849 201.703 109.849 201.704 109.849 cv
201.706 109.849 201.708 109.849 201.71 109.849 cv
203.322 109.85 204.884 110.33 206.206 111.194 cv
205.712 111.796 li
204.364 110.881 202.755 110.372 201.091 110.372 cv
200.219 110.372 199.331 110.512 198.459 110.806 cv
197.572 111.106 196.776 111.549 196.074 112.09 cv
.972549 .968627 .964706 rgb
f
205.738 111.814 mo
205.73 111.808 205.721 111.802 205.712 111.796 cv
206.206 111.194 li
206.214 111.2 206.223 111.206 206.232 111.211 cv
205.738 111.814 li
.972549 .964706 .960784 rgb
f
207.089 112.972 mo
206.996 112.872 206.9 112.775 206.802 112.681 cv
207.311 112.059 li
207.41 112.152 207.507 112.247 207.603 112.345 cv
207.089 112.972 li
.968627 .960784 .952941 rgb
f
205.946 111.961 mo
205.878 111.911 205.808 111.862 205.738 111.814 cv
206.232 111.211 li
206.303 111.258 206.373 111.306 206.443 111.355 cv
205.946 111.961 li
f
193.806 117.656 mo
193.494 117.656 li
193.601 115.594 194.49 113.644 195.957 112.205 cv
194.608 113.685 193.829 115.627 193.806 117.656 cv
.929412 .839216 .733333 rgb
f
112.946 121.012 mo
112.946 124.587 110.048 127.485 106.474 127.485 cv
83.2794 127.485 li
79.7043 127.485 76.8064 124.587 76.8064 121.012 cv
76.8064 86.7601 li
76.8064 83.1853 84.6863 68.4205 87.0873 68.4205 cv
102.666 68.4205 li
105.067 68.4205 112.946 83.1853 112.946 86.7601 cv
112.946 121.012 li
.741176 .8 .866667 rgb
f
98.8558 121.808 mo
92.7639 121.808 77.4792 121.808 77.4792 121.808 cv
77.8694 124.663 80.3182 126.873 83.2794 126.873 cv
99.57 126.873 li
99.57 126.873 98.8558 124.634 98.8558 121.808 cv
.701961 .764706 .847059 rgb
f
103.991 121.808 mo
103.991 124.736 102.529 126.873 102.529 126.873 cv
106.473 126.873 li
109.435 126.873 111.883 124.663 112.274 121.808 cv
112.274 121.808 108.379 121.808 103.991 121.808 cv
.596078 .576471 .67451 rgb
f
97.9336 69.0327 mo
87.0881 69.0327 li
85.5566 69.0843 78.3606 81.2859 77.5038 85.9613 cv
77.5038 85.9613 92.4535 85.9613 96.3217 85.9613 cv
96.3217 80.1356 97.9336 69.0327 97.9336 69.0327 cv
.819608 .87451 .929412 rgb
f
103.252 85.9613 mo
106.491 85.9613 112.249 85.9613 112.249 85.9613 cv
111.392 81.2859 104.196 69.0843 102.666 69.0327 cv
100.416 69.0327 li
100.416 69.0327 103.252 81.425 103.252 85.9613 cv
.701961 .764706 .847059 rgb
f
112.946 115.064 mo
112.946 91.7079 li
76.8064 91.7079 li
76.8064 115.064 li
112.946 115.064 li
.196078 .521569 1 rgb
f
112.946 115.064 mo
112.946 91.7079 li
76.8064 91.7079 li
76.8064 115.064 li
112.946 115.064 li
f
94.8462 91.7079 mo
76.8064 91.7079 li
76.8064 115.064 li
94.8462 115.064 li
94.8462 91.7079 li
.301961 .592157 1 rgb
f
104.09 91.7079 mo
104.09 115.064 li
112.946 115.064 li
112.946 91.7079 li
104.09 91.7079 li
.117647 .423529 .847059 rgb
f
80.0004 91.7079 mo
76.8064 91.7079 li
76.8064 115.064 li
80.0004 115.064 li
80.0004 91.7079 li
.690196 .819608 1 rgb
f
90.9255 100.692 mo
90.9255 94.3305 li
85.2828 94.3305 li
85.2828 100.692 li
79.6907 100.692 li
79.6907 106.335 li
85.2828 106.335 li
85.2828 112.697 li
90.9255 112.697 li
90.9255 106.335 li
97.2871 106.335 li
97.2871 100.692 li
90.9255 100.692 li
1 1 1 rgb
f
111.678 95.1408 mo
97.1244 95.1408 li
97.1244 93.9281 li
111.678 93.9281 li
111.678 95.1408 li
f
111.678 97.8912 mo
100.156 97.8912 li
100.156 97.1116 li
111.678 97.1116 li
111.678 97.8912 li
f
111.678 100.143 mo
100.156 100.143 li
100.156 99.3639 li
111.678 99.3639 li
111.678 100.143 li
f
111.678 102.396 mo
100.156 102.396 li
100.156 101.616 li
111.678 101.616 li
111.678 102.396 li
f
111.678 104.648 mo
100.156 104.648 li
100.156 103.868 li
111.678 103.868 li
111.678 104.648 li
f
111.678 106.9 mo
100.156 106.9 li
100.156 106.121 li
111.678 106.121 li
111.678 106.9 li
f
111.678 109.153 mo
100.156 109.153 li
100.156 108.373 li
111.678 108.373 li
111.678 109.153 li
f
106.474 127.485 mo
101.917 127.485 li
101.918 127.485 101.919 127.485 101.92 127.485 cv
106.474 127.485 li
110.048 127.485 112.946 124.587 112.946 121.012 cv
112.946 115.064 li
112.946 91.7079 li
112.946 86.7601 li
112.946 86.7601 li
112.946 121.012 li
112.946 124.587 110.048 127.485 106.474 127.485 cv
112.935 86.5026 mo
112.644 83.0973 107.032 72.2464 103.956 69.2143 cv
103.957 69.2143 li
107.032 72.2464 112.644 83.0973 112.935 86.5026 cv
.917647 .917647 .92549 rgb
f
106.474 127.485 mo
101.92 127.485 li
102.234 127.464 103.991 124.179 103.991 121.734 cv
103.991 115.064 li
104.09 115.064 li
112.946 115.064 li
112.946 121.012 li
112.946 124.587 110.048 127.485 106.474 127.485 cv
103.991 121.808 mo
103.991 124.736 102.529 126.873 102.529 126.873 cv
106.473 126.873 li
109.435 126.873 111.883 124.663 112.274 121.808 cv
112.274 121.808 108.379 121.808 103.991 121.808 cv
112.946 91.7079 mo
103.991 91.7079 li
103.991 86.4097 li
103.991 86.273 103.986 86.1232 103.977 85.9613 cv
107.279 85.9613 112.249 85.9613 112.249 85.9613 cv
111.452 81.612 105.17 70.7502 103.065 69.2143 cv
103.956 69.2143 li
107.032 72.2464 112.644 83.0973 112.935 86.5026 cv
112.942 86.5939 112.946 86.6798 112.946 86.7601 cv
112.946 91.7079 li
100.937 71.3997 mo
100.747 70.614 100.571 69.8775 100.416 69.2143 cv
100.458 69.2143 li
100.534 69.5508 100.709 70.3352 100.937 71.3997 cv
.682353 .737255 .807843 rgb
f
106.473 126.873 mo
102.529 126.873 li
102.529 126.873 103.991 124.736 103.991 121.808 cv
108.379 121.808 112.274 121.808 112.274 121.808 cv
111.883 124.663 109.435 126.873 106.473 126.873 cv
.552941 .537255 .631373 rgb
f
112.249 85.9613 mo
112.249 85.9613 107.279 85.9613 103.977 85.9613 cv
103.801 83.0642 102.115 76.2819 100.937 71.3997 cv
100.709 70.3352 100.534 69.5508 100.458 69.2143 cv
103.065 69.2143 li
105.17 70.7502 111.452 81.612 112.249 85.9613 cv
.647059 .705882 .788235 rgb
f
104.09 115.064 mo
103.991 115.064 li
103.991 109.153 li
104.09 109.153 li
104.09 115.064 li
104.09 108.373 mo
103.991 108.373 li
103.991 106.9 li
104.09 106.9 li
104.09 108.373 li
104.09 106.121 mo
103.991 106.121 li
103.991 104.648 li
104.09 104.648 li
104.09 106.121 li
104.09 103.868 mo
103.991 103.868 li
103.991 102.396 li
104.09 102.396 li
104.09 103.868 li
104.09 101.616 mo
103.991 101.616 li
103.991 100.143 li
104.09 100.143 li
104.09 101.616 li
104.09 99.3639 mo
103.991 99.3639 li
103.991 97.8912 li
104.09 97.8912 li
104.09 99.3639 li
104.09 97.1116 mo
103.991 97.1116 li
103.991 95.1408 li
104.09 95.1408 li
104.09 97.1116 li
104.09 93.9281 mo
103.991 93.9281 li
103.991 91.7079 li
112.946 91.7079 li
104.09 91.7079 li
104.09 93.9281 li
.196078 .486274 .92549 rgb
f
112.946 115.064 mo
112.946 115.064 li
104.09 115.064 li
104.09 109.153 li
111.678 109.153 li
111.678 108.373 li
104.09 108.373 li
104.09 106.9 li
111.678 106.9 li
111.678 106.121 li
104.09 106.121 li
104.09 104.648 li
111.678 104.648 li
111.678 103.868 li
104.09 103.868 li
104.09 102.396 li
111.678 102.396 li
111.678 101.616 li
104.09 101.616 li
104.09 100.143 li
111.678 100.143 li
111.678 99.3639 li
104.09 99.3639 li
104.09 97.8912 li
111.678 97.8912 li
111.678 97.1116 li
104.09 97.1116 li
104.09 95.1408 li
111.678 95.1408 li
111.678 93.9281 li
104.09 93.9281 li
104.09 91.7079 li
112.946 91.7079 li
112.946 115.064 li
.12549 .4 .788235 rgb
f
111.678 95.1408 mo
104.09 95.1408 li
103.991 95.1408 li
103.991 93.9281 li
104.09 93.9281 li
111.678 93.9281 li
111.678 95.1408 li
.917647 .917647 .92549 rgb
f
111.678 97.8912 mo
104.09 97.8912 li
103.991 97.8912 li
103.991 97.1116 li
104.09 97.1116 li
111.678 97.1116 li
111.678 97.8912 li
f
111.678 100.143 mo
104.09 100.143 li
103.991 100.143 li
103.991 99.3639 li
104.09 99.3639 li
111.678 99.3639 li
111.678 100.143 li
f
111.678 102.396 mo
104.09 102.396 li
103.991 102.396 li
103.991 101.616 li
104.09 101.616 li
111.678 101.616 li
111.678 102.396 li
f
111.678 104.648 mo
104.09 104.648 li
103.991 104.648 li
103.991 103.868 li
104.09 103.868 li
111.678 103.868 li
111.678 104.648 li
f
111.678 106.9 mo
104.09 106.9 li
103.991 106.9 li
103.991 106.121 li
104.09 106.121 li
111.678 106.121 li
111.678 106.9 li
f
111.678 109.153 mo
104.09 109.153 li
103.991 109.153 li
103.991 108.373 li
104.09 108.373 li
111.678 108.373 li
111.678 109.153 li
f
105.117 69.2143 mo
105.216 68.961 105.275 68.6875 105.275 68.3989 cv
105.275 55.7518 li
105.275 54.5099 104.269 53.5033 103.027 53.5033 cv
86.726 53.5033 li
85.4841 53.5033 84.4775 54.5099 84.4775 55.7518 cv
84.4775 68.3989 li
84.4775 68.6875 84.5367 68.961 84.6356 69.2143 cv
105.117 69.2143 li
.196078 .521569 1 rgb
f
105.272 55.7229 mo
105.257 54.4947 104.259 53.5032 103.027 53.5032 cv
86.7259 53.5032 li
85.4941 53.5032 84.4963 54.4947 84.4805 55.7229 cv
105.272 55.7229 li
cp
.690196 .819608 1 rgb
f
90.6215 56.3683 mo
90.6215 56.1373 90.4343 55.95 90.2032 55.95 cv
89.9723 55.95 89.7852 56.1373 89.7852 56.3683 cv
89.7852 69.2143 li
90.6215 69.2143 li
90.6215 56.3683 li
.117647 .423529 .847059 rgb
f
86.6952 56.3683 mo
86.6952 56.1373 86.5447 55.95 86.3592 55.95 cv
86.1735 55.95 86.0231 56.1373 86.0231 56.3683 cv
86.0231 69.2143 li
86.6952 69.2143 li
86.6952 56.3683 li
f
88.3508 69.2143 mo
88.3508 56.3683 li
88.3508 56.1373 88.1936 55.95 87.9997 55.95 cv
87.8059 55.95 87.6487 56.1373 87.6487 56.3683 cv
87.6487 69.2143 li
88.3508 69.2143 li
f
104.648 55.95 mo
104.47 55.95 104.326 56.1373 104.326 56.3683 cv
104.326 69.2143 li
104.969 69.2143 li
104.969 56.3683 li
104.969 56.1373 104.825 55.95 104.648 55.95 cv
f
85.3613 69.2143 mo
85.3613 56.3683 li
85.3613 56.1373 85.2177 55.95 85.0402 55.95 cv
84.8629 55.95 84.7192 56.1373 84.7192 56.3683 cv
84.7192 69.2143 li
85.3613 69.2143 li
f
99.9028 56.3683 mo
99.9028 56.1373 99.7154 55.95 99.4845 55.95 cv
99.2535 55.95 99.0662 56.1373 99.0662 56.3683 cv
99.0662 69.2143 li
99.9028 69.2143 li
99.9028 56.3683 li
f
102.039 56.3683 mo
102.039 56.1373 101.882 55.95 101.688 55.95 cv
101.494 55.95 101.337 56.1373 101.337 56.3683 cv
101.337 69.2143 li
102.039 69.2143 li
102.039 56.3683 li
f
103.665 56.3683 mo
103.665 56.1373 103.514 55.95 103.329 55.95 cv
103.143 55.95 102.992 56.1373 102.992 56.3683 cv
102.992 69.2143 li
103.665 69.2143 li
103.665 56.3683 li
f
97.5222 56.3683 mo
97.5222 56.1373 97.3349 55.95 97.104 55.95 cv
96.8731 55.95 96.6857 56.1373 96.6857 56.3683 cv
96.6857 69.2143 li
97.5222 69.2143 li
97.5222 56.3683 li
f
93.002 56.3683 mo
93.002 56.1373 92.8146 55.95 92.5837 55.95 cv
92.3529 55.95 92.1655 56.1373 92.1655 56.3683 cv
92.1655 69.2143 li
93.002 69.2143 li
93.002 56.3683 li
f
95.2537 56.3683 mo
95.2537 56.1373 95.0666 55.95 94.8356 55.95 cv
94.6046 55.95 94.4174 56.1373 94.4174 56.3683 cv
94.4174 69.2143 li
95.2537 69.2143 li
95.2537 56.3683 li
f
103.065 69.2143 mo
100.458 69.2143 li
100.458 69.2143 li
101.337 69.2143 li
102.039 69.2143 li
102.992 69.2143 li
103.065 69.2143 li
103.065 69.2143 li
.607843 .662745 .729412 rgb
f
105.117 69.2143 mo
104.969 69.2143 li
104.969 59.3414 li
105.275 56.364 li
105.275 68.3989 li
105.275 68.6875 105.216 68.961 105.117 69.2143 cv
104.326 69.2143 mo
103.665 69.2143 li
103.665 66.9559 li
104.026 66.5762 104.269 66.0974 104.326 65.5767 cv
104.326 69.2143 li
102.992 69.2143 mo
102.039 69.2143 li
102.039 67.7869 li
102.378 67.7408 102.701 67.631 102.992 67.4713 cv
102.992 69.2143 li
101.337 69.2143 mo
100.458 69.2143 li
99.9028 69.2143 li
99.9028 67.8113 li
101.337 67.8113 li
101.337 69.2143 li
99.0662 69.2143 mo
97.5222 69.2143 li
97.5222 67.8113 li
99.0662 67.8113 li
99.0662 69.2143 li
96.6857 69.2143 mo
95.2537 69.2143 li
95.2537 67.8113 li
96.6857 67.8113 li
96.6857 69.2143 li
94.4174 69.2143 mo
93.002 69.2143 li
93.002 67.8113 li
94.4174 67.8113 li
94.4174 69.2143 li
92.1655 69.2143 mo
90.6215 69.2143 li
90.6215 67.8113 li
92.1655 67.8113 li
92.1655 69.2143 li
89.7852 69.2143 mo
89.6346 69.2143 li
89.4657 68.7639 89.2808 68.2948 89.0818 67.8113 cv
89.7852 67.8113 li
89.7852 69.2143 li
.203922 .494118 .921569 rgb
f
90.6215 69.2143 mo
89.7852 69.2143 li
89.7852 67.8113 li
90.6215 67.8113 li
90.6215 69.2143 li
.133333 .407843 .780392 rgb
f
104.969 69.2143 mo
104.326 69.2143 li
104.326 65.5767 li
104.327 65.572 104.327 65.5675 104.328 65.5629 cv
104.969 59.3414 li
104.969 69.2143 li
f
99.9028 69.2143 mo
99.0662 69.2143 li
99.0662 67.8113 li
99.9028 67.8113 li
99.9028 69.2143 li
f
102.039 69.2143 mo
101.337 69.2143 li
101.337 67.8113 li
101.678 67.8113 li
101.8 67.8113 101.921 67.803 102.039 67.7869 cv
102.039 69.2143 li
f
103.665 69.2143 mo
103.065 69.2143 li
102.992 69.2143 li
102.992 67.4713 li
103.244 67.3337 103.471 67.159 103.665 66.9559 cv
103.665 69.2143 li
f
97.5222 69.2143 mo
96.6857 69.2143 li
96.6857 67.8113 li
97.5222 67.8113 li
97.5222 69.2143 li
f
93.002 69.2143 mo
92.1655 69.2143 li
92.1655 67.8113 li
93.002 67.8113 li
93.002 69.2143 li
f
95.2537 69.2143 mo
94.4174 69.2143 li
94.4174 67.8113 li
95.2537 67.8113 li
95.2537 69.2143 li
f
90.7631 118.921 mo
90.7631 123.651 86.9291 127.485 82.1994 127.485 cv
51.5125 127.485 li
46.7829 127.485 42.9488 123.651 42.9488 118.921 cv
42.9488 73.6046 li
42.9488 68.875 53.3741 49.3406 56.5507 49.3406 cv
77.1613 49.3406 li
80.3379 49.3406 90.7631 68.875 90.7631 73.6046 cv
90.7631 118.921 li
.843137 .854902 .866667 rgb
f
72.1207 119.974 mo
64.0611 119.974 43.8387 119.974 43.8387 119.974 cv
44.3551 123.752 47.5949 126.675 51.5126 126.675 cv
73.0656 126.675 li
73.0656 126.675 72.1207 123.713 72.1207 119.974 cv
cp
.803922 .823529 .847059 rgb
f
78.9153 119.974 mo
78.9153 123.848 76.9804 126.675 76.9804 126.675 cv
82.1993 126.675 li
86.1171 126.675 89.3568 123.752 89.8732 119.974 cv
89.8732 119.974 84.72 119.974 78.9153 119.974 cv
.658824 .654902 .67451 rgb
f
70.9006 50.1505 mo
56.5516 50.1505 li
54.5256 50.219 45.0049 66.362 43.8713 72.5477 cv
43.8713 72.5477 63.6503 72.5477 68.7682 72.5477 cv
68.7682 64.8401 70.9006 50.1505 70.9006 50.1505 cv
.94902 .964706 .968627 rgb
f
77.9375 72.5477 mo
82.2226 72.5477 89.8406 72.5477 89.8406 72.5477 cv
88.7071 66.362 79.1864 50.219 77.1612 50.1505 cv
74.1855 50.1505 li
74.1855 50.1505 77.9375 66.546 77.9375 72.5477 cv
.803922 .823529 .847059 rgb
f
90.7631 111.052 mo
90.7631 80.1507 li
42.9488 80.1507 li
42.9488 111.052 li
90.7631 111.052 li
1 .2 .196078 rgb
f
90.7631 111.052 mo
90.7631 80.1507 li
42.9488 80.1507 li
42.9488 111.052 li
90.7631 111.052 li
f
66.816 80.1507 mo
42.9488 80.1507 li
42.9488 111.052 li
66.816 111.052 li
66.816 80.1507 li
cp
1 .301961 .301961 rgb
f
79.0453 80.1507 mo
79.0453 111.052 li
90.7631 111.052 li
90.7631 80.1507 li
79.0453 80.1507 li
.847059 .117647 .117647 rgb
f
47.1745 80.1507 mo
42.9488 80.1507 li
42.9488 111.052 li
47.1745 111.052 li
47.1745 80.1507 li
cp
1 .690196 .690196 rgb
f
61.6286 92.0372 mo
61.6286 83.6204 li
54.1633 83.6204 li
54.1633 92.0372 li
46.7648 92.0372 li
46.7648 99.5025 li
54.1633 99.5025 li
54.1633 107.919 li
61.6286 107.919 li
61.6286 99.5025 li
70.0454 99.5025 li
70.0454 92.0372 li
61.6286 92.0372 li
cp
1 1 1 rgb
f
89.0844 84.6926 mo
69.8301 84.6926 li
69.8301 83.088 li
89.0844 83.088 li
89.0844 84.6926 li
f
89.0844 88.3314 mo
73.8414 88.3314 li
73.8414 87.2999 li
89.0844 87.2999 li
89.0844 88.3314 li
f
89.0844 91.3113 mo
73.8414 91.3113 li
73.8414 90.2798 li
89.0844 90.2798 li
89.0844 91.3113 li
f
89.0844 94.2911 mo
73.8414 94.2911 li
73.8414 93.2595 li
89.0844 93.2595 li
89.0844 94.2911 li
f
89.0844 97.2708 mo
73.8414 97.2708 li
73.8414 96.2394 li
89.0844 96.2394 li
89.0844 97.2708 li
f
89.0844 100.251 mo
73.8414 100.251 li
73.8414 99.2192 li
89.0844 99.2192 li
89.0844 100.251 li
f
89.0844 103.231 mo
73.8414 103.231 li
73.8414 102.199 li
89.0844 102.199 li
89.0844 103.231 li
f
90.7631 85.9613 mo
90.7631 85.9613 li
90.7631 80.1507 li
90.7631 73.6046 li
90.7631 72.65 90.3387 71.0929 89.6345 69.2143 cv
89.6346 69.2143 li
90.3387 71.0929 90.7631 72.6499 90.7631 73.6045 cv
90.7631 85.9613 li
.756863 .807843 .862745 rgb
f
90.7631 112.697 mo
90.7631 112.697 li
90.7631 111.052 li
90.7631 94.3305 li
90.7631 112.697 li
.921569 .921569 .92549 rgb
f
84.4775 58.4889 mo
82.5064 55.023 80.4386 51.9382 78.8692 50.3911 cv
78.8692 50.3911 li
80.4386 51.9382 82.5064 55.023 84.4775 58.4889 cv
84.4775 58.4889 li
f
89.0818 67.8113 mo
89.0818 67.8113 li
88.8555 67.2614 88.6105 66.6917 88.3508 66.1099 cv
88.3508 66.1098 li
88.6105 66.6917 88.8555 67.2614 89.0818 67.8113 cv
87.6487 64.5835 mo
87.3445 63.9401 87.0251 63.2862 86.6952 62.6311 cv
86.6952 62.6311 li
87.0251 63.2862 87.3445 63.94 87.6487 64.5834 cv
87.6487 64.5835 li
86.0231 61.322 mo
85.8058 60.9068 85.5846 60.4916 85.3613 60.08 cv
85.3613 60.08 li
85.5846 60.4916 85.8058 60.9068 86.0231 61.322 cv
86.0231 61.322 li
84.7192 58.9165 mo
84.6391 58.7739 84.558 58.6303 84.4775 58.4889 cv
84.4775 58.4889 li
84.558 58.6303 84.6391 58.7739 84.7192 58.9165 cv
84.7192 58.9165 li
.196078 .490196 .92549 rgb
f
86.6952 62.6311 mo
86.4756 62.1948 86.2515 61.7583 86.0231 61.322 cv
86.0231 61.322 li
86.2515 61.7583 86.4756 62.1948 86.6952 62.6311 cv
86.6952 62.6311 li
.12549 .403922 .788235 rgb
f
88.3508 66.1099 mo
88.1273 65.6093 87.8929 65.0998 87.6487 64.5835 cv
87.6487 64.5834 li
87.8929 65.0997 88.1273 65.6093 88.3508 66.1098 cv
88.3508 66.1099 li
f
85.3613 60.08 mo
85.149 59.6886 84.9353 59.3014 84.7192 58.9165 cv
84.7192 58.9165 li
84.9353 59.3014 85.149 59.6886 85.3613 60.08 cv
85.3613 60.08 li
f
89.6346 69.2143 mo
89.6345 69.2143 li
89.4657 68.7639 89.2808 68.2948 89.0818 67.8113 cv
89.0818 67.8113 li
89.2808 68.2948 89.4657 68.7639 89.6346 69.2143 cv
.203922 .466667 .854902 rgb
f
82.1994 127.485 mo
76.1702 127.485 li
76.5752 127.485 78.9153 123.121 78.9153 119.876 cv
78.9153 111.052 li
79.0453 111.052 li
90.7631 111.052 li
90.7631 112.697 li
90.7631 115.064 li
90.7631 118.921 li
90.7631 119.041 90.7606 119.161 90.7558 119.28 cv
90.5678 123.843 86.8089 127.485 82.1994 127.485 cv
82.1994 127.485 li
78.9153 119.974 mo
78.9153 123.848 76.9804 126.675 76.9804 126.675 cv
82.1993 126.675 li
86.1171 126.675 89.3568 123.752 89.8732 119.974 cv
89.8732 119.974 84.72 119.974 78.9153 119.974 cv
90.7631 80.1507 mo
78.9153 80.1507 li
78.9153 73.1411 li
78.9153 72.9603 78.9086 72.762 78.8956 72.5477 cv
83.2649 72.5477 89.8406 72.5477 89.8406 72.5477 cv
88.7862 66.7939 80.4749 52.4247 77.6895 50.3911 cv
78.8692 50.3911 li
80.4386 51.9382 82.5064 55.023 84.4775 58.4889 cv
84.558 58.6303 84.6391 58.7739 84.7192 58.9165 cv
84.9353 59.3014 85.149 59.6886 85.3613 60.08 cv
85.5846 60.4916 85.8058 60.9068 86.0231 61.322 cv
86.2515 61.7583 86.4756 62.1948 86.6952 62.6311 cv
87.0251 63.2862 87.3445 63.9401 87.6487 64.5835 cv
87.8929 65.0998 88.1273 65.6093 88.3508 66.1099 cv
88.6105 66.6917 88.8555 67.2614 89.0818 67.8113 cv
89.2808 68.2948 89.4657 68.7639 89.6345 69.2143 cv
89.6345 69.2143 li
90.3387 71.0929 90.7631 72.65 90.7631 73.6046 cv
90.7631 80.1507 li
74.8732 53.2782 mo
74.6228 52.2404 74.3896 51.2672 74.1851 50.3911 cv
74.24 50.3911 li
74.3404 50.836 74.5722 51.8723 74.8732 53.2782 cv
.780392 .788235 .807843 rgb
f
82.1993 126.675 mo
76.9804 126.675 li
76.9804 126.675 78.9153 123.848 78.9153 119.974 cv
84.72 119.974 89.8732 119.974 89.8732 119.974 cv
89.3568 123.752 86.1171 126.675 82.1993 126.675 cv
.611765 .611765 .631373 rgb
f
89.8406 72.5477 mo
89.8406 72.5477 83.2649 72.5477 78.8956 72.5477 cv
78.6637 68.7139 76.4319 59.7379 74.8732 53.2782 cv
74.5722 51.8723 74.3404 50.836 74.24 50.3911 cv
77.6895 50.3911 li
80.4749 52.4247 88.7862 66.7939 89.8406 72.5477 cv
.745098 .760784 .788235 rgb
f
79.0453 111.052 mo
78.9153 111.052 li
78.9153 103.231 li
79.0453 103.231 li
79.0453 111.052 li
79.0453 102.199 mo
78.9153 102.199 li
78.9153 100.251 li
79.0453 100.251 li
79.0453 102.199 li
79.0453 99.2192 mo
78.9153 99.2192 li
78.9153 97.2708 li
79.0453 97.2708 li
79.0453 99.2192 li
79.0453 96.2394 mo
78.9153 96.2394 li
78.9153 94.2911 li
79.0453 94.2911 li
79.0453 96.2394 li
79.0453 93.2595 mo
78.9153 93.2595 li
78.9153 91.3113 li
79.0453 91.3113 li
79.0453 93.2595 li
79.0453 90.2798 mo
78.9153 90.2798 li
78.9153 88.3314 li
79.0453 88.3314 li
79.0453 90.2798 li
79.0453 87.2999 mo
78.9153 87.2999 li
78.9153 84.6926 li
79.0453 84.6926 li
79.0453 87.2999 li
79.0453 83.088 mo
78.9153 83.088 li
78.9153 80.1507 li
90.7631 80.1507 li
79.0453 80.1507 li
79.0453 83.088 li
.921569 .203922 .203922 rgb
f
90.7631 111.052 mo
90.7631 111.052 li
79.0453 111.052 li
79.0453 103.231 li
89.0844 103.231 li
89.0844 102.199 li
79.0453 102.199 li
79.0453 100.251 li
89.0844 100.251 li
89.0844 99.2192 li
79.0453 99.2192 li
79.0453 97.2708 li
89.0844 97.2708 li
89.0844 96.2394 li
79.0453 96.2394 li
79.0453 94.2911 li
89.0844 94.2911 li
89.0844 93.2595 li
79.0453 93.2595 li
79.0453 91.3113 li
89.0844 91.3113 li
89.0844 90.2798 li
79.0453 90.2798 li
79.0453 88.3314 li
89.0844 88.3314 li
89.0844 87.2999 li
79.0453 87.2999 li
79.0453 84.6926 li
89.0844 84.6926 li
89.0844 83.088 li
79.0453 83.088 li
79.0453 80.1507 li
90.7631 80.1507 li
90.7631 85.9613 li
90.7631 94.3305 li
90.7631 111.052 li
.780392 .129412 .133333 rgb
f
89.0844 84.6926 mo
79.0453 84.6926 li
78.9153 84.6926 li
78.9153 83.088 li
79.0453 83.088 li
89.0844 83.088 li
89.0844 84.6926 li
.921569 .921569 .92549 rgb
f
89.0844 88.3314 mo
79.0453 88.3314 li
78.9153 88.3314 li
78.9153 87.2999 li
79.0453 87.2999 li
89.0844 87.2999 li
89.0844 88.3314 li
f
89.0844 91.3113 mo
79.0453 91.3113 li
78.9153 91.3113 li
78.9153 90.2798 li
79.0453 90.2798 li
89.0844 90.2798 li
89.0844 91.3113 li
f
89.0844 94.2911 mo
79.0453 94.2911 li
78.9153 94.2911 li
78.9153 93.2595 li
79.0453 93.2595 li
89.0844 93.2595 li
89.0844 94.2911 li
f
89.0844 97.2708 mo
79.0453 97.2708 li
78.9153 97.2708 li
78.9153 96.2394 li
79.0453 96.2394 li
89.0844 96.2394 li
89.0844 97.2708 li
f
89.0844 100.251 mo
79.0453 100.251 li
78.9153 100.251 li
78.9153 99.2192 li
79.0453 99.2192 li
89.0844 99.2192 li
89.0844 100.251 li
f
89.0844 103.231 mo
79.0453 103.231 li
78.9153 103.231 li
78.9153 102.199 li
79.0453 102.199 li
89.0844 102.199 li
89.0844 103.231 li
f
80.4048 50.3911 mo
80.5357 50.0558 80.614 49.6939 80.614 49.3122 cv
80.614 32.5794 li
80.614 30.9366 79.2822 29.6047 77.6393 29.6047 cv
56.0727 29.6047 li
54.4297 29.6047 53.0979 30.9366 53.0979 32.5794 cv
53.0979 49.3122 li
53.0979 49.6939 53.1762 50.0558 53.3071 50.3911 cv
80.4048 50.3911 li
1 .2 .196078 rgb
f
80.6102 32.5412 mo
80.5893 30.9164 79.2691 29.6047 77.6393 29.6047 cv
56.0727 29.6047 li
54.4428 29.6047 53.1227 30.9164 53.1018 32.5412 cv
80.6102 32.5412 li
cp
1 .690196 .690196 rgb
f
61.2265 33.3951 mo
61.2265 33.0896 60.9788 32.8419 60.6733 32.8419 cv
60.3677 32.8419 60.12 33.0896 60.12 33.3951 cv
60.12 50.3909 li
61.2265 50.3909 li
61.2265 33.3951 li
.847059 .117647 .117647 rgb
f
56.0319 33.3951 mo
56.0319 33.0896 55.833 32.8419 55.5873 32.8419 cv
55.3418 32.8419 55.1428 33.0896 55.1428 33.3951 cv
55.1428 50.3909 li
56.0319 50.3909 li
56.0319 33.3951 li
f
58.2222 50.3909 mo
58.2222 33.3951 li
58.2222 33.0896 58.0144 32.8419 57.7579 32.8419 cv
57.5014 32.8419 57.2935 33.0896 57.2935 33.3951 cv
57.2935 50.3909 li
58.2222 50.3909 li
f
79.7834 32.8419 mo
79.5488 32.8419 79.3585 33.0896 79.3585 33.3951 cv
79.3585 50.3909 li
80.2082 50.3909 li
80.2082 33.3951 li
80.2082 33.0896 80.018 32.8419 79.7834 32.8419 cv
f
54.2672 50.3909 mo
54.2672 33.3951 li
54.2672 33.0896 54.0771 32.8419 53.8424 32.8419 cv
53.6077 32.8419 53.4176 33.0896 53.4176 33.3951 cv
53.4176 50.3909 li
54.2672 50.3909 li
f
73.5058 33.3951 mo
73.5058 33.0896 73.2581 32.8419 72.9525 32.8419 cv
72.647 32.8419 72.3992 33.0896 72.3992 33.3951 cv
72.3992 50.3909 li
73.5058 50.3909 li
73.5058 33.3951 li
f
76.3322 33.3951 mo
76.3322 33.0896 76.1243 32.8419 75.8678 32.8419 cv
75.6114 32.8419 75.4035 33.0896 75.4035 33.3951 cv
75.4035 50.3909 li
76.3322 50.3909 li
76.3322 33.3951 li
f
78.4831 33.3951 mo
78.4831 33.0896 78.284 32.8419 78.0384 32.8419 cv
77.7928 32.8419 77.5938 33.0896 77.5938 33.3951 cv
77.5938 50.3909 li
78.4831 50.3909 li
78.4831 33.3951 li
f
70.3563 33.3951 mo
70.3563 33.0896 70.1087 32.8419 69.8032 32.8419 cv
69.4974 32.8419 69.2498 33.0896 69.2498 33.3951 cv
69.2498 50.3909 li
70.3563 50.3909 li
70.3563 33.3951 li
f
64.376 33.3951 mo
64.376 33.0896 64.1282 32.8419 63.8227 32.8419 cv
63.5171 32.8419 63.2693 33.0896 63.2693 33.3951 cv
63.2693 50.3909 li
64.376 50.3909 li
64.376 33.3951 li
f
67.3552 33.3951 mo
67.3552 33.0896 67.1074 32.8419 66.8019 32.8419 cv
66.4962 32.8419 66.2486 33.0896 66.2486 33.3951 cv
66.2486 50.3909 li
67.3552 50.3909 li
67.3552 33.3951 li
f
80.4049 50.3909 mo
80.4049 50.3909 li
80.5141 50.1111 80.5867 49.8126 80.6077 49.4996 cv
80.5867 49.8127 80.5141 50.1111 80.4049 50.3909 cv
.921569 .921569 .92549 rgb
f
80.4049 50.3909 mo
53.3071 50.3909 li
53.1762 50.0558 53.098 49.6939 53.098 49.3122 cv
53.098 48.5349 li
53.4176 48.5349 li
53.4176 50.3909 li
54.2672 50.3909 li
54.2672 48.5349 li
55.1428 48.5349 li
55.1428 50.3909 li
56.0319 50.3909 li
56.0319 48.5349 li
57.2935 48.5349 li
57.2935 50.3909 li
58.2222 50.3909 li
58.2222 48.5349 li
60.12 48.5349 li
60.12 50.3909 li
61.2265 50.3909 li
61.2265 48.5349 li
63.2693 48.5349 li
63.2693 50.3909 li
64.376 50.3909 li
64.376 48.5349 li
66.2486 48.5349 li
66.2486 50.3909 li
67.3552 50.3909 li
67.3552 48.5349 li
69.2498 48.5349 li
69.2498 50.3909 li
70.3563 50.3909 li
70.3563 48.5349 li
72.3992 48.5349 li
72.3992 50.3909 li
73.5058 50.3909 li
73.5058 48.5349 li
75.4035 48.5349 li
75.4035 50.3909 li
76.3322 50.3909 li
76.3322 48.5025 li
76.7806 48.4415 77.2083 48.2963 77.5938 48.085 cv
77.5938 50.3909 li
78.4831 50.3909 li
78.4831 47.4029 li
78.9617 46.9006 79.2831 46.2671 79.3585 45.5781 cv
79.3585 50.3909 li
80.2082 50.3909 li
80.2082 37.329 li
80.614 33.3896 li
80.614 49.3122 li
80.614 49.3569 80.6129 49.4014 80.6108 49.4455 cv
80.61 49.4636 80.6089 49.4816 80.6077 49.4996 cv
80.5867 49.8126 80.5141 50.1111 80.4049 50.3909 cv
.921569 .203922 .203922 rgb
f
61.2265 50.3909 mo
60.12 50.3909 li
60.12 48.5349 li
61.2265 48.5349 li
61.2265 50.3909 li
.780392 .129412 .133333 rgb
f
56.0319 50.3909 mo
55.1428 50.3909 li
55.1428 48.5349 li
56.0319 48.5349 li
56.0319 50.3909 li
f
58.2222 50.3909 mo
57.2935 50.3909 li
57.2935 48.5349 li
58.2222 48.5349 li
58.2222 50.3909 li
f
80.2082 50.3909 mo
79.3585 50.3909 li
79.3585 45.5781 li
79.3591 45.5721 79.3598 45.5661 79.3604 45.5601 cv
80.2082 37.329 li
80.2082 50.3909 li
f
54.2672 50.3909 mo
53.4176 50.3909 li
53.4176 48.5349 li
54.2672 48.5349 li
54.2672 50.3909 li
f
73.5058 50.3909 mo
72.3992 50.3909 li
72.3992 48.5349 li
73.5058 48.5349 li
73.5058 50.3909 li
f
76.3322 50.3909 mo
75.4035 50.3909 li
75.4035 48.5349 li
75.8554 48.5349 li
76.0163 48.5349 76.1755 48.5238 76.3322 48.5025 cv
76.3322 50.3909 li
f
78.4831 50.3909 mo
77.5938 50.3909 li
77.5938 48.085 li
77.9261 47.9029 78.227 47.6717 78.4831 47.4029 cv
78.4831 50.3909 li
f
70.3563 50.3909 mo
69.2498 50.3909 li
69.2498 48.5349 li
70.3563 48.5349 li
70.3563 50.3909 li
f
64.376 50.3909 mo
63.2693 50.3909 li
63.2693 48.5349 li
64.376 48.5349 li
64.376 50.3909 li
f
67.3552 50.3909 mo
66.2486 50.3909 li
66.2486 48.5349 li
67.3552 48.5349 li
67.3552 50.3909 li
f
278.549 212.952 mo
278.549 242.791 236.282 255.219 224.519 266.981 cv
212.24 254.702 170.49 242.791 170.49 212.952 cv
170.49 183.113 213.403 172.883 224.519 195.632 cv
237.187 172.365 278.549 183.113 278.549 212.952 cv
1 .2 .196078 rgb
f
224.519 251.325 mo
213.169 243.959 172.812 235.001 172.79 211.003 cv
172.677 212.045 172.6 213.106 172.6 214.202 cv
172.6 243.351 212.72 254.986 224.519 266.981 cv
235.822 255.491 275.07 243.319 276.439 214.202 cv
277.223 197.503 266.343 192.897 266.233 191.846 cv
267.687 221.424 231.433 246.838 224.519 251.325 cv
.847059 .117647 .117647 rgb
f
224.519 198.128 mo
225.797 196.605 227.384 195.321 229.191 194.254 cv
237.677 187.721 249.744 185.746 260.72 188.611 cv
248.205 182.07 231.643 183.981 224.519 197.283 cv
214.997 178.269 176.206 181.502 173.62 210.595 cv
173.943 211.565 176.529 219.969 189.459 225.141 cv
182.088 190.099 214.195 188.334 224.519 198.128 cv
1 .423529 .423529 rgb
f
224.519 258.576 mo
214.477 248.961 185.132 239.569 173.874 221.211 cv
180.748 244.175 213.961 254.631 224.519 265.364 cv
234.64 255.076 268.242 244.257 275.164 221.181 cv
263.824 239.703 234.153 249.353 224.519 258.576 cv
.666667 .0666667 .0666667 rgb
f
225.018 201.544 mo
225.018 210.595 225.018 239.041 225.018 239.041 cv
225.018 239.041 228.897 197.018 256.373 190.23 cv
250.878 189.907 237.625 189.26 225.018 201.544 cv
1 .423529 .423529 rgb
f
224.694 239.041 mo
224.694 239.041 223.401 202.837 207.239 193.786 cv
207.491 193.771 207.749 193.763 208.011 193.763 cv
213.441 193.763 220.685 196.918 224.694 201.544 cv
224.694 210.595 224.694 239.041 224.694 239.041 cv
.952941 .176471 .172549 rgb
f
258.945 187.803 mo
247.456 182.662 233.272 184.362 225.933 195.027 cv
234.639 186.945 247.225 184.886 258.945 187.803 cv
cp
1 .713726 .713726 rgb
f
220.023 191.499 mo
206.336 179.404 175.901 184.935 173.62 210.595 cv
173.666 210.734 173.767 211.038 173.929 211.449 cv
179.428 189.956 204.272 183.831 220.023 191.499 cv
cp
f
231.877 239.848 mo
224.742 209.586 li
219.698 230.912 li
215.319 219.364 li
207.499 219.364 li
202.182 239.304 li
196.055 213.017 li
190.412 228.353 li
186.56 219.636 li
167.316 219.636 li
166.729 219.636 166.251 219.159 166.251 218.572 cv
166.251 217.984 166.729 217.508 167.316 217.508 cv
187.948 217.508 li
190.234 222.679 li
196.516 205.606 li
202.32 230.52 li
205.864 217.236 li
216.787 217.236 li
219.226 223.662 li
224.748 200.321 li
231.929 230.793 li
235.329 217.099 li
247.602 217.099 li
248.961 218.933 li
254.403 203.998 li
262.876 227.687 li
266.409 216.962 li
282.684 216.962 li
283.271 216.962 283.749 217.439 283.749 218.026 cv
283.749 218.614 283.271 219.09 282.684 219.09 cv
267.946 219.09 li
262.956 234.24 li
254.385 210.269 li
249.606 223.384 li
246.531 219.227 li
236.993 219.227 li
231.877 239.848 li
cp
0 .92549 .901961 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.1.1
%%For: (??????? ??????) ()
%%Title: (1504.m00.i125.n034.S.c10.168292310 Flat medical icons.eps)
%%CreationDate: 4/19/2015 3:33 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBic7add[/0SoapaZ]L7OS6!,-#*N@J-6u>QJF!Xu[K-Ud`66Aqqr.A<DcKBo`AZ)2R9\L*cO@XSeWQq3<N8dYKnYN3TNu??
%:Gt96=iks"AM1V8rcnJBf>>DR`a6?&Bo?Gu3b['urS;@h>4;,B43^O0\!#MDUXIH$W1:X^Q/%.@Ze>.;\'_9Vcet5.N]8RIRe9RV
%gT'me1@Gf/32D>eo\_1^!'_-%*U^97ZsW:r@1ppGNOu[5OW4u]LAriSqQ,)<=UFn,E?BXNpanZ[`QW7O59>:QEY#c2lprr!If6q-
%Xn3R'2@QsUA+8A"I$lM9O"5iphomGa[t9\>HTCHP6138`6@/9gKLmloca3Y>^R1#]m_<=fs2WAR5N-6>(Z`(DB6Uh@A,)pP`)V>k
%IJX!`)#th<1eFM26+qEtXRthcN4pt9,.DB;-3%qD@=>*5ZL[Tbk*@;0q,$4,:OfY]s0?KO(9%8aW;jSpHWmW&l<V$MKl2CTnR#Bq
%b;L-K2e^dSDq^17ONhk]RY?"6WR[JgB)HnQ=eTD&?qLCP('g,m8\GX^g1_%9*EI47F5OYN[*"XulH#+3%eAnthEL/9V26gGY&Z_h
%\3>K5F.j\cKb>"^1-\sYGWb<m+*S_U>b#*Xcr]&C8Y`u)XC5D2cRe[*G8mrWGEnfLjr`kDY7j-oqlqp\]_hYRgJ+77LRTq0;W-YD
%m,QGsmFl0MKaZ8F5<%j]#nW).kJVfgs$>O.(P?de$NU`EG2Rp@)a"&n^L!Ato\j\/!+0Vf4+m-qp2T9Qs&pu'3_/kugNp9bl,&V7
%Ej(M;_]SVnM^5",K5RLmIDF`;Rs_&PId`.(!RGXHB>0(4kth%8bOZjNTLn,Q%!8QK>J8]M:NUF,Aa+3D=_UsK3VjrbYh]!_^8V+'
%i\%KE^&L8pT>3#@5SiX=g'mY(8V=r_=b\Cbg*9l7XO?M9hW^WjK%9.O=9iL'FT8H!YFZ5JCS?6Sj5!?-'_[9-]@MmR@K)5MN3kOJ
%/3RlORa&iD[rQrOW9-"LKAL>1T[RUE]oVtQ)CbJ&I>(I/7&+,X[U6EO5,4n,#/^OpJht_HnS$<Kj$nVRB5&&MR&sNo<7D)GG\NZG
%h^cM6ji1.EB&*E]Fjt+`HEF.?,\.]:Vbq<^p]'IMl^;kDI[)6=N^i9:,!&lr:Jp@XO+PPugh;>.OP:j6qXmrK40<S22fnkoQ1I%6
%aL0fa]+g%)Y9iqFjlJ":2!12ZpYTk@K'K+^nhBp1>CjQG^F6i"l[qA;)c\^A.c!=lphD[qpn(Tn%::^i!P48c6,*neC^D!q]%tMJ
%S*F^_=mOYneABNpgk"i<q@`hms++k$Q]')Z(@L9*mR*o>PB<SW.a<N]om<Ib5J<^m]@&I:?imdmdSqH4>&Tq$p+p+:)GUX1/BI`:
%"!7K1DA<)kJANCl6_U`*pc7iVc[c?c#E"!@,lDWMOBmiKUQtp<Cc!Tr3b2GBI.++U3[Rir:/qMZ;QZ:kTe^I7Z9ROoJKrjNeuts2
%H0S#-7%I*V+oc:>g4RtWC;9=D4j,#s)c$g=G%\SI!/p)Ve9]US@h2^]9=:?*El`f5,M'!k#0e^rRVOmf9d/t^X3ir-o]i8jrPnm`
%0?Y+ce39Y5\Hi:\)$X.manihR8g?(`bL^0[3NgcD8<ou/3,CH$?:23\.Ps3Lokjq\YRJ%[9dbYAIV7$0f!eBC+NkC/>+per$b9e2
%Emc_!b:f:f)(Scai*im>S6MP2G#O1?gp<J&'P>k$j)`Q7TAeHDG:VU\1gbDE^$F\4A`2CTD`@FXI\C\H+YGZsmH1S-gpNW`G&u:'
%cS:=HEl-"7d-YDu$PRA)CQA:*JqGM4B";P<$NYbSn>/qc.%l]5n>.hI4#L"26##)t1Go+K42+p;FahMA_#pjbCa<^iDT-tcbsjbs
%1=]"'MKOjq&;lrPc@jMq;PdP;Zj'VsRK9Buj%5qEC&VH7j!#pFS+$;J2l$=h>##DNQ=Hu0QX^*rolBQ.$D6;O.MeshN@B;"U3Bk[
%M;d]1=L[!,MrdL3->*M6lGnnX`TC0X%F=@*IPDL6M7/U7m4.uZWB&bT0+!?5Pt/FaUbDoq2_/%r$7`Ge""SH!TGBDU=:?=iJfWB;
%1ANT3h*bP99"WKnZmSSA\$*(?c"b5oD[eaIOst.3Cd)!/\^3H'Xo,l(njK]BC0mj&B/'[Z%@s-]]d=W3fWGX/]gej3EA:MCXTO#5
%Xu$[f9rZ')],n#a:uA=i7=+5PlEf.MA58U0a:L$f]-q-S>RYF*1!;<S%Mr\A;`O97Z!=/4(K\2-rb8Fica't&PYTL85!I/q3bK+2
%S1HW&=`=XYAQ,"r4YjqGr*q\-=\M6]jP%mO#5:R"HW!@C:,7H;AhhUTcZ@2-b8bPWZVpB7niV[iN[,:^+_(_eOs-JPcQUVUaM2J.
%_(;n\X_-@$k'?!4hKYVNT')*rH/n-CLZWmB=bnBKo>Xl,>P#Mt4=OEK*$5]s*:TF83QW7!h?U59bMJk+4iLOVV;1FE_8Bu"=fRT3
%-AC7tF?f<G-oUU+3]'sAi^L6m0H>OL@SU87Mdasq#.$0;=/MH_^&%N9pSDTY%d"A/H%]uT+o=?FK@Q0'^#!'!40-*LB\+.MS^lU9
%SS#RMg9&t-45EO+_M$N7L<d_"F>i6SZV8rj4FT1([<_[dAA8*!pmK?fo;FV,YDgl87,*QtDk-p,b'tA46)GU?U6ZH&dhEb^)4%U7
%*ObSj-UNh_frEtuAG^-T1;Xi9JC3-MAS(3Ag@[)h:p37aJR-k-6mfi'_f#G9*.5OqOg3;(-AGo_IDsJ)-UN<XO3@\Zo>&O3nFDVM
%]\"or$,"n=%)lT9JX:Z?AKH)a#@?PDQ[.NNT+cI;S?BIfFZr_;5h`[WcV-ijY1rL1CNidt:W:?9OhOD%VV/\f,0S[4q1TR4;uefS
%gA'B.<fr*`VZ!fX/3$?#AJMuL%eg:_l@!t!rHr[VY0Cs8S'uIqN^%4ecSrp:+Z@*[Bf\/nll4*km#CU@S?CHq:-Z"do,F4^2`OM_
%4sI/Y$XPV41G^\/?"V^H'sH;PR#.0BqO[j5m6tC1>lKF9JdD`jEc/#e_jeHODgp`k@)?4hVCjX'k')>]ZTGrX]KC=k0>4kZ6)j[f
%(K[Q&8Xc)(J*fZ//PsWrl.%,jlXdmUMtKr:T_WS%cB<:0O*gO`8jg'ob?3@M1TJV@GC>_-X3:"#DRFWBlu[!>I!"JK=fJ!pjp\20
%?E#jZJ#mnj9_Q^QfoF(>G*CptN)d/>,=`XAR2%G++lghC'`And4TfDhCKH4U<FFt?_$%/Ln$H!Yr4[HiFPCW`%9sRAH@Dc!7YE+:
%Fub0s3kKV4rI14".,)ldWP>S`lK;7F=o@><4=h4Xi7_<q/G1s:Kk?M1e'snRRU<N[2:gRU]P_A"*R(C'n2&\DbiX=8g%"qe?FM^L
%MIsaSRbL5[qaBQoa=f</k-=gZ$1\B?YOc/r0/Re5LZG<^hDY>dpt?dNS"CgqNWX=RX]TdrJp]U<a8$&4l.@!=-cfq2K:JPVT8jBO
%)P/(Dmu>ra!;W6;,0eE6P?cb44%VVQ/+[Oua6]nJ0:g'UEl;t,;XIPS00>.E!=JGRQ$a0d5ICgAp7V'cnGY#grUn:PP<u;*g$^lr
%eVhjSW?WtHm\%tOKNkJLA:=ICnlGU>62,'>XLGOko0+t\*-j2)$MC@GX-^Ej*s4blb7W-qp(Q:TY$AI#f&Wq?FI1rmKA"W13R@[`
%mSa8!)V^[*8]f:lNN$!1g[K=RP,bFJp?\6=mYf8!D7\99otKMI]%@S/r^>NeASC5paB6_q$r-[H)9^XjQAf/eAXWlcYPq&T@4*N&
%1OR<_T37a'aB;f\'"ad?5Gqg6?n)1;%NU5gV[R1LLk+TnS-#*IF8G(0DPi(8_eHtjPG4I(W3;]-IXbVkQ5\Qc`]p>;L&7.1/?:iG
%d7HQh+iQhT^Wd[G9XUIr2CT*he\.AM,M.dong`haXui+ice3-_CrWWm1>A10E<s*7Gi\[n>A<hlZb1it$@2WKlgj49O6JPbB>TZe
%>W5eYH62o"[lRLZ<bODS*mUD>f6N57Y:6aS75MGS02J=o_D#P.#K,q5?gs=7)2uE-gKq&#gKs$-^[oV*M-'[Ws5oXV:'QP^PYmfO
%A>XeXn?V-:r\rBMe#)iNoiC7b$jn)b\;P2#Tq/DJ\TMdJg@\'m.j1mXB(\S>$T?CSEXKRP@=9WUlC^"J<jK5rWQ(,gX4$pZo#F0<
%;d*,n/)?/ad^5MY8g4?u[4E1udqYnjj`.cYb+]EFfq^<9Zto?p7Q])<UYYcl^!\QG>+S.:8YMG][n<Y*2u606j(]$cDEg-^<#L(G
%:)6X$1H@":?(.$0#<=9A>,0ubE'$fH:t.=siUL^#+I.,FQ"eS?Fb,o_5H$HSTQ/-G.%+>5)%#1!>`rM:3k^tD.!4b7$a]@nRII0_
%4pTLp0?rV\?b%2E"u7lNe&EKt*G.9OESY!5nNT!`2G&Jsku,a9bl)"=b@"1RGF?W>K"9+MAaX#q6W$aQOYuBkFJ08.ls4^Gg-8-H
%C5kkqEO0BdB3<c'V:HJoaZ$bbPJZDt?7\1clASL4r3Xr>S7G0!bVe;8Y5.-`o3G#6QXO1_RW#A)Y*nE^gfq:W6%3b%1;,'W[[Ruc
%B1(ggT'`pQ;8Yu!Zg;<j-d-oY'>1Im)\Q;R0d_-bMQm]-/eG`GTN"Lp5T%+!WC%>jE*k#BR&/I"RMuY+l_e?gU+P,X<G1^7`QXs;
%cZ3IC[,3oe*A3no-LVt8mqKOcZ9H0m9Vl*8]TVeJb.[crfj6FMg<E(L0;3r8XgqcAl^kl:HN#tk1&0#kl`?G,k@J%PC%n*bQO/X#
%pRK(uc\0;f1SF9qM;&lZS]:T0eaoNVZ1qS9U<(OocTg0-S"r6:m0b6&0B>gb0]<ggc<nROjk=tY1<p"4_;oR&^TI>S[lMa.'DsYK
%hO,hmR(nK!L=bIPc=1)joX@j^r6cdDq#sXE\nP\7"Z\6dR(1*n0@cH4rI&"P0e_)P,mO;F]jTIF4o7+?ZC;lD@+nZD\fRE0qeFa.
%=1_dO2hL@<G(YV[kY-C68er\L]E2YL7,p>`GWLn!A0=d)6_3h)`l*:rGsl-l9jrGZ+rXU'Qq'!1f&rS]R@cu+jq3Se>FBb)@ij$b
%Q&(0=SK\u?OI;Mm`\k8ainE0UiS,k9nJ2ID5)UPDE(F\\X&A6O^8Gljl'PNKX+/Y7l,i8`l)?2T&p6C?T%j1f?5C#LGdA3,i32\7
%-M1aSDe`T-orG1Gq0NiGp:9u2_Z./=Qkb['rapkp^Gko]k5O3oqg02SQFXbS*W3TdpbM"@e]2`lDsm/o6B<c%#L4@(\\g@MpuW(D
%W3FJd^'m1<]1rjn27mc*3`IYC>*><Cq1Q:m*rS5!c+0r_`kU[aZMu(ShR.a[%a/L`^RqcTm9GuUlsE_U3N]ghh(R[\<L2iE^A2HF
%`o_%&(C83k/$J7QN6:-Lc^!,^`i$<Nk@";OW6AdkaPcd9NdOX\eR6-a^h<Gm/(ZJ7Q6?Do:SV(JVBV"c8JOq4EmA,&c\unY%Mo7m
%=o=J/3cfnB:F7uhr[d4)csIYcb05hDb(*,<lT;d,q_G?+b;/aZGV;EjD=b-_DV(BTok(n+/HRj,aJA;UA4X904FX&d9R+#q2L=Q2
%9"!NU\,.g.k;0[1ZmsF.L/co$GWK0VrKeK!aAO+`7[QAOE>`$!WRcl(^Y<@VWQiY)Rg#3_$0?!_)e`S`VBi$C^L_[Ljt'j6Q&3PY
%?Ks>"VIi?`s5p'lZWNf>go]3.RiuZqgh8UP<U;Oi\"Lu8]3`Tud2"]0eJFc-pWb%Q:(!tDVk%7E.b3gW27Oo%T0t0^GZ&3TR_Mr'
%\B%iHCQj4DRo,`DQBOX,A3d&YjX*:BC/S_UfRT$pSQ6MC5g:X07g:Ie.6qe?Q\<0)16cZ@0qQSH#^3M`JXspAd&iL1SmdUn[77q$
%>GgM=RSM)7c(GN+l6hun520tLSjfL3BP#n(Q@@?mY/,gnbLb]Bf'?.h;S>hj-s;Y"Q12c*&nRNkZReK!F^Br7ELVh`PYAYrlF$5+
%.RhI2bg\"*kBEn"rUuG3c_eGmja&>ZlVre*_.T0u>*LS]1A.Yl?AgSB7@B;jkBbaSY^\ni8g]NWot0U6W^Y$]bcCqgk-ZT^#1-?!
%U1E8gWL*JI</ZnCR9>[K^GAM=M`!A[f((2aCQ`HngFpjp<8f]AM:oM2@WiOHQd0''1UpJp)Ua=VJM7m^dq*C]=1s,u(3d-3pL8<<
%e]WHJ6tg5plC[D=K#jRrG%Ro@rgKS)n>c/lU74;7QXO%[MJfT\ITk,N'R#jf\CI`N$BJQr6&.*Tm9SqP%im5T>PJD'YpR6]pV1%+
%ds'Mn\(_n<^TZj)=k$HZc;?a6d2hjSF"]$1apG#r=5=e=nZ"6`k1e-QZe7;mb[R%_F?7[%nF*#r3p,a`pMtO@+[@57SR6p$"nP(i
%/t*r4LWKgokEtG[&,ta]jM]q?rQopnkk=cJIl-ISOG;rccL5WH$UnOp'<ji8d-Q5_cG<\/P*l2;lb$A])L8kpplA(@i.(2G#hai[
%nfdV8i]/Zq[$&.R&!DW-;",W->UoX+qZ8stgg>Qh?dIZZGC]W%PfUPZIJVsbCB'#ApJ;]7O;c>S[fSN4_o>pQ0FFEe;kK>:\^*kP
%n:BUAn,o:/I).u@/Dpb^/,A??<PG@76i9p!I0h!KQ@[D=HKZf7+'>1`JM^au'/H?oJqnh#p9^j8$&LOQRQ5OAc$I-32otA-rPYub
%Fa[j-b'cW^%`D>jr-!bT!XO]$^AkB>P,o2mqd6tcEC=13X?>)S(/j,.1=uB+XbH#q=/L1UfcrAkioVIf'DVA'5L1F&T\;&B2e%)'
%<;eg+/2qnRPiVcL*ZjDFe*EXU'<i.sQhu9>N]Ko$lMi/SL`ttN,?R'dSa$4(il+M3.(sTpciHt]nB[?,!J#hP1?Rn\GBRX>mHsqS
%DZ6M10!YKn%PP5_((M/L[!RSC<P#lo/+"]tN*fh((e1jrV>m'2;Iqn9$141Pl<4'Xf8+%uRP%;<Jk$9]]Dq.Y-aX&Kfrt.V*06j4
%-(Fq*9_$_kEiGJ>E0uV!NQP+QWc4ItQBe%$,Q,2P=SXP\>/7Sq_=37nFjTGu>#V*nIOU2XoI=OCiZ8GIR%71U(NQj3oa.8jomEp/
%.//aOT*#"`!DVEd2QGA!NH=(?*q%Q/btBb9oP-"I6i:u-ft]/nHb*l'M)TQO*k/1)]<Zb.N'8Q_/8&+e.jLTAJNp"7,u?E;S^(gA
%*-M*c<0Z^hrE%fEL/\%-RF-ee`dT&LBYs0/L9Khq+CJQGMKuSorCRMMX1r'uiEr2#XdT][AE(-fla6B=B\)LWK?j;I7,R5^pJ>QN
%^D?8'm:PO[dbLmq&"5X_ffK$fZ?b_DTDR=d?e>[+Q#?W#;sDkR<NI+aq7391Xe0:YmoJ/Uo1BhF%-C<rNEWL:phsWY7SpAOH0)]q
%Kl?4YUNfu/_Ei#@.7>:2Sf*/Xld>Q7fsi!3qc@5H2ncNKURrZ>Ek4pK3f"]d^tNCsrEH,-+4H@kFCZr3gTC58h;@M.KDL)o\ZK&1
%?TDjX)h"WU=ZegRNhUZ(<Y*Jsj\#D\:cYN<G!"l>o3p4c$,<G5:31cI?GG?6r0LG6[o`$@RY1SV?GZqR%Jo7?r`,#tdP,QB-/aW/
%]aYB:f_'<B:rUK['6p+fY]emE4.F0?JBX$p!pQS-?E)J0H*UH7SINIdbslW=k.U@]58Mng:9H;7G9UkDYW?1TUcR*-.TH7e@$!Fg
%FtR]]f'ZM`3^ClPDC;tS;-P\t*"f4)Cn(T+Tj.=7i7/L6d)b!t*]\G7e+p-&4i_5S0-8':9_*`e@Cc:T*R`)];Q8#gglXm%DLZVc
%^%ZR9:)e`P.lY7Gjg.67m>u((j84W/5]LjITi8!&/MAlLAJSgRf7OENI]crUXkn.LR-?`V-_k?fKq6YbflT@N[baHd#iArS@TWuM
%`@faI6-IoffC*n.lFepSAYO=Dh/D@^jqZKEk_MR;0Y;BKGiQ:02X&UWeC7_&l,S.h-#I?l82VI]MUEipI_GQadKdnpFmIkS@ZS5E
%Dr*m!bFNCEM%Z7lSSW:rN][dlI0VR2G.P)-D9TY5%psMVl0mFL;[*^_=;ADG*/E%2LZ=YL(n5=P^NY_/:)h*RFcp-C)JZc6nSb8W
%FO0SK1tfq`R.sGKls7tZ(V$m-X*5sZSo#*A2!^\icAt4Oc`S*&Zt"4,T[d\^UL79r=m'IrIGDpjQL-.g?Sou(UYi)E5"P,COZlOK
%5<ikQj]e#<=g)moS2Wq4YgsY*ItVQIV#<:<Umhm@Fl6"m6>ee"5CF"Yem6DQk<S%mJ9h'm?jU1Zcb(`p$F;/>4Dt+[Z?7?l@d=pk
%TjGL%YF/W=/T/K.j86gX[U$al]VOq?XT`IGg!2d>o@fJCROE%.EnnOL#%61k[N*Z8NpG1t..VpRG,:mL1@1\pbD-nB9LTQ5Et5Ql
%Zp7+P:!flm>4t&@RHA3eG8!obI(#o#ML-.j&!?7DW<_M$]VQNr,:h2\OaLqec8;36aJ0/mqkg&;-kuR\G/ZHe=C`rtWl#3`EN?-s
%D`[4:$`1#kDReL.+&Oh75-E7W,WhRW7W[4/);FZ%HIl5B=m6eMGNG]@-'c*MI&D=S5J7K[AiJV)NM29!<'+sL=Sc^9?A8P?N@[?I
%26*#1)J4:)YUD!]*.W$r\GQuj6XA&tY+CGG*iCFcEuq#B-IjD@N12.&2'sqhH8;cX`W!ePe*]b*--!D60oa4EI4pWc?lP'cbEQZn
%%u`a&0GmSVCjT=d)kqdMO%k@X6KKtJJlY.S5,HmbDq#sm5K*ui)RerZQ0?N>$hf/n(^aq\3&E:UIDWE72qW,^TC35LHC(=\D/.>e
%mVsWJH,`S#ZqH3Y#*U@4oJ8=bGE`MqYM?'SekPn]*AH#+Sk4[Vl'[JhZREb3<9[`3Nn=p!<=nI>NAA4")V#;$9<T>JRmcEP44#k-
%qr0rL_*gS50"Ld`Y`E7/;"OWT^NmA0AgU+C;.;JqE2l(&!kYI0]o@JAmBT_;V$sr?=ZMNWo9Bb<h2@q3^X8!m)<9f!kkJoi;P>q,
%cC<?4Ecooen_5?Wi\&So>eV;4j4DIUg?m1^dq[uMTVU%$NQh!6Fp!]VZ[n1p1%#Wni7K'#7X%.KhIUFM0njB.O3=tEQpKoJ2RoQ:
%)0O</?@iE@LE8o7?8I&/hISf@6`#'KZ+%3UOk\RCPUr&>fh]Ru7SrMX+W3+jC?Ok>:AH'siV>$A<ML:'T1(B@TR"EH<aNZ(VU$'(
%IP@`OS1VPD$L8/t^mG[eKMl6qYm+mDhJ8XgYL9!j2PA%7:HRD43ZmL9B'5^k,LK^V/l6M(PECE,A4skggtfu"lHS.2pUD9P9GfG4
%l.59OY)K'[6FWSfZth"I4VBD[@e?pB4Rn$@i+"*/4k>pW*qOH,SP4\7FN?R-4W5]clk2&%rQ9'O(Z5HUcC8qmi9D&Gp.DF_8@[B5
%o#_.T%q8I]n^EDBXYFK8`_5m&Hh+HZHTFu[Zn>aBZB43=QH\O!4)l)tf4\)2)VN2SWC2oHfVOFm5C@7@aVu$cP>c_oVZNl"UM>P+
%MQ:GSL8N)GdsQUZns^JchmBZa]i8f39kd9KN$i^^n5mNtH8^Am,t!\N*`$$!]O2u%?53tr9oEF9e@'fMF='^q6K!okgM&PNAGuTU
%9u,e='mrBuG)N1aQU=Ei";>LrnRgn<Usg4o?,epR5ERB4mpEZ*]]c^ae^JE6<A/NEDjrf(EJe72#<m<=no#A[DteJ#(5c)Dm5,cE
%ATcZ/XK3Be1:``97AIT]eS0@i\B5M-_e^Qg.fK4[l(E1KXu)T-]^i@`\s5K<A!ce4UOAF'm[cQ)2HhcLNI$qM9TA5,1a+e>m94"9
%ic<g1`Hi')VNQr3L7_!gd:K\[Cfnn&#r5aL]051erK3K$=JsW-A+"[s!AhTYoR!K_<fXl-bAa3OD,Le>2iJOp)i.(+IuN"i7R[\T
%S_l'+Q!tW.W&QF#6)$>0N:e@"B"!2oXZ.SIn@dMIdL1.W+,lPA$^N/U`q[tN67KQ83W0pjmJU15go5jVCE,8cc'_j*.@V`/5*18F
%8fr]R#Z("bb5A/<.CCN<WnkrtV-gD';3)nMQVVis4cIV[k8*9SF1Ds4`P.O%?.d^im4.J:)>2q<anA@dTCb=1k(]KQcUKDEGcBI,
%Xik;$b-8%k<`F,Xb2_iG"=O'*8k"@c:InG.N=4(Pm4l?18C\kh5aa,0/?W0qZ,j.B/Zeoe&M@Lih;:R\?9Z%qb;:h!)GY4,Alj#n
%7N="n%.c4H1`&b#(ing&od_j/-W@s\_Cl9)\f!n9K,H@a[au7]d;8RSi%BZNRs>J_=(V;n4GiW8kXLT<an/MPeB8^g"e?)O&m81r
%hTJV\*iE*h(H_!$E8S*umQBOMi"P/T$$uimmQI"-Z'7%me+bD9GSIW1"b)d"@;M]<c;)TAIB+d8b9F^dVgPI+Zsm*16I8j//FCOX
%iB5MM9h!MI=3ke6B9Uf1MDSgb$WW9j%*gDDS=q5K'eM/MCRf>p\X,tDCts*<`j)?^pDH2)i249=!kSVYWH`_78FQno$S7HWY[gfm
%6;?/?7\^V4AmW"Nd<U[UZ7/M,n-SHUAt"qmEp5W8W8D8#gepRHH&5ZhMk,$rDPi817Tq^ea*I=P><73M?I0r^-.e@sq(f*K/kj3\
%C:s0bj>:%Rm">1&Zm6.+?Yk]`Q`SnXS6qQ=:8sr#FKY!t/Hd\.;AEO'Lr3j)Y($#O;?&fN1_)-4H:=\W(katj%dc$RC%QctW[(fn
%/HXRL.@X2%AL(_!%S'7>/+"a#qe+'m?j=k^5@<ddg2R^u#u0focZ48Y6)mh"UZ&d;lu2=YBMjF+C32,M!e9e+cDLn_miL:jXh8"e
%(>O2C]Wp>LDOmr#Zu8&Wh,mjn]@j.DHai++Vd&`Cb5.Upa"R4OQ1F+M0@mafW[_l]0D#>+r0HO=MVj=>9A](/eZ\fGlYB/V^%L6'
%ruhfW^087uFfh8.2bosY0!DJKqYk*edGnsrT>,_.101sZ!<uNBd_^n<\D8fes0BI*/h[rCST:p<Zemuqn6"NcP`#D4]8c:(]C0-p
%ij&7EBP_Ur<HtV%^Adc8E3Pa[Hh"&VFt6qNf?QuqelR1neq;u1_P"9G>s!dLLgHor@-/8d^V!Jac1U5rQ/dkQroU3VaAN`JG,JGR
%jWEf(:[YqQ*PnOuRpSt*G2Ui?+2sf)cAdfprV^nJJ,*."9]CJs2Lo5Qmu%^V>?13>EV#D:Y-&KTJiaK$?7pYQYeGDW9kgpt\Gu?k
%ZWj?.eS=1S5;aKu*LBRHd*-i=;;K7ZD_$gNcY=EDKdV)2]+7(9$K_4J57iBml`8?,!uOM1^AY?DBNOZ2*^"bRqG=R`5ADV>Y]h'$
%]%%hpi,"*9>ulm0H>e@Tl>Bn@$bY1cA+O+4(7Dj\[(*bJhe9%GQGMNIH!u,BBC49^XeekPeLeb2:\*(H[FtBP@-qgudu&WslO3C_
%\@hkj4dPh\iNdion)WdmP3VSWffcl^)>%dJm'/4Q?5+J^f'\c?4S[RJ@3g<lQ$T,N0T:3tF,/3d%j%(gm&.78>L-%@c)%O\VDnO-
%^B5JRhL"ben^`k1Huef!G4b4Mg1p$PbHJ:Ad>Xd6<u]!c"0FJQ78rso:Ot)]g;?s6:,$ZtUNf>j##4rIbE)4@[;\t?rh+N6nG/-I
%9',L.%=.U.p"ImSiT%ekBsh=#]j6%`3:I#\JV*ahi>+OTqmc=ugQOok-,[AEDZ+kspSOGUmSgT.+$.C$rN.!#'`+reHgpg]l8u=E
%fJ<rBFiYW:h;IaoQ.ES'dl2[9`OdM)8m4'_&m"N$dY!NSpiVsmC"/?BGGI!PMd=.QWt-6\(/)Ung[Lek(&2FrCRC,'bG3AZl9YG^
%iS[jg0M9T`eP)(]XoA4c%>5ap:A^/l'S]1:fF.#A`B38W2G`Gka/pS)m=)=sm4N\Wh++Nn9FO?6Eg4$@LX-h-gtM>.&rQ&IHu\>]
%W`Ui\<`SVgBK\#]qRZ3k[!DRCHgLQ*XgD5HI3;6FAf\<=Re"k<\9$=V5Phn[o\e;qTh3$R0TZ(2iqD%l*QEE=L<:k4N`Y([7cukg
%XpUeeqV10lO2CD&.XsHHPLZ41kBO>\CIh?obF`tVHae0i`d"W:=73F\VYBL%PJ)51kh4!hDUalrT[Nu;G+j;5]73pu(&#C*.m@c3
%=tH'ONpf/sKnC24PP)Bi4-e6[If1=B=aT(DI?#^r^9uI9l'LhZQ1qNPK5dl;p>_/PJHVfP0l$R1Vn6NeQ&k>Kp6t1=PO2[XSq8H)
%bLPJ6rI!T"L]'+>PL/Nr_;Y6A](9[Cr8W=([ZLB1MT:F_?W11G?E&$kn&?e"!XcGC#LO/S6f0p?^]nGNSL<t&IFqT04'P>_eOMmG
%fC(uChqrnPplQ!KgVWs<H@*!GG[3\tDIAZ\iq)>/QV2*uiZ<M@fUU`8S+[(?ee^65cb)BCf;D_I=.dY0COH*Jd6k>=oYVaLo*2`$
%dGs01NS=X7oYddPQ(BD/]R/So]D]E6hpO`pIBpNk_]X2frd]d:;Z%e%qHDQ+]bT,8D5irUKg/^rs/Z9<\Kppmr\"3A)LD4jagO.O
%"aKCY#$Y9d`1^8:QT#'b#3PX=!5Y_cAb=(Q6PD<*g+P[>D8'+UI'o"55,J@c\&Zu;G-t*j7,P.E',Uom4@-CS`6lEU2C&:V*8iOJ
%Lra?M`]sBC[fhnDDoTfu$eT\E7sGbI.3dh628T4q^SBYA2WDd1d]81EO53pWQNe$=Tg/_"j5\KjnH^sIH6RZO%>Mtar;oaRBo65X
%*llGo,N(fYlu(UsZ+pp"(F"Vb?)DNL0B'jJb8>Be!+>PmVn$^fLVZ1`8eDk;7rIIdbOoNco/P!XqOi"l"Woma3nTC2Kjer7]@8YY
%/+pD\XVdN^S8P2GF6V^eZlD!B2[OK@'f!lEZ0Y9.81Yl<R4Sf2dR8ON3(GN8cl?6f"M`SL=lQ<N0LTjgD.nb7'li3O,e+-[4iD:k
%@YXPHm6%X)@&>W<X!1u!SC1qS.=hT(^3d^p(alpg1aEEt[4/<.GQ-RAo-.TV%hj"\`"A&E3hSEX`L)Ar0tC^cUXKX6%q7^]*#rtF
%eIoN[k09\c5V;'8o.k0!+/7jAH;VFE;FQ'r/TC0hP&Ks4Ye,8nBOAbf=BK5Qp5Vq?K*hJRHtZ##*5$^VL0iNcp;6MHE.h>X#m4r3
%H=<ptfKZm\^?Y+BGd-l7rDU2U0&M[`*csLW[`bmbQY]93N3TY'89g6c-!:NQeaj5q(JN>*T>l/+0FUZKXaVgf$GkE_BB6Ot;0kJ;
%NUAq#eCO3=0eY_?nq/<Fff6&Lp=fC^$N'dmf%,KE_o;8W9c0b7*\NsE050f\lnFk?G!6rE.(n9hfStj*<f/fn25@FD`\h09WR^:'
%4n8kB5MI\Ple_Y"Y)e0ZqIQSor8$\"G&D46cF/)'l<S2"QK8<Q(8(2\Vir4cl(DT$=n#QW*UHM"2dbjrMoW#Jq[XXXT7BSDIV]q[
%+Rj;u)KO]UJ4fWUR@H4VW!56q(O0;3<@WHIGIZ?$/g%5;[h_`S'#2bC-BGp8GcJG\#:I#$)fjNlhJ[i\mHr6p5qku5=6Qj_6*rQ'
%>Tr88annpTj)OU"q;)c@_X$.M2m=Z:h;(2An6tosj7/lZ]3[`MF:)MUV4=G>&:f-Wp>8f5gO2[e!2Bb-0^)@lN,KRj0b`RK_(_Wj
%d%/43j'ts=IG0&fHRif3-*a9)=oJ.CTN$87qKDWn/8fr6`uA[c[X?S=r\f6\h!aPJpHFZ0WnaQ1?5J[[4<Ua8]0U;WLa%,r\/U/l
%K7.%;F%/ruG`IZK.Xh89s&Nj74o".mKIonLYdSZNi?tb-j_#O9GLlkb&$;0V/i!.*:jDqZs)"`[YNEQTH+n@?6\[cD*:8(6k==^?
%Da,3onNWW$g-#=]A*(PemDD<3?XNB.LAC!OB.k<V+0p55$h"E,M8!ktq2]F?(QP2a&;IYlCGe91C0i+/5@,>/q3dqY)`9bSV*d<N
%50pumnDnHJLE#2;XfjqgE"b@jdi3#6E;(pMDqD_@g-"ZslYgZonN&d9*;FYe]OUQPPLJB=<]YU;qA"a9%C`led+^TDB1M9gDsla$
%0g8r$Dlt,lG/"h'hGc\s7^0>/de$/(f)qDfe)a,%%gQIYAuTj!O^;Ws]1@mE?(o0-9p1-R=1gkYI9F'Y4Q?&4=H#i)N0WJBA5JFb
%5*bR'2HNO?n^2jUpqrHqUKq1=SA87)NDChr/LMfhUO7=O8G[.!bjX)Jf2l:-5E#6:"*q6&hR(*n@):sr+.YmkiVV/J8(,"oIIY5(
%qU]XVeXi>iG4C\pVsbZ5h#.,1euQh8AW+4^)m9I^8"fN]DsP5fH(9[T`nZ@),]DT:TeY?9o'T"Xp%[e!anj0WdR'ZeZR)!36[2"'
%ptF.$q33p9D!&0s\%#EQr@4o-a44Ytr)K-n%!emIEe@c7q#''hc$0T\D6nTiS)9Fa>DHP^9C_eMGeCH6Gqg_'otmW/l>H4MO;2>Z
%X!\9fTO#I)WqZ#EgVQ7%*JH5Dqi41D^UCZ/>n.*nh7\SN<Z5?<0eE77qam!lCeg$4!n3D&K?`u_:$HWio\o;<ro5(P=QYed8@0I7
%WqH-K>d?X]+.]%bg!dE'('Z:k%rVDL/hM7`HUD/EU[jEeG7a/N39-@K)pO[m9Pa7jm%\s@o'4-hl?UH?Og@c]S^O]'pFgHj;QCi:
%(i!O@k2UL0$U<K"D:[fOiLj:])bk`RHiDHS`qmiYf1jFS<nWH$&g^a'<Sr9-i@2JhllE2-(h+%4bcT`6j3`eAqFYIq,+lsNgRBiT
%h`clJ8';Z`NU!G$:3CK!K>7$T,HLk;ed^8'][s"!B2?\/e'Fl)[>q#$pS0jTgN0q%r-%&/G]N*X="EJ09sBg"pIBNkY'5ut5-<YQ
%]l8d$^:&1VnDedTfjZ;*&+8600-/o\K:XnBq;CkqfC/Yf"]@hs^YRd.g:4o-o&;t)WGlfqk=1>9T'SlDQ>MT*nj_:\NsM5a[EfXC
%b0sRkc,(8N+4k_nQ\nE@,)U]8q1`O9Xb234pJ+'SD5.8JDKt31OJr_lE,2DF06M3D]lXgRD3"a;URn!XY<>(!\']#=GK08Ph`/7&
%J%!0XgjJ_cd:[oP*3L'H'Y;lp96IV/s1H`AgNa+>a]9c<J9&>Uqr9Jkf.MRj#IhKsp__!kX>#(_-#RMm54%tNcTeX;K#j"E^T8/c
%X`,^H[ma-iYKfmPD/<0lkM)t,Lhr<50tR+qbKb=[C#QC1n`YF3+Y8-/Y*B@=p.^G0%e1"i-WaVl55\Z5rd=+,1#Vu]qobffG.^p\
%.I>l49DWN<2M-R:nklCUGXF*R$d(q=RL:@oW4@6c#kV[='l1PYI-9YSO;P)O%<at#f"M&+/:@>nFQ<?5"$cMh4q[W66,>Jk`[<gU
%Crl@]^Ne'aT^"djFU>VOKeWpU[C!Hm.YO^l?f!7IG@0^'(="r(R<S=fojHf)O+l#N7Y[UHdu.+f"grhqZN*3cf@Q>[pVmVo:$uh-
%bkj1Qfa:1pmFGEk05eGU>3m8X6&!0R=^6TGf3A)BlMs8ar8E69p<+ES^#K4[@mj2LI9&_UqK\cUqW^8T<Y7]sV05C?0+mmlpIAqN
%:R'5Ap%"$+rU%qpGV!Z\dD.\RK1,Tc\b$&-@/W!O-oUlNf3]6`Y>3[^bkkKpF\;Ds/P.XUp]>[YlV1!FY1CMU>FSZXcebIg_Gn&)
%M-jFl\iId\+5Ou`CWE9jkM'EcR>G9XJ%gVD1s*6j3^5MdV(ZbYCp\*Fmg0)2rTUj-`H].k@GV0''t*o7eS\fFnAZQX5X`)kdq\M_
%'AI2o;cl1ub0ma8$fT'*_5ij/^!.A$nu_FtmL0OFFrj\nN]Kt&LY>1;'/r(aoBse&jkJ)*NRi_DA+o91+F3PK4Y1e%;3ioc<@iPX
%bQtei_&OQ6>!BY"""a#6QO-C_]mKL%l-A5"^;1$ni/E1RSoEMb8S_1U3mDS#2nje!>qbWq?K8(9MU*%S9:4\o0tFMTZdL%UBrc_r
%kCsq%XBf$OBA?Yu[sP01gp^7-IK-O/)LAaD@S,\ZCs_p"5&IK_P70-LWWt%-^E*hVhnJq=jKp$Z(&40WVFU<=pb<V?,i0)B_)qMs
%gVs'/ipiT2>I+:As/:%lbWec0e+gLr!\;^2Y?&A$fZ+-HKAj3Em^3-N&pU7gn)!Gbm+l`)4:6DHf>l#>Yk</hn(2p\hVTkJJ+hto
%Z+fr)Ano`-ES.UYcU!bBIOJ9X?JWa"X>-B^L#@JEI9J\uIp"D+hlRurF,[A\k+%03fWEbl:GiQj[(ZE8++2p+3[hWkSqoIf=Hg]B
%Crk[n<0u!9G$27e74>LRH2;7B8#``)I_PBI2s@&)M,O=\iEie#=ZJ"hD`k,$[:$&Lp$m9>$X(9!1o]"haSpVp\#W+e0B[7_i+1Rj
%Z,^nZUH82DoO4^Y-r@AF24,P2Q]%\`i<ASH#PU.%<nEY>c'%@Q@\"m>n+Htk[CA=FeaMgn)rb2giDsflG`kmop=k4(QHYYBD[Li^
%ni-C>a1\gH2^i9jPhrp^<o.$VZ>fsfpKMWLQfnSlo&g3>H2h%;k^@ji`:!0Em15!8hah0F@WVY8D93(N1,cZ;#W2Bul'C\MIej1`
%U*lV<TE!P7qYRH4qoDcQo$)(>+c,KSV:#EL"Rl3[hGWmsNFQn6nN$$/o'MLu!c8RHKsFmmW:N=>cGu,ln[S2P!<nq3#/75%hp<3<
%51gq;cbC6eJ%V[X/:^/!GIOT)RpYihVnkY9/3R2h*A5$28IZMZFKj:5fuK;iI+pbD/`"C14q0<VO)qj;kksX-`$1LK`@m2][hA!A
%WIgCJQ+&DUr):o7CG:]SPjWEBPb-l`'DYA\6+sn$00X`%9-f:1p2=kLO-XPEeNC+@f$-:dqM/b'Xec*[?e"r;fB#<W?rJ(tB3GBj
%r8BE^EYLQgH7>GYkpTXbXKJaUH*a3u3sVk^jlD>,fPdoWFM37^fWB]I2V%leP_ltO]!G[+O"7F)2su?$b9>uR`ecf[rp\=m]!8p<
%n?cK%g^[-:F^`![nH-c@[b81\l0d,TqpccWn+Ldk[X<()o0*8+Tlh$=JN$*R(iEVe_>cZY9E0CPUFu:u$8m1@,$k"[:2#AgHn"GZ
%ZU?\MU-78ma+_*^]@uU\$1IEJR&>\":FA4t+!mdML[SY&d)XsSV*/ieGe!!e]/&NGc`sCcUGBp<$Hg;V`.m.#["*(B_MZQe-f,b1
%B8au\ad@L9)?-\R*:n<5?F,n1#V@.sqd57UCjds<DH!5T9P<-TqepY8\Wr\#CY$ZjKZ7r)CE%8VL\PmDH@+BChf/^Oo1RrhQMC]"
%GfGgt3cAFoqG]@YQHbcD#P['E^]-/^r-s2]o/ao@($U]g8n^u';,a&>!r0Q2a?9ACi)ba'+7g@K;UC1qHMELU?[4tRR_A0h]I-%:
%>7Q%Pf08@W3T&lm^uI0N/L/ck9,8f-qB!iW4R`q.o.1S,"]BWJL!FPpZOo%DGs>9FoGBs5I&M1LM[/51AKZ)^Me<]S2NoqXT[]a^
%/)c?Gj,@<aQ5V"LZEq@gA#PlB3=UsEFFthE0g`oT>!<H5$GVkKB8Q.^_b_4IcRL#i.PROBK+8PX44%SSKcH>]&+ZDnWMbB]%/h;+
%7M6CY+%)75VkAXj!kC#cii>?*P2'M4Rq^0Rd'A4+"QRNI1;mZJ5qrn0:sk*?IIQX^s"Lp,0DGHO,d7$jf=pbEm<frk5/)1on9c6#
%KLs!HKJ8EY).Z)2JIs"7dLdfogUEpE$Op#N7.MHR:q0\CW5o@G;)(XQNt=U-,7>cIG[C2p!Wr,s0*)5u!a%p"!$W#\"I+Tk00S6l
%G_dWdc@n<<TRi`u3Xe]C0bhueO1E1O^<UL@<%ac$K-8..BfdFi@>pe1-A^T78:p252TO7m/0QR1p6`c%:p@kV5G7X`:2:M^>"=<n
%McL3$b=CY081f7$<8$0B502>!1ZB*%&1T*1;p/e'(e]mO!6#>1J0l$[$$FaU#Dm+6cXoKoUp]C5efnPW@JK[l#(=sHG_%!B!p(!i
%p`],ocL?Gtputj3ONt2JA&AZWC>*/K[6Qk#L#f3:MF#>fMP-pPMP8E!7>&Md'[:5f$Nrd.ciSJtiGYT@=thW!KHaVC?ibZh.*34!
%2jg?!1[>^1Hl+7U1<W#e@gaQTT_SaBVB9bRTY@+snmUXRhgDBHSmjuRbn(,C$)lY]R$M1OEDPXU@lcV>!b<ZG4\!cu)KKLn:.(_W
%Ykt[G`.q&oKt+*MZZ.,S0qPq.@ZM+UdF0ffU+m9'4.4?u<4(uOFsU5mZH$?SihZ*P:Z?OR&m@lu!I&J[$Ig"Qk."7Cb#&-JS3daj
%1Qj!X*;W6?3<]k'hUBnTEcDU=W.=%j90dn+AFr2T"u^`2,+Sl4oTi_!Pn>i<COd9X-D8_O6/0=#DOP))0t,Q@4^BLs&e0fc8`4c<
%^TNk';U8jEV@V7lNV7B(L]mC<!iG#3bb'Yo'(lma+Kkqmb%+hqemiY0\H3pc\4I$m!*Qoge6rtn2U!fV`KH:7L(N.(a[$O^3ub6Q
%//1(%Gq-+:*>DXQppn<c!F_sJM:jj"bqYZtK9C'jTbp!8&L&,=!OB&b*)"?CaJrC7LDA1?X5gK7/mtf@-^U_o*LmaRSIlA!I%sZW
%5X?E('p)s(-_P#q\)8%F"OmZ^$>(\D'ZOt^_0cZVZ.'FJ)514[[o2K'7d"4p(j\6N&L0h,2=DLGk69WAK^\O?lis.<@3mH=[.@^.
%?PlQ?I!hJXiatKGBf]?E:5&p\&d:SlEK5o0Ye*Q$J\h^)cBAEDYp(Sd>mX9$kqRno77%NHM[&.U7ij]OnSBD2<HFaejGKTu/mnk2
%VX`]VSMAVZnK8."S^"#T[=JMhF9G\Ye0@d#]pA3('K.ZWKL,](@ZO-&RSA=t-d3m7D*]V&7o2i"%fj_l\H_tj/*[=1J.fpkctF<>
%.4?a@KP_nL%heL(W#/WD')`V9$I&f6,OL7m$b]*e$\H_M$$2uqn;#D)7:JG3"@]>L/qc[c6JDAXe<1V,V\nWMVouVH@cW/AjlmHb
%9H7nm_uqb;=m53tS6ZO\*=Ms/R*'*V_7j_:1)QHoD5>A#g4@]<i1RG1J])k(m+gX*$$fFkj;82"N(a?WP3)j!V;"fe'\n1,:V/>@
%B\>(1Z\ejI+pBbtnRP!bc1!^,A3TNCk^Ur$3]T_4A7oD]%g0e,#LgD/<`8-;IM"Dj:BE"scr(bQ8T7d#mXnFX:E'4)&K1[<&g'(q
%C(D(5o6%@R(m:8s""%)6L,glE\rM&UP`oDN-/794jQk+q@kJVM?SFH,@UN_K_7*H!AE\SL`#h[?(jZLq2Huj^@03Pf<!"G"%tiH2
%i$%Kk)Z3FRLa!sbIKF'%&pb`.[J\'4E+ouH!s_E[alFQNOI_AB5R.I=i'(:=6O!7,b0M@=!L(>1beELW@mQC]h97J##)""SmdUE'
%g`QobS^$;!3Z=b2<IkR<^C"5*()RZ$lrZK:f#S;^ld<cWK:e)no\Puk!j7JjBL.s"bVP@d$ag,g*`"sO87]Tu(uV0/V+"iKS&RT*
%i2J&renGgb>:rl!<5aJU]"kOT+HRN3A/o:3l;Ns_BU'L7X(5G/NfAIt5l`1;*1Gk8'eO^IUf--o)^M7%3u6Q68cuGL"X[/W+AuHh
%Uu5ZA[)2M01&buHZjK1$c/H":jXl_$$"7AFpSIR#/Jn.K@JXIW)634#/8-h&BaZ4+'(ZKA&K@Z(e.k)",7=q?-9s8ToHTC#0[ueJ
%4.F__9JjZ;MMJDm(nmR!+rD\)MV+=?O\A0(A+*#8T[nNg8qmgj]U+^B.5[oMFNBUfM0p$tmffB0Ha3RX!?qpf_ioPpNhDC'!K7Hd
%?XbK#[$dAj"^9Nsj'!e%L:%*eaeLRg&=eTaraZGFZS&/L%_]dtQ853Lge=OB>h"B,?GM,V"jMDPd[7C2TI:*R&=^>:+&"L%UmV?R
%.I]`6oTfN0GTr1uE0_qnk@8au)2QCG@4ZqmHgF#KC%eCS$#&"*.'9=:5)qrX"-j]*AMrt?F.j(0dNifMCh+[;f$7]L?]e%cRN&mu
%'QpW''MVHOQT6$c1!2(NLt*irA>Up)#4aSua`>]3+GW&bP61djfUXC%;B89CF<&Vn*:+6K-9fKoVg,458<EF9&No[>Xbai=/^6_;
%0"f"t*>!D(NFRnUGsY>07UVaB'1>Ap'%",%mkGVg:e%L;F0)1XS-BXi3`KK;0HSSu"rM,$>WB_o:g8WA(C/VMX!pU.4.okg(dC\W
%$rd[iD&AqG1]#b1XTB8WViZ$dPQbB$\BSE*U#IMU)eCT?%iAbC-`4fZ3m,s^F<V]6\C"k?)^nORLs7A$:?kr+'T!B7JtY@K?+\K$
%AO9d5&NE57R3LB)F!Vm-0OP/^j8?_FM1/.f$hQ8Fl!X]s)AMO=$7]JU!H((T@3-<o^h2fh*fc6^DWW[Pl9pK;f;Kj]-QXjEe6NK'
%j&Smecp8O#Vns1/\c^L+3!R@^E?1um-u(+H2,#.U\f8VtqGSFSl?42B,EO6S"9f2O7BBo]SlEX]$p4`^R^`H&Jq<`ZCr^M8pVLHZ
%0kcAL%a'l3F=utjG:LVo&@i'Wa^q@d2,'\*H5jiSP3^H`=qJOXEA9km(b.fPBbY[=6t@6-E%CH1cj:[3LaWKXg8?oGe.<%5T1lMg
%ZNu^<>QdGjOo)[W?XT<*i3K-aB0fP0NRQs_FpYfdDkj7#Cc587K2"Ma5"DP\Tb=i>^uW8?Z%N-^fX'6B=U8Q[iYu/>2$A;lYPi!U
%0kc@s%N;"]kZjiD^fW$$%T.sGQ83W8;8WNWY.IPY*D?A(*#0;TSeD@U)J6$C!WrjqRpF*Qf`CnC#[q=C(1_:J+_]Oo[1("#j4\-T
%BT*crF0Rl3-jT'sGrk4FJqDH`=4Re3+JT7<ff2fSNXffN1`45.4"A09,Tnq/c#FG>St\RC8irhcp<TYj(^gMf<7%cTm4<7f6sgkm
%74.PU+=3D]m"V/c[M66ZiL67V3H1Gk$."3&BL+rF$7X1-)MFaom5ecW7tj2tAct@I1kBmEm2JT0WT=MW7NMTahG!X"J=_&;3m.fG
%\3Hem4CLNA+JSji.-O2P_;>s@q#X5<D+G%2jZD#<.FTQ%=^XK<Be;"k6:V=K&dtJ]ZA"bD0ndE>l1*DNeK21B[q.$t!sh*%*KD()
%n<GfW3;=KuMG=pQ[,WUSKJApL+'N,E=8+QZ[2fUNm:&XUgDTdbJVAVX0OmZA(.JU7PVGcu7pReQHp^CG2Q\Y?EA1.r+$qhD'4jH@
%R9sV>"3Ar%N$AUP90;kkW1CQ@ao=V>(^+B>L;pttO@$\i6.2h8J5?bp)MK4.Pcto?j`)%i5WuE#&F,ZH$8>B__R]>;6E?%nZDOB,
%e'PBTMd^D`"rb:51`oL#f;#7'gZ4&^>**]%*$Jf368GMlr$"O5Tk0pKZMp()ppT(qQkBF[^s1q-hep?Uk;&KR)X=7E!kU0A6,Wmb
%-)?NW5ebpP1r^dMLq1W[MrPL0D16%(oU+)a@=[r8OL36X"-R4;(W>#qgl)&&!F:1YqU)aEk[B;K%g,]tE8Mr1XN'mdF'+0QkbsEh
%$S4K8Dp&@+2%?Y'&PAq&[qbbn^3jN8>Z_NSP?pZ4+fH]iB2g6D):i$N6pkB`JK(AS5UO@&cXM<bFf9kRI5?)dD,gh0m9n.A-nYXR
%['ns:dD*UiI:d%[U<i$a9LEZP0W\hNTh&0,"aT1HL;JIoP="O0OZ3bHd?,5iR8[K+**eP='1kNh2S'$FRVP5Qn0jSFcp],SqIgXI
%k88#D`u/T!fo9I*%E?\\kmor`"7eU\+ai(2g^ooW@UQU;R3=,6<KdDm`_5;>+?17_dSg")QBem=XG;ujieT;R0+E%e$7f?=TpcJ%
%(BtJ0.0C2Xgd8,RKQ3H6NjbU9\[Hr?\CK.I6g^skp][U*p]>]^K"u@3%EK6E,"O]M*J%D6OP9&0&oE38pcp0D#U&PV!tpi_-]i!4
%)[s.mDQ"`*=#HI05f$7*-qTEK_?_pi=pX[R'MPV;5hK>W&BOPK^8#6FcsN:aPgZ\I!'qrn@\2[@iKV1b!Fs9(ktCpWerh[2b/2:^
%B].spC-shd/4;0"O[1g#)X-7Aq[TQa\G9f[&;3#$WhW&aMeHM`eccgYpn=Ga1Lp\4-iY:;6:TM"!C[/V!"+A]EN9O<Trpc./X4Y#
%MkJEF7>2M[kn0M++>iaLa-&*Q.glFE.KW6HNil%`R=J0G^2dPb(QO$A-,q@?S;)csGE(5B"p'hD(1_&f6'`L^13"NH[H%=u&]r)0
%OTS/ja[$Q4`#M:@jUio7Ql*aR+u(#Eg)Nc+"QN\S*7KDOE!5m"E_nD#G%2Y#LnI!NmL'*T5[)?Uo1;4mhDHG[/F<i4j32QeXY'F-
%d"+OLo-)F^:YA);Qq.(OkPtWMZ+SM(YdQp"^p>T5648sZeoMPjHDCrm6%*SlkHoL7#V6s,R9E!$:W7.8U16l)0S4$0n-S4'l!38u
%+k.*+$8WASe/"i.r.lJl,%2@@3h:%qD#fhd`LMpg>6rIo+cO:QP*A.k<3@E`:AUW>rJ6$$a\Eunj"Nsa)V!0-(5CnihiO(tN[,eX
%F=Nf-JV!ZbnKa21%YT^m7]"0W6@9ZUe.<(!A&/O?3taLog_gL(B[T4qAaC\7PW;(?[JG8lc2g47`Pt4_lDt/!_>mO?P^Pua>MG!L
%*JW-q#V<g-P0e)jkFQ*\X:9?h!43on)WLH3=EB%V+:&Q)?Wb-:4pZb-+*BOG[2o+@-;^GM9t!$Y-HJ&1&G&SV!AdZ].?D`Y</er"
%L$KD)8!^_IoNeq*G!Uj3m8aMPJ[)(=mEj87`EGa(Of>B%1&Sgjb,0Cq5u_*GcPd0qJsh;3QI@aXkQ5&.KOmd,,sn/6lC3Y:"Nf$W
%]Y7r8JHlp3,fsb6Zp>NH_,S'[NT\*=*"sPo@,(`a(pd21Lp8%1ZL&8\;blie=@m7;N8!m*9;Tm\G[?*HHC1Q^:f:ICp/mMDkG!O4
%@tBfe/d)JB0MpLbIDudcOGmI%BhEn07DKR#RU$,JC>Z*M7HZ6n)-Pn;kXLYi)/TXoHfV'0';7TG?69HPNOEnBQ_0bO"+icq32G"k
%N*Thn6G!pEN>:a\S)Op2MNBRYr>X7?;/R(+n<@JakqO'0(t)4s@^):-NDO12'N3U*V<0+6ic/RU:SFcQ4A84V\l<[;$Ef)^5";J"
%)8h`9K*2HXP$+Y9HibGC5TDY9TXI?2.+b69ZOrZ]"6.b5PboiI!ds0$N_hHjO*RGBL4I,L?$qTVg1=OQYQTQZSs*8^@,kaU\OMGF
%=:,m6a$Rs%i5V-\QuD/E^.Md"E5#<F=W^$SMIoEeR7N='H4WNO9Ze0F/dlB7;ud7RV?[Z-c2]cN[T$WKC-)hj1<C,CCiWrN%0jc;
%q?NI@%KKtd(-[]j0b3OSg'Jgf#uP(H[bOCnM&Mb9N<G:K'C4bRE$1b\([)ij]"kI?M45KXY]4))Q>RWk2K_JKRj^It>\O_A,UJL$
%YC2I9-p2$<\hGj3%RjB%#kE3CntNFA+fOeUZWf(J"(iVKXRQK^)[uomC\ZlI<a.^O8k2BZbbur5==Vb48Z8H]F9G1UJ`-@'A.l_0
%dRaQHF\)_"-qumCEs'NM@M$d2SO<IBZmXiY64=SeJ+!Sm:SH@=3EjeV*%f\6kYOr8mKepl,Q[I(>j.ELUEsm;jfQd[G_``A_8As:
%AM$$k8WYXgBMB&X?':]3"NUkQCk07[>\9T"\Pk\"<EbJ\(.>&N>VuNq<b*Mc5llY-1]g"CO9%TjoHK#hk.H9O*3ka4<Bm6TgEY>(
%p8FcM0Z(BL28IGuA-2,!bV?F5X,PEOd?U-;*V;dN@A]?Eb.oG=Kkc,V7]M/W"#52gLuDR+)ZeZu&[#^'e?1V5>D/P,.I+^!KQ<M`
%]##EDma2q'dX5,p@4`kRLK$-_&0XB<F3ua3OJhH?!HTVS7\I1W-ChFJJMa3FTKKSsBHWmi>$1XK)8@?k3Ps3U"/4PEnSk-Qo/7>C
%#RkO'V=^;&-P[Ae?pn-Z'7alWAj-@*1RHL<MDbl0PjkD!edr'5i1AHLl479Pp=q"?V6)17W(E)4#sh!'B^9HrN!3gN@),W_p-WN"
%PbV(0U[kh[&]ob=]=f[-2^8SED@#K=3'or%>HF4^/W--<.pB3Acrm&'0\n4>gOsg-RhUG?IZ9%Nb`?A-L:Wdgk9"AG8p.M?W[Hhn
%')$!k8&h_?7L'e"AX8[n[Or:],=<:)BM=N///<9L.R6Yao::p#U$HY'C-,tCM`1t"S3dQ#G9Ct>e.\:]:!5RmUGOOBFdJ]m(P(BF
%=%O`Mi1TM6Y-d"o/r,pJ6YXS1O4,+N)hH`.3TY>JoYD"_9gsjJZibTN3)0:q]aQXgAui&Dk?KhcErrf(MOR-_\llNU#,IgQ-(-?)
%@`#]^gtC\^:tm3#[hVui8P,V?qoXJgU^JbF91\KV;'T%^e4&Co=t^tU9Pq0kE52#9'e((%"k(C,65GpjIG@-(#`8=#%CBrf[0a;;
%=NG+N'ANa\2!Qds=Z[@.&2l6Z-r[+RCtsL*6Nh)?1[@2>b&/=M0]>)u)VX'K`&nd>K^1<$[/C0ZlGedV2Z3fn&eU&t"S/tl,!FhL
%m#I1SOVU_.CE(5jg==gUe8D+-Am-(Tn4[g%Js]\-cO'bC\,s\b6Vtr?SdU+#j\67Ac`f"PmkG1_^2)i@oAE_;kdb)f9,n+[[Qh,L
%'2\6"6'>F\"1)?L9H;_uH/Q'H#h8P2gXYJOft``8Y\YLGWXB&nNP=Bi>;(q3:=CmDY0!A.1d]'8[QK/hJP<.X&2n.B""S;odM<P\
%GaoqUPIE5b:t1CmJpeTQog@\q'E]0"ojUf)CMnErWuNF=aT>:<f$I8t$P?/fdZIB0Gn-X?7Mp]f%RXi@W6KdL8#HG.9@ddW+c(of
%"7`lj1ekiS[*nP_%Y/Pgrl*Sg6"ZX>'$)&<8!#*R5uIVh'NuQ/H:F=50l0l53LN;3!/Vko6;Ek2#gaep60`GH=2Q.@7LBdQE!0>c
%L0=`?0d8BkPHge*YuH\(/'NkY"e*b,FE'$o-&,7Y#BjbL>c(/.$h@Ps9DL&n\"=?k@U@qYV3:OlTBokeq9%3>F-C*!&@9Y'nrTbd
%%a14,`%sYQmK0)6$-TC'-J<bu/30)<H+-&Ym$ia`*i0t?kV0Va381hag2[Tl1C)oW)]tb`9OP*".BS;ead"*T9Bfk1_7*TK],WM@
%:_k<^[[.4[P*@,g;nP6<!Lnk08SLf8dF@23hfII\k"KEI(6HeP9,9q^bD]5Mq,kd&OQ'h0<@fRd&Q!JXc0J"?7KP:IFZkK--@M..
%KZ&VhVO:#8)"m7MB9g)UAX&(W`F+]g?kIssOTjINI61:U\0+V`D7@TNVUf#,>W(WTm.NFBND'OL$`4$t1_7!b3V0)T+Te.KAtD(5
%JGXM'$Pbd<K)fFOE*#Lqq%5A!9Z[NWn0D?@1B',\T*/#P6VqEI(i(+bgfbgugG0"9/DHj?fFeL0c6AM%,`GH'D%'2)1-.7c3Ho$i
%M?o&nW>c_Y#rBUM*%ieH&XH:mZZJns!q?bK>PmalY)k"R?Ni^Cc.qo\4,qd@VA]\TMKlujF`gm9fqkoK1'`uZWZ'hgEO:];N^BMS
%_3MV]?YI'Z"L_Q,Bl8-$>M\M<:DhdZBe%,/>%fE("!F(3]P-$23bk9)G7Y1B^d5>G>u"fYbF!HWr!:etC!'JH0gPkq&6BqX"?14j
%p0:aY-Xn`gq<m;I=0\+3lq1Y>,@K(so50I'pQ`;V_0:T@YcUESQ3Q(BJj^%d2f;t6eY!3\(i(+Ef%,e:d%39<V-t?McpG:K6g]I5
%3ad-M\Bg`3cY_JRkFO]!KsrsBOK6D?Kt?K"FsUpT;):E$4549'![BJ-NNckRnh9CekN,.>;C8e;7>Ja+cX,i#&Eu"QYlhH=N53Li
%>5L/+74Z7%%`1SF<]W(W4dB/b)o0h'U/HZiM&`6t*"\<=\Ct&e>s(g7Jp@PW-GosBjkR.pQ8Tii7_^I\j\\8o%<MV*V-NC?*=,&p
%.rA;/2\@udii!-7D8T);.:EUWQ$.hr9X4&$EWZtVo!te2=6>)Ib`]RfEeTdh/g?U9g("5%%Y:.7+P+A`G$s^jKnm4l7l@d?c4LE'
%+^A*@aYDdk,IlmU-<!EPcBJ(d>"Fk[cf6npbFJ35.)AA0LS-Opb!OE?[;R+!63`Q7gRtd0CAsua(iY9!$D7K0$h5V\lT;%Xn!t&Z
%=]5#m)A)*@#?!IH4:64n@3%>+k2pYpbVcCI%ns30),h&3g0F_;7)X-:i#nW.nYlF,05:(_S[HM-p#oR0:kY>k2?YPUj67KmLG!M=
%34I9>al=jB.,BdCdiE&'6n=Mq`.8KF6ree2r.PuXYrePqR3Mtg%<j]rVU+6=8G1l)&eHN,l"8jWL8hno0`Zq4<QKYF27r'UM\q3p
%-orT:J;/08!B!j)qAnMERIf1W,f)U,H*]L>hfHb*Rb9K*_V?=_Ysp]DiT`[.6RH.oR;.QM'LA`\X>b5i:%>`t(84LJ0<nsrM:&0%
%\l6E]h*;rc>nZ(Q$"p$+(2B\>5+NN8'3EpTIF?]d1\?B>O&YAZMfrK>.Yp)s@PHOW6m^ShS-AQPiKZgK0h2VT3eN4h&WR/-7eVk%
%ltO*KS'FT>jUr#'?Xihjcf4;YXj]#&>U1&Mfp[8/3n8e]7]UQ.@2q.`WJ>I1:@\>r10<:_:_`FBYp:U"[=A3L%UE[*r^(>1"#VOj
%`8i0dGY82YOu@.`!lOBiH%D*?^`@G,P+/0Kh^[=[j(^\;Q"DWuJ>n<]c80^R%KN]5'XljM$q"Y/@SImq#p*5YDGL\N.7Q4^A=0,9
%JM"0:A.[/U,Kq3`j*58>Z%@#:I3dGojNVa.7mrcn&Sqn^a5?-pLf[!;]qQ0aTl4`]WmsCNYLB[_j7L%AaTK.BLN`uQnu2MK!9-:n
%WjVs]_N^kDb7#ne,W?N<F#lP'0RebA!+>AKqh:Kb_iP4$JrlJlZI+3*KQ0iDU!/4pl,POO5rY)uK6V(hd2aQO2UithqG%_/9pbV-
%*\fQBb"6rIDU<J;/It0p$=:?f<0[cZ3tN/,Tajp^!N#'G+)a10PE.L^APKUI1^N.8!^/K1l<#g=[a@<Zrgof$B+D4WO>jC&5PcuI
%X0f.lC">I^!)5SK#\<S>AoVerhJm20NY$&i+M.>&U^[PVcGIA%(p3s^=1MtoQ:H5/0EKlaCF[FdNM(Hk"$4hoGT7`I@@'tk>Qe,3
%C-/RM)TBn2.2ttiJO^T6D8IF?2C&.-C%)u!`Nm=*Qt_=Y>Na!W*mnbJS]_3SGg[4/TI.L%G6/Ea<toI-*=f4-js>5)rmb6C@8@3R
%)(Q.;?"f;!`DF5;d`p6Gbq@7X5.I].2A[*4:t:@@e!*@D:`'p!@i9ET!4XbaG^4K9<ELu5jhYqLP'03\*7]U2JthKu%:^*HmRD2u
%g/GdBK[h3FC!b:MD(rK4>`lZjbdh.f.Gc>?]^aZ\Z\iH=Ajsf&d.$HU;j4(5pPLg"0MFfUiu6s(kdBG$!'EliBY;,)jG"<$"W$T1
%4DW80N1,pjK#lp<V(d=-WriX6_;'7qpJ(&\r?U1S4KolC6C0<EUtZm"Wt5A;`=WZ/UsM4PWA#<qE[Ab+Tbu0cM.&dsnhDK9270&1
%c)oWip;jgX>[Vd]N>-`%3S<.=5WXetZ::?1j$oqe9^8*?[qI.e.8[RG\UWE$":,'uc@A$@Q<+pM[;>&8V)qtI6*UmK"unc'Y:ATK
%qb@BuW;8hh1/;NS/7,VJ(FGfQL;#"[cJ4<\e,eB7(=P'R7-0h?O/gmI65J4s(@WqkC+)bmU[kZ&;rgE1Xc<\^R/QlZ/st0+^89S7
%n@]$Na;,&]Yp)Je$)#:'!o<C$S;7oa)XgYPbUR#%V1csaDDG:Fi7f#$Uk5Vg'361XLjfC<?m-t6/a2%I&Q&odVdLA>#/8X3KY-Ia
%F,;1\TJT).ClIEMRaqXScg<=%emQrH6]6Lq]dUZ&Zn2D%%$:o"R/isrdXb>&Qig`P5:I/'f?9=21"mBkDlqAl#1dE0!]!T\N0H)A
%#nWZ&1)*AHH%6&j?tXbYiA%o'>%+A%TbTp+oLD:/F90N.+O9P_*#c8O&D,XK,D)q:JCl$:b"_rp3@oD6A9:)DKZsN\1c=e?'tWh'
%;FMp<:'9L()dZnsbT&Enn=VH]0k^[)$o%QnY1BI/'$uYs/tATq9o*dI;mdtA8p4gK/US38pf[;1J=r>?Q6X_5mW#Z?_-mZb#ncU"
%0K`m"hM7gsdBO$*@[nHhQ3a[DTO>3\1+"!l'^hVoMa46fMP-aOJTQk0($UrY`>oju!SfFm=Q(4SR8K:o7M!#j:V*/XAGB=5SJ81<
%$+tL%#E&`V/l^bAhU*L2UcU!?o$OgW"*<IbNd_fSQ_71(gc4L_;aH2j)>QBc!6[s,7bbhN_/g-J!@8dMrjuD@b0,u\eX5Fil0scK
%p=eaBq9bSIP4!\(01qn^'=eQ:;M7'K*4AF/N-6(5Gjl)Y(</..VUQ.65!g<PKP=(gEK*7)O?9d=#QkAfV[Rn`&"1+8?;!_7Kst1[
%b$I`EYZ;i)50^/<8i!C8['-`rKfMDLZB%m1lt+E_*a+VI@+dIT\l!m-^dt%ORdgG06+RX]f(=?j)^WLS"dWjO]AE0HRUHUXoht<"
%*b1lkZ?iL"Sbpeud@n8=PcDB#";I(Y6Yq2;:17tj)!VH<aF9/p3@JG]J]C;5?rW&i\9Po^`klW;9o!VI`&%KAS-(R?K)OQYO[>N?
%3:1hs:]=2$$RnW+pIIPFY\3_pW>F&1_@25Z0UXuNcnf6j8iUZ)g&j()-sjIj=9[uB/&nkJJcPDb>\sS/*8Rk&4"ITGSHW*/H'O*l
%ft)BBfFPJ!^k1?$2n3Lq6.Rf=kloX^6NTo\WoD=:!'6UE!Ho,XbhTLWa,;.7`9aMBQSO6fk$"hi7No)j$>u4XU4jBmq%OJOEIS(`
%U^PHL,>u&M:sks=W5.1^"k-A@HZoT>%ja\94o6!1bm\+g^V=t!hY_dG2>g>R:m.CmKa]lE:Uajhd!^F*R?LP.A\=c[BN6d]D(In6
%B5[',dVjljd4PKHj6C<`BSe_<nDCi?P$XU<oHJ8e,HiF^K,_b!X>-`-`9kD%^D3<!Zq`1)['YlB4M4=<T9'q_&P[Qeg'p6]\,;1"
%dnsg#Q2'm,!RJ5Z<X(c[cuVf`Ku3>TTqImeUp1ZAafLJ"^-))dG&a,_$U;I?j?MIufsALfp;tQVFK)K)+\GrA3"26"+HCf(59Lo?
%H1.05DXi0IoO;$8BuAe;h\:[]6-(E#"R+lK"gDJo?E35GWo;W@IPDC@I3Bk=(rug-]K$;38rr.s'@!LB/-Q9Ak$TL#,$,N&_gJco
%UD(FkP;p@!hOkP0XHb,F6d]A13490!nJ-b^kYXJ80't_F(gcA-*,CW4T`p3@ZSEg1oVXDYGc6:Ji&d6Pj0@;Z"B@P*oLO4LZ:P20
%$"5V'K6OX;(ce70K*6@>5aqC%6Nj"q^8[GUKG%tH"Qj#e7o(AC6$2_&B9,rbG4==GVeCW,;LnSj)Ue$nBL:B(29qh3oc`3#A.A"l
%TIZK[)upI?Lq+$I`JCPAKY=^Rl?5;Un1h!`'BDdiL131d;p,pVCZI82Xl:K.lV4+g"Ql:0KjaPQ,j6R])$`GL(Z2/Z%-W5WP+Kc7
%\?8Zi8Jf`s_]^C@j':;@OlKo\Rq<0,N-SO>B!.V\0k=r-8O#cQC`&Q:nf53[85M2&#Q4B,L+ZU=$oSHfjXmd7ZoQ.+cl*)0(KC?E
%O2#'t3JU\'13_IrmMoi(4Y&F`A$MOG4^)H8\\j4f&-uLpG6HVdBu?d=.9=@W"*>&mbE8BE?P"cZ7P;*o#$uMt9Y":-86(Ouj\i=H
%I++5bA[p50?4T_)*4a/A4U'X%XNgZ[JU)e$!F?T)SkKIljNbYI)5u+W=@F@Z1GrDU89\qr`3?d&qBUM$Gg`,7e-5OlhX+m+#2Ga1
%e@8#cY(Ra<8BOZUeQi4CdH20])K4AmU"u;^BG(Q[&0OLVhjIl(#(a=pAoql!b@".4QrecH^cJ,G&*[W=:&n/QJP*=d+RfXGUV!J4
%9o_$O/b;p11plS/nT8Rq9Jn,/k#NW>&S5:K)(7%>;,2)GY#C&s'GetJMC8hT+p#Ys4;Xp7,#?OLTV@_^bc,XNRJY*>=Dee%bTej\
%TYJ)T.+C/nMfHtf`@!ZPO;;:+O3'qHR"YriP`bK=!eT81enELe*)L'lMeDuo(dt*tl;:#Qj%4JoXbL/:.GrKSHk5(pOtLk9#X5gP
%UOgP^k2/Dr\e10>g;Qku![I*ropW3TpkCi2oMs;XanR&/`lJ2/meq2b\>[d#-]IO)AF':b0/VkR#fr-)`\geo0.I^3PL4:F(A7eI
%Um^ZS=_`"-#S^obMT4l4E'V`!mTs]UnKq:n`=:V:.mPePh1Fl0'9D"G)fY'O,LQ4E"LrZ-SlKm/<+mC&e@6j&-m)e*+O!-[&Xn\.
%Z6A66k(ApVZjM&UPtZQJ7i<$_[i,[]FY0%](q:B8H(I%lJ6Ri(-m"t(`p80VigY:>&8us\T>K6>HQP"/We<<DAq,i1"\+4Q&fQS:
%!Q$5G:4Y-qU=PXYSo9Ybi(^N*]_MPm+*nY?dhK6Y`lL"uC49i'73K,i`\PT3V'-_cY7)JghN@=Uh@>.SlA,*+"*@1?bH@nMe:KhK
%PIk]^(?jUN-'Qia&5+TRi0@skKL,5QCpFBD.8u=9W"fNaH\;K"`J8o$05PP.\I[rFKm%6ihGrc7+47,1bSq!]OXgBRZ.F)oN_W6Y
%7[q]9k0lp`-K7"q>#*L'DBlM!`1d_k$T9H!(3O`:9[:t@3l]:d;,\k-+hd)W8CTrSHD-JR=O]]M/msK(*PFa;cf7D626JC":PcUE
%-;U0FFcE::78hWT#F$EuFA4R@Bh9Bmg7K+&NRu@@WCEVBZo38D6I[m,+.9HgW,!qnPn%_s@Ec&KpI6MXl5F^\L:Q;UMMEr1lImR=
%;PK1N1cLOC6p8IrT6j^!M0au]Bp:@rlCmCtK+^g<DH)0CXIQ)I+TEf7*HPfSD%?qEVe,OkgnCNZ]HC);KErr]'h^Rhc+?O\c'0;/
%"%c:M0:$]S7>X&Wko-b/oobJujATBl["'ntA<<,L;5?Z-I7WW\So(0&3-fV:.$6f'm2V$m.'oUo'g3"a-6RAd3,UBB7\G0J+kkG[
%Bnhs)gXI3NNt?$K8'$KCeDoWM@J:D@e!a%BQjAS1[3Za[l(aS`3CoEGg8EPR7DP#ARUDmg!PZ2Rm5%oW'A((4B.,]leZLOVNB3:Y
%g:$>_-N_ga!eb!(c>6Z5JoWmslr.*0ekBPL4VlMATr?3V"F(Z5\^,oU$VcWYUJ;#*B:,&F`X9HO"\[)Q+?F<PRS6fl`E3rmH=4Te
%$^5nV$;F)-[;W3k_`S'n`'lF)mG'e%"U=?\]'2.E/FY>0(rHp6U/Z,dmo]-7N6j>J)Ingh+Pe#3X=2<I;:*Xrqm/G^#5s[^.IDh^
%*"NNu]T#Y=H6nENN^1$QB!$a"ZP$[i'sf*Gg=VdK`ah5d31+juW6QKV_?t;)h4$8#IsZ+?X%A>Il0S`>H\bC7#)Im&T3P!$7Y$!k
%N#'81]b26WR[/J\*hcdi6$Fu3?8K1A5PL,\a?3Ur'g7IA`j,BqSMZL!qgFGp@oa1l6NB'^c^DX*lTtsrb[ra[-id1Y9Agk!6b-Ua
%]%O8V1j9J_3ou8.S7'l,PDE?r/FPZ0LRI,WX]RJBnt?I$p4ZA=2/+Ankj;3;anN4<79Kf/[?WXOXVD#FH*ZPZ/"CG`b,!b)VbMoZ
%]._2k+TQB@fdAL)%8'sQPGh[.rOpAZX@0RH3X7DhXR\i%KG#*d44H<rc6ef)=goTtq2L(ba.bL6e2cmi/(LQ,Ht;eU)9jG?4`Si%
%o(VBQC,p(N+#YaB`Kc>LICB@d)`BK>E2M[bno67G@p""-e9>-MDX$VRWij*RG)t35<g!t_CO8makIA34W$E9[IC"<3?_;ml]SpHc
%cK/>f>)QmBPIdu,IUaPG_7VpOn^hM`MCCSU2)R(R*4o$'GETe>/C]>\CKdQB\PJGBP"a(GQE@d\,\`ZcP*f%uWA$1Y(Fq.<ohCJ/
%kcetVPW9M]dQsGaIXdlI1BtgNg+c"KTXu+*2+fLPV`XquW1n?K:EF*\Sc;&$7#h0sHA&cVSF^JIB5S.+!;>.k=]L@Ja@Nbf1AaYk
%.NY+K<)%q&[["oG*@A>q'A:eAb;,<k`rR5"j^X"]bRLeLq?4?0ROBsZ[<8![VnQN:)*LR&5H_S8R%fY[p%]BE-0d]d`=lSf\nQH-
%1DT)"[c=`Rl^>>s@@?R?FW&j]i=t$FlP82r>rPLBeG96MS$I',!\(0B%[_Np[rS2,A"lYi'm[Nimhr4iPtDPG-e/l4%I[]2m7%V^
%@.qqm9j&<Gn5n+`UB^<^*KO^^L:D\BV._E+h^e6q6>R>_Ra@NGBND%GNl4M-2Rb\]VnO*m:2`>10O]FkcE4QG*nm'&[YD3Y=I=H3
%C>t>D60_865Y;7<\2"l<`r]!dF&DdD\M.+)eeV<S?:`,pn'q(^Fj>F2aQ1]'RZkSRaA3#D;fq<I#lhsJa5.m5BFIq`Lr!S0"OJ"Z
%lRUNXVi7e2>`6lM4$nfNN.n(`7\Yue_fY1U;58:44!%I3q>,r%OLM2*][5M:)TCufe+rQNTLJ/pSAa0J&Nf[AW,l_FnV%#8,Blnr
%4n<OZ>]@4g3*R5HV:r!Ul:2.2B;g./7Xec^moF1MASej8XQA^'-:$hcN=4tfqjmS4V9Z'4hjF=E`j2gm)>D#)AV*Z_g#1b4i7H^.
%([jP@;d9+;rYBeQZJls/XXN7E:opqABb+%0Kmk)F7XN`s0LHQ5Z+J(+Dm&,)9\F*^).ndW!d_[OKMo%NMc05OTP&BT4M<tb@Hq"1
%,1i"22$6*T_Z27fe[4ITNBd]XaP#-jR#O5DY1NuSKUbF0''[[5s(%DIPNlt?#!Y;/7B,BfmDII+[=8brc-\XF;ctn!gI_(7$<H[N
%WRB%G>tKS%NHQHKX)`>/hPi)2Z,?G`093]l%oYl^gB5JL:;!c3.`jqX87]($c+TN9Iq`85+ZMpBE1/I#:=Qru%=IquG/(/k`HI:Q
%/0l<o?gBAppFDNYY2.*)^S0_c:[:i9o&_Es&))i&=6JB:fnBIu"*[MR4nA&F$MRc<'mM2;3C-cmBeE2ghJ$`lMRhC@^9_3EZGpTP
%Fgl*dOr133o0W*bWr58l5&qE]Qlf2VHg'X#hO[1rF_+7mZmgJ+kF=**guHK3d\&/!,4(Lo$?J=N/.<0.pIcX)r7/fSbeh;jT'FZ8
%DhbiCCb./a\o,[F:=Z(;n1ZYpCd[6!N,edr%Wq/CmN["()W(E^#p6PR)1[5oZTj>`8YRtB/`K'E\$P6LRF\]7cL@@?,i7GD\f;"i
%AU5qgcZNY7esF^*>4/5+I<-X3(\.s7Df:%4fM)n6D_;Yr65mX]NgP@9ZJ61l:p5l2Lt$#(^-^57s0-S;><rL'(Xb51^/q$K6.rHU
%fVgo$85MiOO<d_][GP(XJF-#n'(2hQbe&/</%SZm0pl=EQ"lVU$GqL7+RhJ[L[sMn>$>K67:@EEL>N)5DcC?s7VI3<n4A`-K=<kl
%A1bZokYh2cP8Ja"e+r[R_\^YICN99##[`R+2<[j=3;1d_J4Qt;%IS+1B8Db-1q_)?a^0t7WUG2)Cq$2oVupFgA:;^XX[Lu(c#"=M
%?V+4>\:U_eI?:04]=Gg`,l]J$X[0fY'C5K5Xh*`#9'Xc:Qo3b5W>aB@71gVdF#^d]+p!u,Z.=6umekP?caAqMWI.B,7jUQ'#g"O:
%s1Abe8T)^;'kI3c6Z7])NrDK)P(D['6t(V^=@`d%mn:,PMpj*m`]65M/6!(0kN-l3H'5I[!,E]`a:;kr^:T95*tD<uWIR`V8*IV"
%%)ghFZOP\0#LX<tS;f!udieK`kg\3H%$ZE_/V?6>GgPIB\[*a;I">&VEI-E(!:"_^6f6!0pNdJAgHm(pRet-tI!]D_</=c#VNU>@
%1LrR4"@%Yk:lk2B_7rYc5"[Ln)cW#JL7/am+OXg7^OVJnYY#^0kDmX,UN!C`9.Tcg:lrru^WQB&Lgm@b/'2c]$.*I@g[ZmUGD<LX
%Dhf=7Tqc@,dA0AUQ);`j#lnTMM<dd$>=^SSj>\4,HGh!5nN,Ui$l8Mif9ScGW5IDd@%S_5k-dG]'Y^teI:2)?PC`I-FpU&'6M9"U
%]1*&r_>>\m/+]/E9/c7C=Y/>I'&":Y5h-8Y<V]'&77@Me8LTI5Ho`A"4A/[6(,jhtc7pO7!Y/;jDk3*s-uusaM(+XRf5l=K-2BgO
%BBOf[fHT#s<+69;f/\kFoK(SWPD__][5tO8rF<=g\eX>VBR0'/BTQfD(CNA37`i)!;.bZ7DOkT7Jf$k;*NHe6A0e+@XL/Ebbk]Iq
%[EjVZjEq0Q6t"<okD5c_fqsd?Q*2Gi?Z#c5=cA7'8gM5VaUS_E5<)"Q\A=OH.A+Q=?Bs$HOMLkJQ:KhK[F>Q_Zc^9N;aRX96/`(X
%6F!MD<.4Sg7u8l<KYmm*YGTCnc))[u.q/8u7Oo[E]TjHN&_R5kkEAN<UM?df+c!M!c!]a/^-L01$Bmu"D3$UH[Cb421i?Jge;N5j
%?(P'oh3kQ/F=!Fqg#%UfgiOW:J3rLOO;X;%W83;5!11%G1?hlb'dM9*+sZkk1.MB!Gk7Js2n>i@[p!*>ke7R6p<^'Q*k'U9s1OiY
%IbCcN).j3V`*@#T8_L;h`AIAuMIjlEF"j[V"^@cAKrCE1R&&AVIp7fiokjBYVN5=&ZGEuq`H6f-cWT\40`te#V;HSN!<jd>C.%Kr
%+?K8\7W8-/Ra]#&T<[])&\kmEY]U2rJ7NO0p4k(6MJ^XsZj;kKbFo%H@R3_G%m^Zo82m^@>.@\uYE/dV6E_(l78n,JK1$Sugt$mC
%1:](m"%/i\Y1HJ4Lel/J1Onu_aohcg`@a@DdtXtqSbhcgl<?-r,a)dN-'^h(+!]#Q91a,<2EO#".n"EY\2>KW"e4a66^d^9J>5Nj
%@6N`Smn[cEm%f6I7a\5NBsBq@d+(YOS&O]+=L]s!:8M@XCCp\PE4);0@hg,Z^dU-t?Hkr&XE=4h.L;X8\;F7eD2MO^C/ZHo[m&*C
%!4:_8DlQ8?liPGj'8]8DD0K,]F"H#n.&Bdb5$_$eDoT])Y<fh4CSgeO/-&:'<"OQUP_#;Ak4=m7K)Z(qUf#.jI`VpX\Sg"=U1GZF
%&q,'bMm1E<!@G(YGU8r\F_hm]\]DAFLZ"1.&l;!0?CqscKaN<iO/sTKb5/3#fl)36LuFH&:Zk8Db&+T%S$hhU&#><Vks$"AbAP%^
%#`>#A;bs"KMrW#`\AkZ`leQA.(875bJn.[BknXG]?pLPb2oT$pP.c4=FRn#68("6iq*UiSdfJ>sjgNEg`<1dZLlDKB.@FVSP([:n
%4KA.<c_glZ@JG)1aT.4!gSYu#Z3qsUMQo@%>K+idC>PFTk%'*OTijs):ik#!b5'cfKlgh`gUCoW)[EbBoS]cY=^pg`g?ahIQ=_P$
%js#!q7t*s*L3(,[c#3;'S0?kB,\u?>=,R,OdY=iEXLR.8pET'L[75"J9b@@LjifPkC-TN,4g20F<Z&gFd\J&mGog_Lj,d7+VHlUM
%.QshQ?#@&3%^i1_Y[1L=#j#0P%Bq*t>=D@hj4g)5l8iK7nmh0&8cHRG&)TTlU&P!dTChT#eM"_W[.Zmc&%O.jolkO&(6_(@FmC1?
%?o#Hc1juV\+"YbD;t\*TG-gn],X1SP#:oU^:;8s;kO<]p/-+cFOOAXT&?k:*dt@=P2W*5#n-<tLldTI1!AJEMm`T1-$^u8:FJ5W:
%cLP5Fiq+mM0FNIC@`1\<m!U=.V194FpuHZ2rb]iWhOfOK"N(/WD@jQEp,e*-bHCG--Q.V[Vg<Dh+jt&m2[C/GGX$>+-A$;GL%NiI
%'S$rsZQY.n`*f='696D$cbG0"q!!/U.nQU!!)Z.dg53^>Ic!T\")Th0ln>RL\E"p5%LS)e"T<`;bt>q)Z"OItmBZU/^*so5pYJ@n
%I%1tFebRd)Qj;P6*2d1/Fi\m'`m*9qJ91NYmg>W=.XcVX!&oht@BE++V@qd67p@lg!JmR7Uk02"%<e-VFjbRM5#^kSV$3d(K2aEc
%St6$]7!*W'?m2FRPloJ!MRU6.290=#)DWbRW]IaSfV7a$[6i1oL-8_@D6'PLFZ&t0ptiW?%7bQ/f"`=g$)feIm[]Damt3R&n<.Q.
%,j!Ti*T2Zj9Z-sf,f"QbY$WR]GB>tBAk\6C+IFA+-3Lo'XnHG3.b9o@[b,=O&=FUUkaT0)GON6&DAldal<e-n!GF#fjgsDVi#`<C
%O38l%HM7>>Z&ZSO1%>:2,j!0K!B9,dCf^$e!*45#e]iCbEIOoJYY[O-4/>L2(@7E"%i!mX3PEbR"i_4"?\lG7/Qd05ObpBSbLF6&
%$oD*,KGqQcM_E*t1QX$IAtGsu/$C;kLC)kJJ^E*+Ine6INf&/$4&OO:$RJplaS!YcNghstKMZ<PcmY*_GsbSI1f4Ve'.UXrk1,0]
%eBIMehsiALGG?XRNoMTe=EgH\$HSM\HQXW2fteCqku_QqDLC*B=m_%0I@26Yn?T3m(N-oLo'f"bqO\,d^'HlVCPk(%-k1:5)V'oW
%=J_%r&nt:+NO>R"'2fUOU=RbV.p023@!#LS4[fTj<KS!F"BZ\?W72cKn:JIQTuo&[3EX5h@>sZiT*5!3[h@g!Z5'.O1u]Mnk@I+P
%8$F%*"_TfP"Su`HKg5_`PtIfZB)K>r6p)o]W15R_.]8_X7r#r)S`h8r>m*Kk>AoVG=n=%2&]X7AE^l=`nR-LY]FjJLE@X=EQ]_#t
%8K>nKU7$Y@8j1.8k3TQlO`T1_JtDm#s'6TDAc<B?N5D*%Ws5+iL8LW)@g6"S(WSq]UYMPG&J5$f<L*>p$WY++.3L(Xj?!f6PYt@e
%KZOZr6kil;F8[R$Tril]/'72;*E-hK3EH`kCj9W5@`m@6-16]kBrDW5H^qnLU$tl$-H042K[L*^ATdiK-m)KW`B@R4X)gR6)"@hi
%IEKm'4s+>+S-g_MKf0++`agCTpOiGt9Z\)rE0hGddIJXKocf&_HG.J$]0*]^4Z4#b:35csJbAMrBBlZo/j(](7pehP]><&n-Qd)(
%bF&,7T_pEdUm7rP36I(LAN>#s=&K%/GC<L`@,1hs%"qs`&7t4sL6,^+e>CTnn@Qt*aWqR/"!,_$$&IMnpb$#"a5(2U<5gL)BuF_6
%>7heGS(U##c/Xkq\lCR40#;/fNae;j$`p-?2SD7/mrqUmkhT-Yi/9E@RAj.]R3ALklJk]X(1W+jK-5:?OpA@UiWZ^U@9f`ES,'Z(
%eM,glLng>)<NRA)JB6Ye=n$Png+"I>!:!&/L9eNAGn2c]@`2Q8L8.4*Wr!c"ei3)>>-Bt3.-/0mXp,.Yc+hISXWY#B6%N?c3T]\F
%*;4H?=6l_2r2R<f6FUJu[XRF0,BjfW%)k'1;+^*<W]To]<%INb(nBuf4M77-VNknr\mP];()4Cd(.]k'6n#)>YAEHE!V8"5S\_M1
%^0!fU7p)kOM6$p8T'\lG<'*.%L$kR.3K!A_R((&a,ZLO.Y]97ce?;3Dlu`M&PjS,rU`Hju(NJ>5g-PplN9_Dtl;j.!J#BQJk?WqL
%dodNs!N0=UDfa_C,nG\%9aO(9E)&/tT(*k*@RUCf^;&)[Klq:B,HqHP;I9n+298K53X&"8>_iA,73cDg\29n7],a*GOJnLIg8D_$
%;le<EMP'#bj_F^F_bX!uhF60Zl!D.WS&9i"*=JI$<nZ4!(gPt^+6!c1gf."r%<*,Z^X?`^Tr1AY.s*RNp%!KL$jFd@k?73j&T=lN
%rTpqQ8^i0gU'?uUad>Na.Z,=T,%/GsBen:uSWp:W6\q9k?_!K-L8^79i'fbng>V6daiZT#dSlX7A(s,Sag1nf6<g]9U`&f#D0of@
%2#AiQNi`'`*<\eKF7([$,A:$M=j3D!I7"-[6nEjULg0LWZ3#>DW5GHTj@Wm5G;=N0:-nEL6G'7nY_q3gcJ$gs/CdrK8+GG0l\.<2
%Bs8rjVblBCAT)Yb+WjXd:$IPj>J$TNS4^5:,63Nr52CtaTbki>Y[]np6K7FPf`XpV"p9Y/fYaUE(e?jTYT)>LJJX2qJ]i+I0Q7$_
%]#FfVksE#q@ZP#Em*0p0&Y/Sgm-eAq^J@7Z9khn4WP!^<*4M_KO2X@$_L,\7!JU(jXq(lV0!:MZS$hDBMZrZhn2We]mF+m7.5GJs
%;q'HGPKC!t,T")V5(Pr.:&M1/%Rd-*:t$>pU#89^BarmSfZFi=&Z$R6;_]IF6H=!q0;fa;qBZoe9-6H1>sa+DRIXKm,VZ9r.P--9
%D@)kk9,s$_=dC[g`W>0>Pn$"\JI?$Y!m_+<8789g5iI\KJja3]$(mN.;5#^I>Ud%9P"0/A+D(2o,GWKUR8!N,PU1dC;4$!=_FO?S
%q-unqrrO.=Oe#c10gGabRr5[Q!<:\%pkOk/AX-_3idZK.2J:_Urr^bI;8":T7gWn_r,=7X^R'.n;#G6rm)saos0/VJ:Fu$#TXh\(
%#W)J3d>2Cd^_6ZoH0+K.s-$FpB&SZ's0VYm?G_1"`P[2KK4jfeTHU"PYG&Od5&D1l*pDAQ@9,%6Q-oi4YX\W[7,-m5oXk>+/eeKg
%c3K]GT0NQX?"WqNq+R)^5!s^4r0=I=(Cn,AZ0bmAil=l\DQj?CA.b-7`;?L].jH\*4qM0jb1C<6VR'\=f3mK2XD*t/.+X_NG#o0i
%%/&RIMH4M37f)O_q],cehd=X[P@Ja;nNOme2Ye9[;koE?lCRq6A9A9jkO>/U@=<LtB#a^!&)"Yl1YtXuA<6eY^3_>;Jm"!!hoE4e
%]'1NtVc'3]]^J%B%gr+1G@gZ<7/I=qFe/Z:aHr`?>#U2$5XtVaFV:8h1bpni%fM?miC(anQ)7q/m=:pBKR:L0XX`<Kf<_\T;Nf?<
%!&VkQ=Dn!E'B2(qW]HTB7$Q5`4ZYDEN^10d\[lB\P1hO07aL"hqRBP_r<hr*4gEuWDVP)Cj*d:(61m$,\F4mlm6&(>K=f478X;:A
%Y88'e_Wt3$h8S&AlFg>E`)sl6h"Q'A?;KY*3S(1C+7.V.n+-$!,tqXZ$Bpsp\]^hYT+D"sAb[uHIH^?H#.eEB%j`_2pR<\[GG-G1
%[leniq*9PqTjK$c+@[dKImit0>,@Q9V5a"@)X"^Gm;8j@3TGJp`T)?hK1DFb97;kn/lB/aX@_FidmO-S]j<-@*-us@g[CfR&Tpi7
%-JT6p$O1Gh5@("2:a;p:B:+b.M5#=X)<Mln%C(T^=9?e]39,B'H-1>:idC#4;bcbRJNa8UlL6U*80=Y[P6^dql?eo@?Sp?#ePu/e
%e-C!]Ba+@=g5UA+=E-OkjUgQ,pFtL=b?LSXDMIter/^Z4o2Tpq?c%2@`:Q6CiGlU/^t`%EX]?aU`;-KO:n/#ENu/;`Dq_;In3EUL
%(95f-$1t27;-"ZFM=bLjitRacor7C\mP?bjUQJkPZj-EMplhPu0!W,_gPk+!Bf"=AYo>U)R%LWI8m`%i@Ysd6?Kn_pI:h/mkS`Z$
%ML`o=":On%35*"YqWO(WB2if(qX1QZ:g`pBbY+mQ=-nSmF:%V_Dd@Mmok!Qoo'%(Y]=mfa[\k%5AUkl-5.WbDijK!ekgh)bp,1L#
%DTOQ:^=sV*6Y[t:-+,P[VkQ;-8s`X%7\>i'f3f\[1odA_T#&/<49)mDI6iCBMWZY?4rkGt;D$ik*C>C"RdiRa6jsh:pOF=e\Q<cm
%M>4'\Yo[0pIUb];Xq<l*9[jK!NVGfHJG+rsC#EFDd/Qp?c>>0U(@u#9]BfotetAY@U[5EKUOJ@j1OWe'rRB@UGbNcKqPhMGT2V+c
%58Dh0D2nGWj"\i9Tl8f.o1+l>4eeeORVMP_$]ajm_,\l[O8cIjE+-U#i-6S"\%`K>G%[L(Z=4Lt65^VJS`Yl$0r<EfODIakVn74\
%',?`NJ6g_IEG%K6mE<S&0M"NGj<E7s`T9SMD.G1)ieQiV67Nn0$p%jF`a5H<@%pl95VNmF1k:hh^Ruk=]7o[peb-EXVBN>f]?IIW
%3&r>Sd+*Z["*XX_TslDX]jK,e>,.1'Y/b].aL2RjhWEGtqo=sLO#UfbTtq\Umk0.+`FM57l3LJA!jns?'g.H$i3am*Uf#'iJ,"($
%SD/U4!Nr/_0`t4?W?B%c7o*7T0NNKu%#QZ*GrSLIlbKZ`i&i24$$189$VF+V4r,V&0JPGZADEPCSd%KA(TM3.GNj]F_J5h.'n?f`
%)iG9JYi"eKWkiQ%NcUqO0<psF;sTgDY44@%#/mdH3t\T<<:u_LC%B*7V'^s&HD/%,#Bj]Im2=l+,o+NEF/A8&+Q&:3Ca$[QUQ10]
%P*MY?\Q/%"B(Aqr!l6K6oUTRn&9uqo'G02H#/*0>D$CCE/oc#NmB!33\R9Qh3eUSI:"```FCPF?eakB^q5B'$HaUjU+jd:<Zg#%l
%C5R?!8/#!]bRt@_Gp?`:+A=We2_0k?F9)/BH#ThU<9AcYNTsPd.S1^%3qOBL>7demZ(M_WRk9kKHad0MIGRu6_=9jd-tT0PfY6eW
%Z9m20'o^,ifIj\<E)eff/)FB\Ch0.)E^43PF-sNCcA^^2^U!"hM-iKJP>DH_[e,L$iZFhkIo4g^Rgf1/?kHOT!;eHnFi=p^5`agD
%h]_%s-V%K2[W^q1Yht07:"TJTnfT?!_XobCDr7kXbJk(Vk+Nr9S5d)Q<C]1=S@tr/\cMZj*/ucmrN)$ugAu4LA/U$n7qB\Dg=4Pr
%#`-%YS;Hkt)NrC2KVR:75F=0t^&uP@#IS75OuWWs6V$3NFqbOSeT!HukIBfMg*IE<2)"ldJWd^s5bMI$hW6(/[VJqjakS6@cQnmT
%%2afF%=?AY'patcN.PPnk6=OT9Aq3V-$&U"\0&D`IMHrbrNBTFB[W-PBHL5Zfhlrt/TG['XK$7!_A$e")[,qj7E[TH,942eetS_d
%Ni3`QTj3dCA[cfW-mNbJWTBOj3o^^TY/;9T'[3[%2kMA-@ds-NIOl"Z%oIW&GeZKB`r-\&'P!cAH5qFJ&-:u0j@Z8,a\EGXi\4W-
%:$'lg_W?IjR@(pg^&O(9XoRG?GZ8*Ih4XB4-cJUGB)&3(iql=no,!2Dq0l'DhuLeG-GeYQCq,](DP0ibX%>Ed5$rePd+]5cY);Xr
%A'b3Q&R[*/I3GI+Or`tqT;J9M$6i_:61be&pS@aAP`odqip;a;^o]rTlDBa18Pre/g2Te6n_N,Q\gj,/B6OG5WBh`9,@/rhpupK.
%_7,2^?.Idm'SRn0.WL&QFRtTn@mt8gmae.oD^[4K%O-1rjS[Ab2+p\f:sgW<5.^KaBX;-rJWD^Gg)h?R[Ir4KPh5$i#JgZ8Arq$L
%gA=L[O.\EPmfq1@)u"ad:(d5]_)fsiSBkn5Hd6uPs2LY>-_;?in#f"d[aT-Hj.Md0:G]0/bY^/Vhh4_%bGqqkGp`r:Z5K<b_fc#R
%BiB'oJE_##9T!o*O7d-pfC8RcnLXU$g[f[i8b$6%q3#$>mh_^g.%ha0pDX<>r,`EY;OmVBi(8%YgUrPZcahBrhcTOE`4&,"IF)#=
%HO/\+e?)CRh0'"s3MfqY(Q+4P3b[SK.XcH<,hl:VW&fa8BYDOGMbon]]/[RKY:lqQ4%/C/52HPBG.-KQ3Ep_:]KrlUpWM0oM+d"I
%RPm@t/1#bJdZ,3Fj6n1*:?"^*$+2V&&:#YkX@\Xb'3<4ts6b!jOZ@h86K>=/`UF`Dij@b36_/&V8\PU^4nC%@&Q%ZN/!4CFIOOdk
%r7P"`SJ7Cm?eidYifkV,S#2R`%JQ5GIES#u^hp'_m@8.ilWaTd[EB&:m^LeY6"o8Q+/eH$/I1`L^I;$?O'd^MZKS@a?n0;?42f02
%n^I9PH"Y'@P)iZbVu8O3\(`XOC/P)m;:Fr4[.<*XlmAX1,+B$!R5D";bes^&,`^dmflfGk_DZ>N@IVBL\fTmkZQc`M&;n<a-=BWS
%iELB$N-ZidPI/$$0Qj$_Q0^lZhOeIXZDkAKaTl59,b_n@@r\(Vk)II*G"\[1G;<imA>DJ)O\J9cUMt*9P?".mkc_>78]cH[RXgQ(
%h;_?nPn3-`rMQI*8JPm8FWI@RFoQPrd+]5cXpS1a='1I_*86/%%t_Q>Crl1SpSm<Kg!cjkOQ>!0"j8!d9!V=/)F(<`G(<)A7RTmQ
%S>G3rXrE"/2,TS,1V0J8aL>?J5oVV&ggJ"M"&PTu<^G.aE^1uiF8p>sRt;W"-2Idp)qm`s\qOU-BqhaHEr(npp=0pg="="]O\?[.
%6.tVb*J7%&@$JFC5FQe[_"irWglqO@R0a-Tk5?RiR<,j@J)fW%!(qrd?%,(W>L3>\'=GMQKk+MQU)gL;7Z\e5m?mQ%KDD8'Z30dJ
%c7"gl-o^n)&0+DV&mYW#7ZjR?1r/?j2%GYOo#4tHoCg,.WC,&qVou!VO;+ob@@'8a8_#dg^C\45&#;gG\&4fZQo6n1H<Ij&glcsV
%EtHh[HWm!S4GHP?Wf"R7>@%*TKCH*F^[!coTP7aV45.X)X4^*4$1R"qTP$RtplRPf,Gm/sV^kV;9,T4<(c:'n[c<P__V'>V3N9qZ
%o4IR#pXAr?f_fB-_9:f)gi+beZ1\WEfT01<oW$K:mF.UnDbk3H=^PW'mFY4sn*E][#rT,+Tjs&-IHT4L>HoW.I2@`OM[kjE.`*JK
%DNb"\2L(CA?YggtLsEVWI3%dc4Vlqu`K+[@9HZs,1aIcL?&t-S<QI$#[tP(:9$9>pEOrlR:p\EoNR.+Mmo#i+J]iWi?EGak?@024
%p\"O5&*D(0GS3qP"]<n@<6tBjN6A<'!%F&DlQc[oY\o;dG[!@>2DSDC\H0A/C=VJ&,W#5:6=&D@5>ZH_U(/4a6A6`AN#9tZHeYDU
%BpiT+F?1nr43Bf[5RQDgqpCnu=1Am,6:Q4S$]Ud6WE#a+Wr5amVjue1#X+Zn4>qsm#8'f"-43lNIYO=YpNC$SC:G^1fAtfEogS2p
%d+%KF`8IV;=2<@'"6NKu]+r=29%7mo%ejIYpj5QS(M3BZqC.SH<7M"#cjMj<"&$Ht.krmI3c63W=W,dZ<@a8$f'>lMPLR?>AuIKe
%^rN&?5edUlJY/2WJn.&:2"h)4qL"I]`aiZ]$.[-_XLXnh,a(5eFCjp`O?hAfnK#0A'[lO:)!?OaXUV<<OPY\Ei,)a:+\hiD,P?GX
%i8`QNe+mCJ$]4,&&$1-X*QhU9G!f;*#sf&[=G,._D7d>@<,"4V36rm'k0VHf#BHW(af*I)TI`f0,qCg?BU/u3)m-Lb&EVS+Yf;+%
%XjpPUNl_,8[s-QM+h&kQ]LXa,lE\rN`8G@6B.see$9CGHb*6GUTb,$^WMC[<Nn#[BmGY29YDku[68FUra=3R8(cul;gZ_W!Socp;
%=AAk\JLDVa-!#qVOL.q2L3]X`a"I0YdN1j)p'SOM^.mfTX+&7h-4TU,quX?Hd]2tU6`j(/:dXP*.O9]M8lMg\EO5cbc\"L$#j_j4
%NuTX4W@AdCT4pkl=I>*eS)U<%;TW5@nfXBZ]F('kU;G7+(!g@g!.`k&puPu#L#"4Yo:p^HVD[`'ZoIXeK6kaFd\W]>D[lobJ0jF0
%H&'t^g".u"JY6!8TE`F;%'IV_EFr^<p9O`=LXIj+A=0E>s*l/5fh"$)*l2@i0k,:#<R62(>C#+I>qI%K;S^6DTkZF7\E0>f#AhN,
%Ib+@-%gM>D)G"SsLIJJ>m&!03IeI3_Yi7?Hp9EgT`iTp'a.9DmA$iTYV73k3S@.V/=o?023n#oW>UUBT'Pm4!R?jQ&JS'Q3NuSbE
%dbi$GrRfd;1D(!Cak?j7^Fb<UQ!0li0:!/h+.<Q=Ga>D8G&2W.:_bA0%n'pfYSA'NRtC8@[@*n8@lrA4>h%hLrkp44SnaJ8!4,,#
%0qJ8?Vee>o&<tEP-19eS,g"l0f6DACA_r,,Zq5?m(f!'RpA9nl\cqE(c3\5HJ6@tMoW6&eeaD930B&qrU6,%(@<AcF5_CA\0W>do
%-4@X+9\0oHNLu3Ih,^N>1ts7<"T9!ci?geW1?SB<,T7O(>6eCd>f5F'4.;e6RZq!(d[=B"Dej.I*WICCKNA>(Iq7!fe"*IFI`B#/
%NP*k@qY(g,j'1Uk?<Hcf&*>`&&UpXh\XaRbcPLV_cnuEToFcuF;iD`Z0fc9TgkaS!P.R_IJi^S'h*B+#[AonE*o+O;<\MTDo>"q&
%ha"gL_<Q0E^M4RMOr#RnL\JH]A8?,l#,SsnWe46qN./d[Z+hI6TH<(C(?5/8]3gO.fB8pEB1Bc[lr_?598fN)C;8Q6qK(3^hn<A<
%'^JP\;QWJqM#lrB&hiMc-GoDA?$&lKVCe%?ZB\e=_PqXb%FSd%!CD?1?;`Ate/ZOl::I;o[*M@MZoF=j2iqR</M,,l\mW[k>hM:*
%=0#BMA.fA6=`gaf'Q_(:QInZKqGlK!^id#EMaGubZ3q,JgOljQ<nH&RKJg+0'H';7O@s,qgunIo>70l'3688XV+u<!27/U5;sHn7
%](fdr!'GA92ZJn8.mM081Mk@];r/Ze,s>hu88pBdB?TGhg]2A(GmrIGQR<LP>)WY:JS"Wm)B.9Y3i251R4+1-I/&)u@]iI0.SFn^
%1/bS0ReeQc&!lK50Hm,h`%I:_/,Q&3c'D.cA#'iKOPLn!M0fn.CrMoQ)a[\H6Ya/b$N`/9[jQ'@dr(#SrOa5,[XEoA@CK4s/]dg?
%'a-qZpPJ![!ie4\]s8\kl04ReI3fY%So&0o=S&+\kV^IXc[JE;-mR@7SU?L`9nB3aE,DooQ7!T9W%*]&LK^0TQ%/P5I4Y9&MK1:L
%F^J*/!(:,gd,Mb_7?CY<3>Q1`>&2;:mG/cT[aLX^EH_hLVQ(UNYt=./CY]9-O#idc:]?/N^iggMa3OMtZsBD#?W!_!]2_NHX'(FU
%kJ`U#d9%oRY7QQeDC\pZg#9d>0q(dF.O*e/EjCg[S%9556EC!'Nl6V+%G7d+Z%Ss*VYk+H`$1JS:#;[8V<Ujte!o"'MrnXY^0*Ba
%_GXZCii^6L_C-uqRbS8#B08ZPF6u':9KBC=,S?O"?I*bS6?qPS^R?qORmk?_ougZ:-43`jrmci%eS<4!WF3j,MlrQ*?p\Ob<Zi2H
%aiQDLq12NW6IBU+q;*ZX5-c_F(NNCY<S]/S:ShEB.&`E`P(8`0Z/#!liU5pP@5fU![Mq8+jmSISl=\Kq$:URt7'O_'[=k#)EE>,k
%mVLOKN)aoW2e35$e5C[?+e'mm1A%&2e*l-@^TTiq)uN&V1+;*&k]THQRN&jtD,Vfle[McdJ/V#4Y4+_ZMWVNCA!&so&E%no7%Kc<
%$61(Z)k$E6T?,0/7aG$k'19L]-W<'T;A2T$IXkUSVQM[nC@1<9q1Ue5P](!),h(DRRAd-M=fKHT"iYX*,"3o`'DsOk;64k9%Mkp0
%l?kJKBWf9Q?#9Dg&N>d78]ujoS$1M4km&`==1o&!+QL;!$IX>^1MB._'36nj::iI$N>T_WWNR_b?/?-([UqB>hO0sc.ifsYa^u)q
%T4m^bO5">Y[q\B8c9AbI)a<t>"c.oJ;peSP_Q8*ADN+?M=4,<ZTjfR_YeS,$bbj#ddu!-+W9\?q,`.cT7=5oX>5(Z>-hISpVZL]0
%LG'alcD)r5DFp5!kVb?n'u;\M(KQtMHo7@XC-X>f32pjT">F3$>!XmZg0RP*%dCSTmkJ`X`)JM.[:(IPPsEP!2ekMjAL4YjXj,jB
%=PrZ`dGe?4('"u2$O&"UMA`mc;uiqSeM@SN;G>@";pTF%,=\'?oEKOhB66f"r61Z$?3lU+P>s[]2C$gH&k-*FJnQ$@'].=tMgMk7
%?2Z#^mZQU1[QI/)(/m*um(lh8-TTj4fI*:Z$-<ns\IX(AH?Rn*B)U5Ldb_/Kc$#C+m/19s6j*\C'Gn_==c4,_F3%48%,R&2[e<O,
%X-,Gs8`^__SXk_knV[Wl@e?ra>b:Sk0AUh,*`ZY1'e>,4oH)W4;7sd>_3`LoEku!Y('Fq9Rk<G3UFfaO4Q4O+1k8'o/93`_h!as:
%?+Q;n]&mn>U"u)]\M9`E*>m2(=7>K[.VnMMF]GeKDB/U*E=Wf?ND9(qOe@;RbLNmK8[`@R&jcPnAnglt76B&Q,3X\+U0g=\%Ta8V
%!8V\%"t?.o&6\+VbHC"dn2.n)j=AQ'TsB6,YV1d.53\q0$HZM/.Fc461Q,XY=ou,VbPuDWp);,*^[F(q5HJWKr^hh;N?D_%dqP9d
%RT.G5!`@@oQ!&md'rR?O(lQXS%c-4fOV89bg/gVGJ0pcecWRIY\nPBTauYSVAA*uo:u"qr=J8>!.S(<6&PAit8sN`u#B$aN>B/V<
%."u99J;7ZapsO"H#c7f5]f[XI%&siuPo8JfnJU2da*\,:m0>V*!*Vs[M);NgPD[K"$TgG[5)Oao1mk(@CAkl-m3t(Nam6W=U:TJQ
%+XpDgN8BQ3T)*CJg;e50CFIdMLO-:p6PE(A<NBT`&>&X:R2j1H\qf5pD:ennl0Li#[2\Obi_RFbJOiYL.)Q@\r0e=L(-``/AZm?U
%fSTV@f+>cLkW:sT_h:hh0HN01[Xc`#3!7eFLoma4LiNUH39'1l=/_B0^BqH"BZnoQdMPL;]Jnl&K!0("&+'[2Bk]=HB-cH"#"k+"
%bYQ[Z-?CK"_]kD=V7-HDU7U,9ER<-H[B)Y0J:bbg=06KpVSN(DV/03dMR>dFS$B,Xi-&bq&*"Bkj2mc2d>\r;l!]jl%88^=_e(>4
%!^K*"6/tg$\jctU4`c;B'G(kPX.?VrphK+1*TOTrQo\K;*V&1![H1jV3T[Sr<n%T\7gp]u6B[:NY,d0k.[*9"WVTULNS\+Lc!)8Q
%Ws9/=`(e^*]!*J,e1ms(Ahia10C.AUa1AH*rO;#-,/:kFc'^J62j3R(e9hh0.nli8g!g;5hY)@+n=jmGUe;G008cehh*<!J[]Tj6
%n3a6kd/A+l8]7Hpfgnunqo(lnAocm=R\%4Kjt*Cq-]%t[[`5#6p["/T6iI(BFA(,j\Fo.r5L(nbaBUX#Uu?<71;.:Z<Q%@]&s`L=
%7`.4g`NiM]j)FlUJquCf'WWuR-j(e_a^BqB'i61cC*K'F$iuSh_ZQlmiFG2r1-\<<`Q/3IDf\K4i")'soI*`eRm.W%2DpC[@DId+
%\r(O6&@/,M`PO<,gnsu.PnbD))'X?_.a(<8JT]c_CO.g,A6^=_7a-RL,V$N\=Y73F>.I>#eBKpZ6_B*rLD0ncamNd&lc<Zn+\`tg
%(Sg?B1I\i`0X_Sm(;\-.Folln3*Z>/c&:l*fa7W9!%H9@p#9SkM1[R^gXWIePI;"hmq=0JpMkW)1UJ7Q9rKBRUjZ<<5aL&sRB]@=
%@i_T,g]>cAcC]F*Hksk#lF+14nq3aO\ZGigBdW1.3/osEeHO1Z:o1J>Gr`q]Lh_s^_P"P4=Sb6*'lLnK/moa>&3bt`LBJkr/\@1V
%fa-qenM'_=OlO6$<DpCHLPsM1D[Q2]g25i?](,BInI8@`V+qhAEZ`.\TOq_8"6F$Jk2;PKOUjqSJ%fPcG7-*8PDEI,']m1#R#4$C
%842G"Bc+q4r#T-$!Io.2Sf!2,aj5iY,''g^q6HAR#3FQZTfYn+r)[,>qjVWQji<q-*dbWdDE$SRepOuQi5<iLH`el"$`asRA*[p6
%gc5.3iZ"%nH[&PYDhLMp\m%0?2iCks"L$8pR')t<TftT0FB].88jiptXK-?4*Ib0p<$b5)1G4@CWh8VSpuA[,/?keZl'e*'';u$R
%a\nj+P5^qHo*J^/X$Dfo'&acpYFB#4=Od"dJq$bWO:$A8oN)H%po>#(*;tumT!3Nr(%i(kCS)rPG_,qHL)#3\bKDgf'KQ]_gl/?p
%6jn;2Dnbe]G5pctI\1-V7BP4^;O]>,"%]Bm<q#X[7LGHmaT]<4.Gd)g72$i@@P92WH7\-B&`9tb^OO3d^bGsN8J-`%Pp!iRei-SM
%^g\V3&B@]_EEG@"p[R%]f&/On8?4EIG=+tm2n*s18&M4A&n`?O3jOfXT(VkM[a:EZj&[I/OqL1BGu1fNP?HP:p^H(S_,n4?.nshP
%/%o(P2oM`C%NBdDP_@IgUE9R!U2hf>'k<:;>b?Ebg;cteQ["7Z102"o-_"[GJc*-j3M2DVQKgNT+Kj3n$0Y_>OH'us8TjD)1q/Tq
%V/W!*0>P7<_'0LdZ-OT\XA77#9GP>TFO!FM(7ZmW=hkk:Mpo;f]aNuCK<A0l>O<?*)QH31l:o]sTEOMHh7X%7V<uYn",6SH?<-ZI
%L/8U<HKFB%iugrDP93g+<F(EB,8@43Rpo45TZDse/N@`+`Mp:Z#:*5ko#68Q<_rqKEnj6D:91N3(_,70.ZKT<hG#''Q7m>i6V,,"
%\,U1nNW]o)q;NNQ[W93J*6B1WU&0m]]+>eFp7anBbF_TCY*oJtpf6!l][*S[XFn6KQ%Xa3YSeKOW?1!3Yk-bLD[9IkOpn4e-WB4W
%T%nu`3`N*N$1RlB*KY!.!/I8rC"&lHH$oec6^\l!M$ADlY_Q-03K0cNd!.rj2j()fb]KX2_-i&X/&C$m-^0W(d29`"p%9FM=juM$
%6*J\s<)]52FcR5V1!kU*nijl#o*oO^1#e[&Ms=^\>DRkR#N/JpDqHgj(c^HHSKO.hrfhq@8_j,N%pI3la@[^NQq\3QZ;!rKa^?_?
%WIAc)Sa]uDZpXM(H["J#G">UlPV,1KmhUnf,qPo&BBi@%L(k'l/L!&I*QBAR_0M`g!_QE'b!>1.['Hjipc/!ZN+fs!ThRH.kbLpA
%<q&S<2`phhppIhs>7*0.[SI]T>"(>kfpoM.Rt,N@#Qa%So/\SG?\)X;Ds8Ob)J"e_C:F`i$2TLQWj&$,^sNm(PG)h^N8D\-Uq7_>
%d'PrLC&nH3$"d"eDo0VkNnc1!IkG>+Y.p%a)r;`!9[`CW!j:?%/L"$hk(7ArM![paIkm4tP,cbElq.Op_^AM\2Nfs=g3(<fV7&SQ
%AN@7Dd7uSRdsCTuhc:4.)itPE$Ft3sWP[&cNXf=W:C)`f%!e*o:XWo@hk&c#5\"Fc&2SCP3UY?471,*T*SIo&_7`[C&rX!Kn$_2@
%d/LjWGFndf*hl@WC5/rm\eeFd-l;Z@ks?`=LG*W!/\KKl0WMm>"3Zo\]+>n;^KgV]CS/94:j,C5OmTB;@IbsXi-_e^*!L(K?XSaF
%--qgWf;$\@eH_sO>Ira;[s#>uoNu`9B-<VrhGac952UVZHVml-n>d3uo@!jG,FZ3]iHM4Gf5AJ#/[kK./9dEZQ+2Xe+OPb'pos4n
%A;Y+MQHluR8Y)].7I=L4JeQLTR1&p[D+/YdK]^7Q)nn\Q%toZa:Fj4R@MUP?0j4"i%G,r22'<l!kL<+&i-*@#SP,),Upqk-rYi`:
%ELKd&V>g=%[dLus"'sD%'4Hfgs$"gpWil[f!s@"&.,/?fmmKBc5j^Eh[&mZ'rpo&())kFq8I[B2-N1GhER(TpT(Ndm3FHNr9.Miq
%X8u]B8Nlc<9$JU*e]scc9%"a8LROGV5YO[:mZ7KpEfdRa6KT3>QY_BVC9o"VX5MXd8KD`78>YNmM113Yln47@P.Yeqk:240I<KGe
%0Bk;#!fH9_fB@X2$!Rl!C]UWfi`NMV/(rb9anqsX*)S:`2DD)gb7R`+&4fJDNlFqt6,n=l+3Ql#UiO>ZOP-q*X](E:Aa[98L6BhM
%MLNLQXR::9E9iY2Jp2>\i8@CiO05hr.,Z+3BdNXp#,,nZL`sT*20!NJNpU?>r_"5$+^$eDD].$K6MG)t\nEu0R#YEgF"#dG8[i1h
%g.b=8%P6!9!TTCs`sOdaL6X!EJqYabT(71XehC9>41j-o8:M?8<mrrnY=mgKs+HWM$=f-oN05!.r@HPloPcd]:jetB$Ck4s:>gYT
%0WGF/3>d,[6t$<DdA"pI'G6N2XRr'k5E,Ujid3-%p?b=,V&u]ghl+Xt7@J34:8(oX7jOlF'Vjfj",PU\JVuk,M'sk!2V9)$e4%fT
%.L.U!<_\1EZeq,S6*gdNoXuJ5`t(hkI=i-f/P;WEZ4L+hCQ$-WU1>BY:b_Q,%I"W.6.)+d=cmr*31eW_LKe&hCOpTuW$;$?n4:=%
%e'L61rkdTCP<PfcT>Tfmfl^Y;:Bn=A19Ls_1Gfht]'/9U#3)^-\_=G19;^4&Z7'qe(ad.G1=g?@*JE$?!Kb[nL4u;OGnBjL4Y^p\
%@B?3R$Q_dr%^:GZeI/!ihbCrhFL=:[PEM<o9g9#K0*,pSB_TCq5K^;Xj$OOraOEm.e?;?tYM<[<fZ\s]'JY4a0=`VV=f1P55sr4h
%1^/9#=,fqeDUEqN;6sd:,s1jh[ZkAC@B/lH8'kKFO@lJ6KAE`JW"hmU],QFmK*^$t)j>KP;Zq(R1sQYM6e%!;C[TUjI#Z3u3dM''
%f<R%N)"M+l-"ah4*,!3maP(Nc4bAf]"<mA7,iQF&g8:A'QSPW\H`H2mMhS=2&W>[f9C%rA_5bp)L?:*8dOFgFAjP7V7dDOgJV]Ma
%c12N*B.1dS/qdAPRgec9G\a#_X2g=b6uBn'0'TD7VogBL@PoZ]Zq6,T#/*0YmTX!E5t/DbYO^PRG&Yt:K7hoMcIiX.d[$B[ppO7f
%1;@Kj>tg<qf[%YDXkdiC]550Bjbs2`&%M)dEbB.l^F)#Q9Ulo_#Y9M3crG!WjelY.9r-R`cEhU"\@kSB$/C2b<8Ge2HT.JV9csJm
%[?G4g7>S$6,AmJhntsZ<T<6u;cIF#UcNLk(=]J-,LWu'N+;\M0/tN(n%UB6pDQd,\UOt\d_Wp1(NpcAjn"j>90hEG'.0nc)kC&9T
%UJ*##-n*W2crht-1rYkVRiVlCThp0<$aeE#&T^OHRVo"?n?^ae@^=J2Ro^ofL@j[#<Hu,2Dn##l[0/G*kcX%79$kp>;"J^s,R&E'
%bl'&33UJq$!X&j@&/A8`2lSPDeZYjlDk#eqLdK\$=N8^Q'Ze/H[W1/jKFW0.]q<EkUk*YdQ)4g"Q@+*Ti]d^te;PhmSeca:bRR"e
%,je%s(+)t&F#V@S=DEUAW$C%)GFdD379hA?kU<dcPIIOj6+p#I].8XbJ9*c_`te[]'70uc&,AmJ6FLIq%!$X=Kf00MecS9V<QLi#
%Vj*D';;]m/$^*44+N5KO&@Q:nO,jiLV*,!0]S6`p9L)Ta6/Ac:+bc6<W)3kL<+!3g(eM\:?d.V;"k$o3&$^%j:bkd68m=))DG5J]
%I@64b)fNIX7)5*4(\'0BJ5RMCTSTk=aPU&,$gj:XY=uk.!m)qc+n_R+f(Z:48_M]<#/s8i/KKca/?YJ4Ma6;:O1<t7pp"'\aB'<!
%&FSA,O(^r'NQ10$,fSi&*)lKP=7fPZDAc+`8O=q>ffRTbGGfUoW?C*1pA^HA%ro?M$-LF,V*"7qI=NE_JR@>o,)DO"k420d@@D25
%NHX)EG-Z.YHkSiA!gh.W,?EZaGamc&,Cu4u2oQ;-"VTn#n<:6fj?BDkj3o,RithTK![grF]M'@D9-sS5r-a[U2du\:p"Ai#G6:j$
%'AB!]T<]T-T\H9LC);p_b['#XoKa0Pan)shNm4mZOEKUS&*'&2AFfQI(1<5rZ4X*0p+4EX@Uu@.:aJAas/%Vk^X5^.Hl^$FdlIR.
%d&"A7da]Cpg#@52kgB&"\66P'gCR6\_a4@W-$9*)<t)IEU_<o1,ke:^=#'iOl1+GD,"MN=o!AdmZb107_8f?O*3ZBa?%%"4q\;$H
%2LdOmjj.=d824\a$EMsMr,:.H<P":>K7ec'2/5riMe,L#>Kf&MU0K+9\Lcp=De?)b:m("LVA1L+e5B+C(6\Tmf/M]@[k9%*(m`%B
%*<OE52d0.s$YaCV[o^`e`5YF60qQ_U>q\%J.sn$,ZJQ,HD,MeBe.$df#?&`e(#4*/rcA$>^)L1'+2BN@6,-tmlnW:;5"s*]HWl\^
%mY>6FC,)n2Uhq(<+D%nO7iBLV^*-g]mm^=+*DmQn\<9OV]f^XZ#kE.R\1StGC=pB-.SmDp<'7il8esPgAOB^9riW7`\tfIU>Q07Q
%iqDrGRe!^,Y.XYY/d),o=<fI&ob,kVkXDIH80c*7%3%hI2b<Eh8mE%2F#&VQP#6Rdd/IK'ZsagDFca"se:DrP+ZoGC&BmbpJLo<G
%\!d2"4!>3OPZ7[Y[-;!ij]c^]r?,LZAGogc:KtNZp2NMe%s:lk!s]0!G(ria'n$1Q)DF">"3<k_3Im5$KqI'B#h4$>6UWAT@fdo,
%H^"`Y5D-bG?qVo-<8;-,B=EU0<mV*$+q?F=ZRX<Fgr>Qe&q,ZOU+o*[$GS43caaF4NB##:&dSI-+VNakK1+EV8d9<Y35d8Mk!7!0
%`-3S$,(NUgX]$LkXi#aU'*4FJ5U0[W7QlkM<O.ci;XSj](:);geS3ko6)oIfP363;6)&/4!8ac^k_/)!D=@,V/HN.DX\%HO[Kh?$
%VH]'A#Pc`d+TQ[P["M7%%igFQ=$lLHi)1h*_ajA4Hb.J+;'UJOf8m-B5d5.N+Qmo8h8'rXZbisGHLTJ@ib#-jKh/hkYQ94Tl7?a'
%:8iaSOuZ?<C?VN.=<0D%0H\*$elqDk[4njKaZbS/e95=W$iG$D&T(S.KgT55jW$o)O*Ha%JneI!F=.MsJV#IAk5iZXG8c\K^C5.b
%"8Ji#61O2oba+>&:n!hCP\/3i]h1;&^s'*prJT)eiE0[G70/_h7gPj=[c0cmI08+0nbXt_pIP%U3`AAVW&i!">L^@Q^)0)O%Ki0/
%H>=Uf3.,kC!c,jZ?,Z6D$)TR_W!u?3q>e2L-F1G4rD"7SX4t.sTEKtaBtY\9+Xk*J1R)7_'T2i/A+($GjStsu>;:>T\ulE;S5k5.
%[u+&n4P(k9$XfVWC#q$Z6X[7u\3`X(=Jkle2"0<hL&=RsVYja1P;h^,o@<C`)JP[-]bVkQq)Cub@?2@ZC@o_]@$798#c)5b3)Hgr
%P+bHhlIN?)S!D<9lG1^1esW=a[c."_.C/$W`:8!\:%4>,1iJDIR(`-B(/[\8a=;GD@a@aU-d>_W?I)%_rsM)JP]XDBe5RfYj]AaB
%6?3AdY20)dc4F2rL>UUPpOUCFLOoOuN[B,rlc<h6^/cJI4cN_A<tc/YkdY%F,aW6GX@3G76E`'SOm?3K#gsmu'4ia29$8",^bX(b
%9qo,=_PJs!=_jG%He%u'%RFIel48X-X;X0-b-!RMFU=_*"tN$*+;,LDDYg$q.Ru\+V8Ka\,&m2.9dO#%Vo1K*dlCAXmdW*P[OS$k
%jA'iJM)3#3n^:tNCi&Al$XitbO/h`C1f]8`P]IK.E\IcAK<fr;f8m->5YY4$,,kXuQs1[_+@nMITTVQG;P6gq!lH0b"iI,WQXe`3
%Yr@;5-m3D3X_9NW$K9Bb[,nE%"ioc6936m@*Ni+.P;JCn6<Bh"P2I(5Mj(0r]f;.t+t\*E)MMbE"gV;.#8LJ\7DGLY-cKf3m$_rK
%3%B"\jCJ#1NHkg/YYjL#%0:<h_8%%M<nJ!f2.XTWpK,8P.L)B-a<VAA<-@j=Y[hkY;Zsd\:EVM7,0I'8mWB\%KZsZ=S2rRpC-sRc
%:Q$WFk0Em^o`-;:k8A,%JkSan'XAKk6B;.*Y<H!P+AfK&E,m;l.ii(V@'6N+B91:p,O]t]qr:/W\Mfr*5g["-QGC<S9Z\8"n9qQo
%Z!16=$!1ua$Vt)Z1"kJ.U2!0\m,">2r$*U6S!E7GYp>neM,DB%U_qTh'j=bjJITOlmVSK]8o8:0SQhTbc;7K<*=Qo1i`t<bW0DD;
%8qB[eQ@F-!72aV[V8Rs9"HuQ6hhGWo"dRsHfAk0\T\fnsVm<=s][IM+0D)20&ttE4Odr<95uk4JI"\ieBZ$<V!?Cdc-tRIM\hkbh
%0[NBXVP&d5.abR;0aL0Bcm=6P,f^4)h/>IS>lrF=Rrq(s@76TMkS/m0f&B2]'3hg>Hpe&*&mm404(a%A)@_]qJ9DHTRV_,*&Deu$
%4Nd=+RZCHom(sm5-rEW3.0Q[5Wm.1\IBA\_VeS(N887.b]9>)AHBEWn4767B!*,N/otg(J%D[-[_)eLfU&8u3Z)ZcfO5\d^TW%N4
%R++Ka$tPXq!hn1-;+&nJUFJcr=**S,3dCjd_<h#aM9fH82^G+*5C\>L6>T8EcNLgu/Ub$<CD-FG`+nk?':,hXr!l3<_L!.>WT3rm
%bd4liR?u#f'+?o.?"YtgO;],HNG,Us*#76iEa*AbEPG4)V^eVe$;%QEfanW)NCL)XTbhh0)QTu?:i0Seeqj")D9^3t]8)DfZp'<J
%7Sm#mI*??_:;sDAke'J8:uH=-=2b<43NP]PNp0uq_ePAj=gI>S?oTiNb.)2NU:')ZL+Tt+kh3Ln-!'8Zn?,FS6gQIp_c/-4%_s`H
%2'nn%:j3Q0SZ)4Xr2&*SeBP$TKBb[7>hFYY8V`gs:!f0Nd;ds(fTTqaQ*(7_ioX*XW2_m;?$1(%lfLmk2G@gEC*LrP*4>d06CcYe
%U!6tO\RPn*0Zg!aD%L]V?$t7<rr?h+/6pQ..\O2P=dE(Dm?e0,;/+$bP<Ju^M+4cL<$XAjgOt7"W\.>c>2pGJ?!'[h#Z178k*kX]
%[r$d9ndj,F.M>KoK(2V+NZQ?a:i-FdT=oL14kNB"7ho$XO9[Co,![X^D+)[5C'b#ljUP^V?^0D:1@O@ZYI_Wm$MGu^-u[es%-"pV
%$n!$N+**aNXM/rT[$B"t-hNp;V2W`R#[n`&Y:`q/;76UL>)@'MeT"`L+(BR#Me@%d)`Fd1Yc4te6%ilFiARGJ(iE?2f;*Y+;75\0
%b1Q<e=@0-$K?Y;]_0uY&U?8f58Odt1RrimEW04Y:4bffGD$h>9UX3eIA`C=9Or\7;$3U)hh)C_LGd26n^m#\r9I;3r)MUNtS!D1+
%=P`tQB<oYtMH@f91J`7W"W8<)-X',]_dt'o$3"r-kmt!qYYW\*$X`X\i@.;KB(2ndV#GuNb#1Ak>)hf<3EJ%udXg--5>M3M&dUDb
%ZSsC5)o.O`EF451+_(p`>sRb:N^^NQFs$d?#gPf:icpN:+XNQ/iU#P)qr7IZJrqP\eV-k6\//dDL_XM?!&m=[7%W3=9#r-OT(er0
%.GQU88Nal3$91Q%?4Ya]!c_ea7nZBS2M'g'GAMZgWJtMoTW-._>&ob\e5HbOSVepZ>IjP@1old'[q(nR0?`o2Cc9ficeNt<dN+H3
%[^m#]Z1JV\UhUp4%a(8T%k5j$a.dDheV:]jU2K8?9`pugg/l3p4">a/[TU^`&k%Lq.>npY"i1qq^5?5c4Ss*<i3a7)(89lRhA6%c
%d+tK;36.-90^(X<4Xf5CjM3^LW+tsWBYoE_](5"h=EP?1p>ffF\`GQH[\BF.K2U*d$:/]K?ITe4?).Hu]l;n"*N"3L%@`XO$`>03
%LJdkMK>O<Ylt'>cgF0As.M?ikDQo;h(o]hHq*Ir4Z56JXns<7mZun$)U/$&+0amX%TWD\5r6;7rK'Fe@.<st%XH6%V;J+7^fK98a
%CAb)_.BDI6=OCKI<tW%rGnkVHb,?&j^DHABeSg!;U9'&V\E7,HPH>2Ie&AX.=,h<te,nb1YTc<M4sLV;mGul-5!YF_OV<?4`a*Fd
%Q_186XW-J\PMWAV2Hk:g7VF4f)Ve?sab6[gFEOqu(1n+)S3T]'HmQCS;Y=K]LCOWVdgh,G_out(_hUQ#*<`B>7i?uqj7njR8]PY1
%9_+m318`%NGB7H@Nb_hA]-XNFc]!mD+-IY!dX8*76Bi<\3B=6Y.%sisQGP0Ne"*C$_FC5na`)C$d:fXUTX(Gr3Ro"/-`jo"W6@aO
%CF!er5UrhmJW!q.1+f_BRqf^p[peAufeU"P_RGD<JF;t2dKuL>[o)<#>Ro>Xp(IW)eqp_Al1gM6NHp>JoG?-&Hh1M/[!;b+B'HtD
%8jssB]Hk&@,C?&'iL&i[%Di6,4Ic9gh9rVgqI;O#s"$@d]E+N6CQb#927:!Pg-K1PH+d5p4H@k"@m;M7JP5@ZDE.I/#"r"UJC.Ne
%7)#bL&$YL:$g=T"6>%^<>bq]lpOqeV"__<3h:#"%fX:j1MT(cu_q9uq&OHH%g78^MELR6"m"mc\WS^o#'C'$"MF;$B%p0`d,B!l"
%M*CH8Z<]RX9dDBl/@/6IGXF@^G,nr7D"o;m1',;7Rpf=GF1-"J4SXh)T0D[ACVKdGenOfl>Jrc2%\[J$ODP,rZBZ$%N2-LS\*p(V
%WS4[ZdXrV%<L@GX6&dP1m!YR>S1pRg:guMCk.Hr-W%?7iRo/l*^q_ho&uY+)JG2c^aJ9+jE..OKn1j:53f#&'=6hSada3Gdo;<7j
%WYRY=fN[F#pU1XCD)XJ7b=Nt%*4Q$-8iZ@2oR-O&nM.[>EpW`+;3>n';nEG8/Sf4GVBYDE$e-or`]&8PSFE!`C&dY9f3'5VKtL3o
%^LMBR.jF=RPCZJFc!`@<b2;RpC>Rl:,q?9Nn!dbS8U,F<PKOk)AY560gP,9K)$b`SrRfprp7E?Z,*racKi7e=p=r,[24c]/RiF(#
%iFFH%/lmaF'jZi%YYhiD7B#CF="4[)aQ;=/5^P%LrB#J,]i_ENOEmn6d=Woa\Yl_e8G?=]l`@I+aHu*@ojNf#qJj8?<L:,dD6mC6
%.Q)7;V;9aLdim4__-@gfQ"[:hiDL6!g-FoUB<<c@:XVE?PVq]Icm[WQ)+9mqSL\X933&'9f(EG_NdfHKaf<1LZpC?F/3hk/J'uDP
%h%.VE8:NQa6%7k.(@2F]7E=T+qT96NJt/e40PFgkYeWQg8bnm\<Uf><4&;/PmN^=EP(g)m\!*B+8A_!t@D!+fY&#W12Jq;fRcGbI
%I+Yn`B',Jb)lI3Pj\K3gGnP,eJ\JP7Yp\7Qq#0H:%TW'9qi\fMK]Vq#n+*=n#LZlA6Kr?.%Uf.%F2G]cop:`tGkR!&4KCd8=rpF:
%A4al8=I'8=O_8t#Ac'lk;nfncE$t2=Gk&l2q`>;kSKs0F9iVCJ0PH!e$Mb4#?sN$/[I^T]g@=MCm5h1a<#s;j/HN^Z_qu<4.0Bee
%fTTjTB9uDi5LYXJmIIH@48DFCk?..*O$=5QEE7MO*9ADbH$h"b0Dm*c*7B8tIaW>;X0fH4CckUD^ZmuZ-'D'Xqb!X!g].VGLEDB9
%e,SMr=8QB(a#69Yg'pf)Ij(g<m/+udO2Ukhj]d%4p8ZBt]a+6,28XVCR^Ba&M7>bLo!rGt7k^KUlMHj(j]KFdX.QBS)dY^!,uB*i
%Se5<nLU#>"l\hC7`sZ4f7ZI81?9dW&pK)+F$hF;nL1fe!_oi:=$@#c=VnRNi`?sH-lBut4_9Ait<fEKQ]*m8bRt&1#K1'YG_Iq&f
%McXU#)l5<Z1/)8R@.EXlcE%tuQm6d0+'SKV_jF=aM4,$ij.\IK,C/t3cd6V3FBp9pc4&;1<],meOS;gN1QY5e%cDB[/\B(<W+'%(
%Dhmmd(TP"?@PEL3:KH#jQFL$6Ms9h@S\/&YLBb+^h@@[-?(/uqN<iXU)MhC65TR.@PG)lPZG0p`4L'17E?u4n6D7c'Rm/9(.E"4"
%1rc$k6L$8tc9TDX^*`LENClbqd1HP/Z]]I>d-T'1q&W;"JujX@k0$PP%tQZ6RLf)i9%&*#_I-(lIEGh!7J138gCq&FND<k$6/cC6
%e;R1p$\G(NDa?0;WJ&\H)fKPM%r@,e:#fb_'N_),c^.!AiTV2rgXEZ]K1`#r&on1IDYAOO.kT,b(_e`:"41nsn7UOhN5qICI1Z-4
%.%Olj*:ED%.m[NfdkaHtf')o"'5]pKZW/Ud:AADY/'Ye4$*a&3>SMXH\.6/tT@Ms,RlY=90/s6X^aEt:jRM=Zg<78n[2f-cOq6:;
%e!4NT+gA51[1Qm5lXW7He/"N<W*./b^0i*(PF8e#i3+Btb>*8`T@m)=m[aTNA0h.L8fsY^]MR`\:ZCpK5u#psTq'&T1Df'@Poe8*
%IN@\ij*\*gnI+M-D<:[^1WCSNgW=^R2Rgjfg-8s)anb;^K&["BiSaX0Xdjk]TlD,iBk@%@LNK6C+f,iLai>P.#Ulkr(r2Z>ZM\+F
%]&MfT#@S,5TWJH>IeehDh<Vp0<itLEn<N-oVn1#^n^OCP)**pD:&uWZ6SM^03tBEDbpMtdU\s^Z[+E\Q:YWVmIj+ZtGNg.!d3[cq
%oeHQ%T?gk4a.>NQYu&a9:Z>reoD=TelO8NG:0fd'6F1e>K'_8.!$p]LgYfP6`t9+qF]lZ28iX9(Uodj3IeS]m12J^Y?:K@+m&MD9
%k&u]@r/fFZ@0:@m*_F6C;Tk@B*/%hSPI:tK5Q!cm))R4:H9%c/c+Z7373<7!['K*6+e@cg#<B.['Wm$ufTWb(EIR_?Fr`P":r.Yn
%".HWf_Y,qQlY$dU@MagUJ@d\#OT'&]A:oY;TmMcSQR<&<YZ:j^PEloG<=s?7=E*caXD\Fh?'RaS^&QrHiWlF4nCJRshO/@BjOSff
%,#&ml79Gfu'U$tA\'hEWmNqbFJ0R^g9eVo8\)2uu&]T"dcYeOB?WU]9M,["0)+q]:d3;5h=MdT*Ck6a9MeU2DZ>b<58]qrEk/$e9
%T9M?hrETYj+tX$14D:#PL%;2K:*HQN2pp*u+CWtqGZ3rTkl.)/F2]F?J54fQ@=Rn=p\amB';qu6-G\;eejJ*l)qBR4-3V<E$'2`8
%DCrn]g>0gWOS^W&3a8A;R]U)n8^,;\G#-9<m@;jR<%3j-W+tqZ]U&ae(,FfaEU$,G2i44-6@3'pTsX`Gh"Q@o2gh@!%]7^h29;Si
%U$9W60<[@jBZ&R65IJe=G_VRKl>->3Q5Q;_!$X/Jl+,[49_D9N'=R9E0-`u,&+(WnMQDu`K.26D]le_LQ*.WYm\?6"h5W`]5lM^N
%=;4I]cBK(%di1*_Z6TUPi+]NLo2)O%SG&t!(oQaW^_2[HIM_aBS:S`(-6UDXab""t.cDo2i+K&bd6aV(XK$$f$2a3&>/bX!/*FAR
%c#D*LhSmF4&A%K!?aX"uZC*Q#5s5K$iU:;c=IF]c<OgO6&r[WMNoN-/p91d3XunfN5]p725k[5]?VNugU8H(fA@$a5<^,=mD@Fii
%:JGr0(\u_Vh5bL@U)acZ5J>I0Ktl9,2"utZAX/Y(lP.q6;*+S1E&EDsId?<DI"+?W6sH7jZdgt,`&T`N#Q]9KGcj#<#hDqk\(TcT
%#UdopH@Msum2Y@VqcU'anbMmuPC#-82O12&BPQlq>XnAhL<]j&0#*Era2<tVl_o7u(o[]NM%-M8UH7T(6L/_[[LNd9Kr!t$2P9ZC
%>s5S:Bu=u=0$c`."Cb0sfD@=j8)j)]_hhUg:XID7gh+2gO1GDB=k+R97([=A$#JRr]s"g8-Z?qP55IN*TDU>m\H>!lLbQ&3_E4?r
%pQYrCJEsDZZVRt"g%@.#>6YI2*Nu!?oeZC/^f4NFq+*T>]mPRcf[`=`I&5:ETCKpdQWHAuc=\f&!L1F;HKQfLG52O]!7ijtI.iD?
%5.c85Oc1_EjuX+5j[5C<f'i?\klYdNq"ggt=e""r3V!&7P_KiX?Md8U+9.1:cu'$GpHeNdT(o2.XIIme>>hE@XZ'OoQ5K4QJC%#i
%[eX$HZpiA[^u>K<*E4>Q:#u^DMB&tu2rPq_g:ZWV*DDLf(TfBA%bCjT'JK8tTkt1rD5rGNQ""Lfn5L^/h6!6[Wk[j!AeWDXp;LpZ
%)&>/#]fdpp0@N=lG+8?+aLet`';D8S8NS8+XH:8%3l@WtUem%?])8*]W\m@uDmhA6'o^'O]Pe*;!<Y.Zm%TH42Tn31iD&V(-CBca
%1EiBU90HuUEGOT^oh"Z!o;5*KUO9i)1m:6>l5IsI(,aJI-U6H/Gk<L=E%s^.UX@H&SBh79B,Y;8_''uMr>H.PGA,r3:`IjYC'\&-
%kP*jT`q3\3'_ir98/=aa<)S.XdY&&14Ge+JP-ClG"N,2JKJ34$S+WO]It[O0]Ysj"GM_tFX7p=E_ln"Une5k(Blf'?.:1$-ORtt\
%P(Z[f7oWI/HlY+9O?)sVNsln@H-JXB6U,8-5j.;P82!@!<_[i:o'8VHI_*sD,]jmHbP4^4#&RTm6jBA-nG/iXOO<TeKlB_!dalg\
%Nmi`d.fQf&_"@&Xf,[2_\XIliO0403d=\lT5W.Rb51:;0X>G?UCo_Lq_0)+\rrIMW[MS(%g<0>IAmEM%hh6]egt_Gr!H;nboahg`
%[^Ur$/)an8Uohjj*N(]c+E?Y4ID=3hf-jmP)/<*tHasQmd;-C#IUgW$O1-ZnA&Td3):e9Q-e`_+K@-K\EpMp*RXLNmRrt&"I9']u
%H)"IpPfo,nlCj6i/;.O.PI:sDIfG8u14138dWP10ahCBth6JC.=u&M)AaGE-kKA6PZC'2H>R8C&-Z'm%J,Orj133&HGT$?EZ`d9?
%g/eSEE;bI5huWRLX5W/1;=G<UTO.t[W1UG>V"=IZ[-R486rYh7?V'n@9P%L7`[-TDFr`\2](HJ5ALQ[%2%/@[r1pI(P(3I^oJ1NM
%ABT,=Y;H,+n[>lB)oY=aFisk1XLsYV7ksb'#7KK-r1pG>S_npk?&/H,QkJI.P0T3o'-7#M#jSDq?KV6)+d4V[$oiYVOo`PL3CT<]
%@m<QR$gC*Dm(ZYb1rr$_,ff4&o]qe0r>Vibqnr&U8M')R:[\*sLT#rtL`sYZE*/ft$=k`&G@:>:L#E3V:QJ=>UnZ"/&D,_TUh8*N
%Ps5@pfJ]")X$^&S?5H\+IFkMt-^=mc+fKoG\RZ0Z)!k@jn#F&15Yl=Td(m3qEYm,Zqjb\%])-liI&hIDJ>Y^ehqu')[qjn0If\qq
%,u37+?ku4,J9=c;9t6[;#EW*<Q\j4FX!/NB3meRmjD$X+Hj[g^BSs1M6==/bEZn9`mGKHA21mh,XDtn!8?gO;K448\-*1Ag5[N_c
%bML>tQ&.a[.Q'b8;`b7WP%ch(q.p0_^j:s!Anc4s3b=R&Wpm51.1-;Q*F,q;)ZlZ[862F@(mo72>'`&P83M?H@.W-.D[@n3@TGlT
%f)af`*R5nocMqliG7$#km#J,@@q52j<JOkt.nNdH%HnDWaIm>Q($hfKS[LV/1i1k0>gh+a4O\"A4sT%>Y]dY/eI3%d;f?In$ID>=
%i@P<SJaXr$^lfe?+jBOhaNY%nh@/.K$p0X.DFuE.=/VAp/0'fQ7*D8e8[4-f"I]QEg@d,.Oa472'bEWg6SIc^"S]5f'XN!XAt7Ae
%I&8TE'>.m!]g+b+3D8tA#9JBYUAo>#l1_o+r-[JgYC>TJ=D;#=T-iqqYQH2YlHJMF?N0IER4)jS@7%M8FgY`.N9VMi61>Nfa-EZ*
%Ys^4dLJi?l0GdH^hT.49a,h["4;tdA%6&Ls(\'gES95kS1;2hp`JZF#C'TG@gY7sSMnfX0?0JVgRp3u14_5^B;nE6;OVDZGX:B\\
%$/sA3UMlIePrM2am.La'o\rMl8fXc*a]p70CNJEe9LoC&@3<lCP@Phf+^;K)T`jkos"i<FC643m+shI9TGl2l"gHMHS8I66_dGZm
%gE1Aj^UEH;KBrXg^%1Wb*rJ)J(]L,fTF=_Nhe@inJ5g=^WSZ;sZ"dRS6<,jmM.fGr=kKac's?Hh?.em5M'4jiD^$c",k5Yr@N4N^
%jo!.4MK];Wh/9]^Wq4a`c*N[%GA8bGkXs?)X+b-28h:OdQQb[VH5E^TZfF\UW.4l!@,b$M<2V8U]_^mlbn"A@bIXY`SKK#0j\lPB
%>%K6M^f!iWN$O%TkqnpTor%7W,o/g_.G<%9Yk"S4VIl"E_BG!h'=(-m/DC#T%Q,O9Z7??qs18U"gN`b^S*p"^](3hHL"XCA4WLQE
%@`5"J]Q%O^]JK^b_Kp,I)1%l8?WN4bcLLtpbkflobf[(]MpQu#"+\Xe";2sCmV5aM%`Va[WO+jO0rP"jSr?44<i(groklVIH2eh%
%19W2jG3`fLQ.h((]8XaS?5/4!+OjI:[4T'F<(KkD"H[<AHQdCLHDgRmg-FXJT@VV&&-/eSIb#sr./!md>H'fUW&#^+lt-iVp"cMF
%j(ACfi1G*D-/gAlk@2)*030M1!>/TGEAs!5-q!#]"WU@2;HlH7[%_f?"ATje@`.IAALHuD2LLcf1#s=fFW2)u<pR(Dk#Z<,Z?WWM
%1(@tq%k;afb3+]g1tCqeNVB.U,U63;B@^.lQGcU^S_^0T;Nmj\+&kc_Rs#:7%ncR_!k6^r>VFTT`:_UU\mbPgfC+`pAMEi5aE8-Y
%>_WTgOP2Elc3!T4ap&N"%\3aA,9gn\g4CRmG"!-f\UQb_#J;"OnW59p9"geDpHQ0THiG13_Z0*iQiHG;ro=%XrqHHMTE"0IkFM+O
%s3'="_k6t\J,9'Bo=t;#TDn!1rPLl"rVuKP:OiD*s2_8?r.",6f;F,nVa(4Qs8CjSl-H"$q>^5.s">'-3Ze(N^\s5nl$rQ!J+rsF5V4>D~>
%AI9_PrivateDataEnd
